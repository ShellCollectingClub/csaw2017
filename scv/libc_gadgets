Gadgets information
============================================================
0x0000000000194f74 : adc ah, byte ptr [rcx - 0x5e1d0003] ; std ; jmp rdx
0x00000000001af1f0 : adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x000000000019cf85 : adc al, 0 ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001470ef : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147159 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001a7d40 : adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000000fccee : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000001a7d88 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000004b515 : adc al, 0 ; call 0x777f4
0x0000000000047065 : adc al, 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000033295 : adc al, 0 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000012af75 : adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001ace0c : adc al, 0x13 ; add dword ptr [rax], eax ; jo 0x1acdf3 ; jmp qword ptr [rcx]
0x00000000001510b5 : adc al, 0x13 ; jmp rdx
0x000000000009f5b5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000019d50c : adc al, 0x1a ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x000000000019b0b8 : adc al, 0x22 ; cli ; call rsp
0x00000000000fd3ea : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000039fc8 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000a9de3 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000c23ab : adc al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000001af40c : adc al, 0x39 ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x00000000001afa0c : adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x000000000007ef0a : adc al, 0x41 ; pop rsp ; ret
0x00000000000a7520 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a8373 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009f16b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000020825 : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001b090c : adc al, 0x4e ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c0c : adc al, 0x51 ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x000000000019aad0 : adc al, 0x52 ; stc ; call rsp
0x00000000001b110c : adc al, 0x56 ; add dword ptr [rax], eax ; nop ; jp 0x1b110f ; jmp qword ptr [rcx]
0x000000000019b2d0 : adc al, 0x56 ; cli ; jmp rsp
0x0000000000197c88 : adc al, 0x59 ; out dx, al ; call rsp
0x00000000001b2a0c : adc al, 0x6f ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x0000000000197dd8 : adc al, 0x71 ; out dx, al ; jmp rsp
0x000000000008635a : adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x00000000001b360c : adc al, 0x7b ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x000000000002ec97 : adc al, 0x88 ; add rax, rdx ; jmp rax
0x00000000000f76e6 : adc al, 0x89 ; ret 0xdaf7
0x0000000000072eee : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000005bf54 : adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e47 : adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000e1264 : adc al, 0x91 ; add rdx, rcx ; jmp rdx
0x0000000000148580 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000146cae : adc al, 0x91 ; sub eax, edx ; ret
0x00000000001510b1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000852ea : adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000089d97 : adc al, 0xa ; jmp r10
0x000000000009f723 : adc al, 0xa ; sub eax, edx ; ret
0x000000000005c14a : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x00000000000d9b17 : adc al, 0xa8 ; add rax, rdx ; jmp rax
0x00000000000cdcdd : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x000000000010ab44 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001a790c : adc al, 0xbe ; add byte ptr [rax], al ; adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x0000000000048031 : adc al, 0xc0 ; mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000019b620 : adc al, 0xc3 ; cli ; jmp rsp
0x0000000000048035 : adc al, 0xc6 ; xor eax, eax ; pop rbx ; ret
0x0000000000035f44 : adc al, 0xc7 ; xor eax, eax ; ret
0x00000000001977f8 : adc al, 0xcc ; in eax, dx ; inc esp ; ret 0
0x00000000000bb252 : adc al, 0xe ; jne 0xbb24d ; ret
0x0000000000144dc1 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000002b87 : adc al, 0xe7 ; ret
0x00000000000c1555 : adc al, 0xe9 ; ret 0xffef
0x00000000000c260c : adc al, 0xe9 ; ret 0xfff9
0x0000000000173e21 : adc al, 0xea ; test rdx, rdx ; je 0x173e31 ; call rdx
0x0000000000197171 : adc al, 0xeb ; call rsp
0x00000000000a7ee9 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000001aac31 : adc al, 0xf2 ; call qword ptr [rdx]
0x0000000000198e99 : adc al, 0xf5 ; call rsp
0x00000000001992c9 : adc al, 0xf6 ; call rsp
0x000000000019569d : adc al, 0xfc ; call qword ptr [rax - 0x1f0003eb]
0x0000000000197930 : adc al, 0xfe ; in eax, dx ; call rsp
0x00000000001727d8 : adc al, 1 ; add byte ptr [rax], al ; ret
0x000000000007d9bf : adc al, 2 ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e6
0x00000000000b9f3f : adc al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000009ebb6 : adc al, 7 ; cmp edx, esi ; je 0x9ebb7 ; ret
0x000000000009eae2 : adc al, 7 ; test dl, dl ; jne 0x9eadf ; ret
0x0000000000044e0f : adc al, 9 ; ret 0x9f74
0x00000000001951f0 : adc al, bl ; sti ; call rax
0x0000000000147297 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147301 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000057e8 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000007600 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000021bdd : adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x00000000000222bb : adc al, byte ptr [rax] ; mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000063882 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000005bf50 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000063e43 : adc al, byte ptr [rax] ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000b05bd : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccd9ae0
0x00000000000b5a65 : adc al, byte ptr [rbx - 0x76b7cf05] ; call 0x4ccdef88
0x00000000001ab5aa : adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001acd7d : adc al, byte ptr [rcx] ; add al, ah ; fpatan ; jmp qword ptr [rcx]
0x00000000001acd95 : adc al, byte ptr [rcx] ; add al, bh ; fpatan ; jmp qword ptr [rcx]
0x00000000001acd25 : adc al, byte ptr [rcx] ; add al, cl ; fpatan ; call qword ptr [rsi]
0x00000000001acd65 : adc al, byte ptr [rcx] ; add al, cl ; fpatan ; jmp qword ptr [rcx]
0x00000000001acddd : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], al ; jmp qword ptr [rcx]
0x00000000001acdf5 : adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000000a2a14 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000046eef : adc al, ch ; imul edi, eax, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000f34ee : adc al, ch ; insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000d1977 : adc al, ch ; ret
0x00000000001baae1 : adc bh, al ; jmp qword ptr [rbx]
0x0000000000003afb : adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000195ee0 : adc bh, byte ptr [rbp - 4] ; call qword ptr [rdx + 0x12fffc7c]
0x0000000000195ef0 : adc bh, byte ptr [rbx - 4] ; call qword ptr [rdx + 0x12fffc7a]
0x00000000000ac820 : adc bh, byte ptr [rbx] ; ja 0xac834 ; cmove rax, rcx ; ret
0x0000000000195ef8 : adc bh, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x12fffc79]
0x0000000000195ee8 : adc bh, byte ptr [rsp + rdi*8 - 1] ; xchg eax, edx ; jnp 0x195ef2 ; call qword ptr [rdx]
0x0000000000187e80 : adc bh, ch ; int1 ; jmp qword ptr [rax]
0x00000000000e1fd9 : adc bh, dh ; ret 0x30f
0x000000000011e174 : adc bh, dh ; ret 0x8080
0x0000000000195248 : adc bl, ah ; sti ; call qword ptr [rax]
0x00000000001ae7d0 : adc bl, bl ; hlt ; call qword ptr [rbx]
0x0000000000034f38 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000195278 : adc bl, bl ; sti ; push rax ; fdiv st(3), st(0) ; call rax
0x0000000000196408 : adc bl, byte ptr [rsi - 0x627d0004] ; cld ; call qword ptr [rdx]
0x000000000008f965 : adc bl, ch ; call 0xffffffffc3d982ba
0x0000000000089a75 : adc bl, ch ; call 0xffffffffc40123ca
0x000000000008b275 : adc bl, ch ; call 0xffffffffc4013bca
0x0000000000048982 : adc bl, ch ; jno 0x489d8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000008f284 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000a6b06 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e76 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5ee7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5e47 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000002da6a : adc bl, dh ; ret
0x00000000000a6b05 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e75 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000079616 : adc byte ptr [r11 + 6], r14b ; movzx eax, byte ptr [rax] ; ret
0x0000000000115151 : adc byte ptr [r13 - 0xcf68a40], r8b ; ret
0x0000000000089382 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000003737d : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037eca : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000037376 : adc byte ptr [r8 + 0x39], r9b ; ret
0x00000000001435b7 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000c84b9 : adc byte ptr [r8 - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc848d
0x000000000007cd7c : adc byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000cf485 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000a9d5c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d7e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000074083 : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000004857c : adc byte ptr [rax + 0x29], cl ; ret
0x0000000000052b9f : adc byte ptr [rax + 0x29], cl ; ret 0x8b48
0x0000000000037377 : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000136042 : adc byte ptr [rax + 0x39], cl ; ret 0x1872
0x0000000000108a5f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000e2411 : adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e2436 : adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x000000000007eaab : adc byte ptr [rax + 0x39], cl ; ret 0xef75
0x0000000000136041 : adc byte ptr [rax + 0x39], r9b ; ret 0x1872
0x0000000000108a5e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000001435b8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000078b3b : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001096ba : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000012eb3a : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x00000000001322d6 : adc byte ptr [rax + 1], bh ; ret
0x00000000000aaf8e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000004906e : adc byte ptr [rax + 1], cl ; ret
0x000000000009f166 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000010a1e8 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000013599d : adc byte ptr [rax + 1], dil ; ret
0x00000000000d8e0f : adc byte ptr [rax + 2], bh ; ret
0x00000000000a9f64 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9e62 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9de0 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000fda13 : adc byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000010ab41 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000002da63 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000944e4 : adc byte ptr [rax - 0x73], cl ; jg 0x94501 ; jne 0x944d8 ; ret
0x000000000010ad65 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000010ad64 : adc byte ptr [rax - 0x73], r9b ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000020828 : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000009490a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000a585c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000071c77 : adc byte ptr [rax - 0x77], cl ; jo 0x71c95 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072fac : adc byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; ret
0x00000000000c84ba : adc byte ptr [rax - 0x77], cl ; out dx, al ; xor edx, edx ; jmp 0xc848c
0x000000000012bfeb : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000071c37 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000023654 : adc byte ptr [rax - 0x77], cl ; push rbp ; test al, 0xe8 ; ret 0xffff
0x00000000000891d2 : adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000392b3 : adc byte ptr [rax - 0x77], cl ; ret
0x000000000007cd7d : adc byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000115c96 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x0000000000061d02 : adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000003d6d4 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x0000000000082c39 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4e
0x000000000012fae4 : adc byte ptr [rax - 0x77], cl ; ret 0x948
0x00000000000e5704 : adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000014dc2f : adc byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001657b7 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x00000000001657f3 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1604 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x0000000000123440 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x000000000005bce1 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000087293 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002656a : adc byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000048d91 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000495a9 : adc byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000fe817 : adc byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000ea96b : adc byte ptr [rax - 1], bh ; ret
0x0000000000195bf0 : adc byte ptr [rax - 4], al ; call qword ptr [rax + 0x10fffc41]
0x00000000000fc2eb : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000006abcc : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000149511 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001474a1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000003b19c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012d89a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000012bf35 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000aacc3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008bb5c : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000018ab8d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000006b454 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6b469 ; ret
0x00000000001156f1 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000080fda : adc byte ptr [rax], al ; mov edx, 0x234 ; call 0x7d289
0x000000000008105b : adc byte ptr [rax], al ; mov edx, 0x237 ; call 0x7d289
0x0000000000088855 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x88824
0x0000000000088854 : adc byte ptr [rax], al ; mov rdx, rcx ; jmp 0x88825
0x00000000000852e6 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000045afb : adc byte ptr [rax], al ; ret
0x0000000000195b9c : adc byte ptr [rax], bh ; cld ; call qword ptr [rax + 0x10fffc39]
0x00000000000d8e85 : adc byte ptr [rax], bh ; ret 0x860f
0x00000000000d8da8 : adc byte ptr [rax], bh ; ret 0x870f
0x0000000000195590 : adc byte ptr [rax], ch ; cld ; call rax
0x0000000000194df8 : adc byte ptr [rax], cl ; sti ; jmp rax
0x00000000000a9d5d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d7f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9f41 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000e7df1 : adc byte ptr [rbp + 0x39], al ; enter -0x2e89, 0x39 ; ret
0x000000000007ee9a : adc byte ptr [rbp + 0x39], cl ; ret
0x0000000000048525 : adc byte ptr [rbp + rcx*4 + 0x34], cl ; ret 0x8d4a
0x000000000008f428 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x00000000000944e8 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000194f40 : adc byte ptr [rbp - 0x796f0005], al ; sti ; call qword ptr [rax]
0x00000000000c49f3 : adc byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000102c67 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000115152 : adc byte ptr [rbp - 0xcf68a40], al ; ret
0x00000000000ac952 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000195b30 : adc byte ptr [rbp - 4], dl ; call qword ptr [rax + 0x10fffc54]
0x0000000000082d70 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000850bb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003adb0 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a5e53 : adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001a1d6d : adc byte ptr [rbx + 0xa], ch ; ret
0x00000000001a02bc : adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000079617 : adc byte ptr [rbx + 6], dh ; movzx eax, byte ptr [rax] ; ret
0x0000000000194f28 : adc byte ptr [rbx + rdi*8 - 1], bh ; nop ; jge 0x194f31 ; call qword ptr [rax]
0x000000000007c892 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000075ad7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x75af1 ; ret
0x00000000000aa960 : adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x0000000000123ccb : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000000ac99f : adc byte ptr [rbx - 0x7cb703ba], cl ; ret
0x00000000001152e6 : adc byte ptr [rbx - 0x7d], bl ; loopne 0x1152ff ; pop rbp ; pop r12 ; ret
0x00000000001b0580 : adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195bf8 : adc byte ptr [rbx - 4], al ; call qword ptr [rax + 0x10fffc44]
0x0000000000194f10 : adc byte ptr [rbx - 5], dh ; call qword ptr [rax + 0x10fffb74]
0x0000000000195ba4 : adc byte ptr [rbx], bh ; cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000112ee5 : adc byte ptr [rbx], ch ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000074084 : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x0000000000095127 : adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x00000000000edc60 : adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000074fe7 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000008605b : adc byte ptr [rcx + rcx*4 - 0x1a], cl ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006c478 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9ec2 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ea2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x0000000000172b38 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000fe7e2 : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000331b0 : adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000fe862 : adc byte ptr [rcx - 0x77], cl ; ret 0x8348
0x00000000000e3cdc : adc byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b8cf8 : adc byte ptr [rcx - 0x7cb7e8cc], cl ; ret 0x4804
0x00000000000b8c7c : adc byte ptr [rcx - 0x7cb7eecc], cl ; ret 0x4804
0x000000000007ee47 : adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000012faa1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3c87 : adc byte ptr [rcx - 0x7d], cl ; ret 0x4201
0x00000000000b973b : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x0000000000144e43 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000012fccf : adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x00000000001489e7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000195bb4 : adc byte ptr [rcx - 4], al ; call qword ptr [rax + 0x10fffc42]
0x0000000000194f20 : adc byte ptr [rcx - 5], bh ; call qword ptr [rax + 0x10fffb7a]
0x00000000001acbed : adc byte ptr [rcx], al ; add al, dh ; ret
0x00000000000ba324 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012ed3d : adc byte ptr [rcx], bh ; ret
0x0000000000195614 : adc byte ptr [rcx], ch ; cld ; push rax ; sub bh, ah ; call rax
0x000000000003ad3e : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007c895 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000086a79 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001240f7 : adc byte ptr [rcx], dh ; rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x00000000000fcded : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfce29 ; ret
0x000000000010eea3 : adc byte ptr [rdi + 0x2000004], bh ; call rax
0x00000000001a7910 : adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001a6440 : adc byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x00000000000c7886 : adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001b0a00 : adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x0000000000195bc4 : adc byte ptr [rdi - 4], al ; call qword ptr [rax + 0x10fffc48]
0x0000000000195e50 : adc byte ptr [rdi - 4], dh ; call rax
0x0000000000195b20 : adc byte ptr [rdi - 4], dl ; call qword ptr [rax + 0x10fffc56]
0x0000000000194f30 : adc byte ptr [rdi - 5], bh ; call qword ptr [rax + 0x10fffb80]
0x0000000000195630 : adc byte ptr [rdi], ah ; cld ; call rax
0x000000000011e27e : adc byte ptr [rdi], al ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000002de55 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000001193ca : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000089383 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000035d72 : adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000168898 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000170903 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000146031 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146121 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f41 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014d85b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c35f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014d55f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cc5f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cf5f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c657 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146989 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000001464e1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000145c71 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00000000001466c1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145e51 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001468a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001467b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001460f3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001461e3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146003 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c904 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d504 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d804 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf04 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc04 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000014c5fc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d61 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000149c8d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149aad : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a485 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493a5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2a5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145f13 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d33 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e23 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145c43 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000035de3 : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5489
0x000000000009a6f8 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000000000003737e : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000037ecb : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000edc69 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x0000000000195bd8 : adc byte ptr [rdi], dh ; cld ; call qword ptr [rax + 0x10fffc38]
0x00000000000378ec : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000003955 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00000000001515a9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000062031 : adc byte ptr [rdx + rdx*8 - 0x76b7d08c], al ; ret
0x0000000000194f38 : adc byte ptr [rdx - 0x7c6f0005], al ; sti ; call qword ptr [rax]
0x00000000001b0c40 : adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000012835f : adc byte ptr [rdx], al ; je 0x12836c ; ret
0x0000000000195be0 : adc byte ptr [rdx], bh ; cld ; call qword ptr [rax + 0x10fffc3b]
0x0000000000195678 : adc byte ptr [rdx], ch ; cld ; push rax ; sub edi, esp ; jmp rax
0x000000000016efeb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000195b94 : adc byte ptr [rip + 0x3690fffc], dh ; cld ; call qword ptr [rax]
0x0000000000195be8 : adc byte ptr [rip + 0x3e90fffc], bh ; cld ; call qword ptr [rax]
0x00000000001407dd : adc byte ptr [rip - 0x3fcf0000], al ; pop rbx ; ret
0x000000000016ee9a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000016e495 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089ee5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000a605b : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a605a : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000195c00 : adc byte ptr [rsi - 4], al ; call qword ptr [rax + 0x10fffc47]
0x0000000000195b28 : adc byte ptr [rsi - 4], dl ; call qword ptr [rax + 0x10fffc55]
0x0000000000194f18 : adc byte ptr [rsi - 5], dh ; call qword ptr [rax + 0x10fffb77]
0x0000000000195bac : adc byte ptr [rsi], bh ; cld ; call qword ptr [rax + 0x10fffc3f]
0x000000000003afea : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000195bbc : adc byte ptr [rsp + rdi*8 - 1], al ; nop ; cld ; call qword ptr [rax]
0x0000000000195b38 : adc byte ptr [rsp + rdi*8 - 1], dl ; nop ; push rbx ; cld ; call qword ptr [rax]
0x00000000000bb8fa : adc byte ptr [rsp - 0x10], al ; ret
0x000000000004a18f : adc byte ptr [rsp - 4], al ; ret
0x000000000004a1d5 : adc byte ptr [rsp - 8], al ; ret
0x000000000014c907 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187e0c : adc ch, ch ; int1 ; jmp qword ptr [rax]
0x0000000000195244 : adc cl, ah ; sti ; call qword ptr [rax]
0x000000000009f545 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000bc5ee : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc56f : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000aa833 : adc cl, byte ptr [rax - 0x2f] ; call 0xffffffffc30f358f
0x000000000004acef : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x000000000009f85d : adc cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000fe5b8 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000004709d : adc cl, byte ptr [rax - 0x7d] ; call 0xffffffffc33db8ad
0x00000000000ff98e : adc cl, byte ptr [rax - 0x7d] ; ret
0x00000000000e3a6c : adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x000000000009b6f4 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000089a65 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000004acf2 : adc cl, byte ptr [rbx + rcx*4 + 0x74] ; ret 0x4c40
0x00000000000b8a74 : adc cl, byte ptr [rcx - 0x7cb7e8cc] ; ret 0x4804
0x00000000000495a1 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000072854 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4410
0x00000000000548df : adc cl, ch ; ret
0x00000000001a1640 : adc cl, cl ; in al, dx ; call rsp
0x000000000008f310 : adc dh, bh ; ret
0x00000000001952e0 : adc dh, bl ; sti ; jmp rax
0x000000000012c6fe : adc dh, dh ; ret 0x7401
0x000000000008156e : adc dh, dh ; ret 0xf0f
0x00000000000022e3 : adc dh, dl ; ret
0x00000000000091b8 : adc dl, al ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001acdb0 : adc dl, bl ; jmp qword ptr [rcx]
0x000000000006bc5e : adc dl, byte ptr [rdx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000025946 : adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000048f13 : adc dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000074075 : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000495ec : adc dword ptr [rax - 0x73], ecx ; add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000017435b : adc dword ptr [rax - 0x75], ecx ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a51e : adc dword ptr [rax - 0x77], ecx ; ret
0x000000000007dfd5 : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x000000000007c83c : adc dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000b8c7f : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000d8fd6 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000089387 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000014aeab : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000013efc9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000111409 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000147437 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001493a9 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019cc8d : adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19cc96 ; jmp qword ptr [rdi]
0x00000000001742fb : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000006589c : adc dword ptr [rax], eax ; add dh, dh ; ret
0x000000000008103c : adc dword ptr [rax], eax ; mov edx, 0x23a ; call 0x7d289
0x0000000000029c44 : adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x000000000006bc82 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006cbb9 : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x000000000006ca9b : adc dword ptr [rax], eax ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000009731a : adc dword ptr [rbp + 0x38], eax ; ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000003b172 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000d8fb8 : adc dword ptr [rcx + 0x39], ecx ; ret 0xc76
0x000000000009fe87 : adc dword ptr [rcx + 7], edi ; ret
0x000000000009fb22 : adc dword ptr [rcx - 1], ebx ; ret
0x000000000009fae6 : adc dword ptr [rcx - 1], edi ; ret
0x00000000001acce5 : adc dword ptr [rcx], eax ; add al, cl ; fpatan ; call qword ptr [rbx]
0x000000000013c19e : adc dword ptr [rcx], eax ; ja 0x13c1d2 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000021bdb : adc dword ptr [rcx], ebx ; adc al, byte ptr [rax] ; mov rdi, rbx ; call r14
0x000000000010c996 : adc dword ptr [rcx], esi ; rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000010d0c3 : adc dword ptr [rdi - 0x76b7ffd5], eax ; ret 0x8d48
0x000000000009ffe9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000001a9430 : adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00000000000348c4 : adc dword ptr [rdi], ecx ; ret
0x000000000003488d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000034c22 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000000aa5bc : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000006bd9a : adc dword ptr [rdx], edx ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000aa6ef : adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa78c : adc dword ptr [rsi + 7], edx ; ret
0x00000000000e0fc2 : adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f64
0x00000000000c9953 : adc dword ptr [rsi - 0x76b7ffd1], edi ; ret 0x8d48
0x00000000000aa58e : adc dword ptr [rsi - 1], edx ; ret
0x0000000000147436 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000aaf8a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x0000000000194e31 : adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000000dec47 : adc eax, 0x1fffffe ; ret 0x8b49
0x000000000017431b : adc eax, 0x252558 ; je 0x17432a ; ret
0x0000000000140d37 : adc eax, 0x2846d4 ; add rsp, 8 ; ret
0x00000000001381d9 : adc eax, 0x290dc2 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012dd72 : adc eax, 0x295e09 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000010956f : adc eax, 0x2baccc ; je 0x109580 ; pop rbp ; ret
0x00000000000ffa1e : adc eax, 0x2c76cd ; add rsp, 8 ; ret
0x000000000008958a : adc eax, 0x33a9c9 ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x00000000000886a1 : adc eax, 0x33e172 ; add rsp, 0x18 ; ret
0x0000000000041c3d : adc eax, 0x358d4800 ; ret
0x0000000000137342 : adc eax, 0x3609 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000368ad : adc eax, 0x38d7d6 ; ret
0x000000000002e196 : adc eax, 0x395d95 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002cae9 : adc eax, 0x398faf ; ret
0x000000000001f929 : adc eax, 0x3a99da ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000abc1a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001162ac : adc eax, 0x4003f ; cmove rax, rdx ; ret
0x00000000000f5f57 : adc eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000013418d : adc eax, 0x48ffffff ; mov edi, ebp ; call rax
0x0000000000034ab6 : adc eax, 0x540f6600 ; ret 0xf66
0x0000000000034cdc : adc eax, 0x590ff300 ; enter 0x280f, -0x3f ; ret
0x00000000000a6808 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000a7f1c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000019b965 : adc eax, 0x77340001 ; std ; call rsp
0x0000000000146fc1 : adc eax, 0x83480000 ; ret 0xe910
0x00000000000234fd : adc eax, 0x83489066 ; ret
0x000000000014006d : adc eax, 0x8348fffc ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000de2bd : adc eax, 0x8949fff4 ; ret 0x8949
0x000000000003d249 : adc eax, 0xc1834900 ; add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000008f197 : adc eax, 0xc7164 ; cmove rax, rdx ; ret
0x00000000001ad00d : adc eax, 0xd400001 ; hlt ; jmp rcx
0x00000000000abf1a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000006e511 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x00000000000c18ff : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000014ac0e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001491c9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000e458 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000091ba : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004b600 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000fba1c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000001ace0d : adc eax, dword ptr [rcx] ; add byte ptr [rax - 0x26], dh ; jmp qword ptr [rcx]
0x000000000011e2a3 : adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000a2a18 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000014c5ff : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000482f9 : adc eax, eax ; ret
0x0000000000048436 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000183d85 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000118660 : adc ebp, ebx ; ret 0x1f0f
0x00000000000896d4 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010ad6c : adc ebx, eax ; nop ; mov eax, edi ; ret
0x000000000013d67e : adc ecx, dword ptr [rax + 0x39] ; ret
0x000000000002cb2b : adc ecx, dword ptr [rax - 0x75] ; cli ; ret
0x000000000007ba4a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000024301 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000099a6d : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000ac604 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x00000000000e3f25 : adc ecx, dword ptr [rbp + 0xf049044] ; xchg eax, esp ; ret 0x9848
0x0000000000127a94 : adc ecx, dword ptr [rbx + rcx*4 + 0x25] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000adcd9 : adc ecx, dword ptr [rcx - 0x77] ; ret 0x8b8
0x000000000012de40 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000a2be4 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000a2c04 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000a2c24 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000a2a6e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000000dbeaa : adc ecx, edx ; call 0x42d047f7
0x00000000000dbefa : adc ecx, edx ; call 0x43d04847
0x000000000019a3b1 : adc edi, eax ; call rsp
0x0000000000199ab9 : adc edi, esi ; jmp rsp
0x0000000000199ab8 : adc edi, r14d ; jmp rsp
0x000000000018529e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000199b09 : adc esi, edi ; call rsp
0x00000000001aaba1 : adc esi, edx ; jmp qword ptr [rcx]
0x000000000006ee5a : adc esi, esi ; ret 0xf20
0x000000000014c7e2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000009fe86 : adc qword ptr [rcx + 7], rdi ; ret
0x000000000009fb21 : adc qword ptr [rcx - 1], rbx ; ret
0x000000000009fae5 : adc qword ptr [rcx - 1], rdi ; ret
0x000000000009ffe8 : adc qword ptr [rdi - 8], rdi ; ret
0x00000000000aa6ee : adc qword ptr [rsi + 3], rdx ; ret
0x00000000000aa78b : adc qword ptr [rsi + 7], rdx ; ret
0x00000000000aa58d : adc qword ptr [rsi - 1], rdx ; ret
0x000000000008f283 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000006e510 : adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000149330 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048435 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008f30f : adc sil, r15b ; ret
0x00000000001acddb : add ah, ah ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], al ; jmp qword ptr [rcx]
0x00000000001bc0db : add ah, ah ; add eax, 0x73f00002 ; clc ; call qword ptr [rdi]
0x000000000019b15f : add ah, ah ; cli ; jmp rsp
0x000000000019a9ff : add ah, ah ; cmp edi, ecx ; jmp rsp
0x0000000000197e6f : add ah, ah ; fldz ; call rsp
0x000000000019849f : add ah, ah ; int1 ; call rsp
0x000000000019693f : add ah, ah ; jbe 0x196930 ; jmp rsp
0x0000000000196a6f : add ah, ah ; jg 0x196a60 ; jmp rsp
0x00000000001a75db : add ah, ah ; mov edx, 0x75c00000 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001979a7 : add ah, ah ; or dh, ch ; jmp rsp
0x00000000001baadb : add ah, ah ; out dx, eax ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b0edb : add ah, ah ; push rbx ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0ee0 ; jmp qword ptr [rcx]
0x000000000019b30f : add ah, ah ; push rdi ; cli ; jmp rsp
0x000000000019b997 : add ah, ah ; ret 0xfffd
0x00000000001a92db : add ah, ah ; xlatb ; add byte ptr [rax], al ; jo 0x1a930e ; int1 ; jmp rcx
0x00000000001b0abb : add ah, al ; add qword ptr [r8], r8 ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001adbbb : add ah, al ; and byte ptr [rcx], al ; add al, ah ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000019f6bb : add ah, al ; cmp eax, dword ptr [rax] ; add byte ptr [rax], ah ; sub edx, ebp ; jmp rax
0x00000000001a94bb : add ah, al ; fld dword ptr [rax] ; add byte ptr [rax + 0x30], dl ; int1 ; jmp qword ptr [rcx]
0x000000000019a0d7 : add ah, al ; in al, -9 ; jmp qword ptr [rbx + rax*8]
0x000000000019b467 : add ah, al ; jg 0x19b469 ; call rsp
0x00000000001b2bbb : add ah, al ; jo 0x1b2bc8 ; add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x000000000019aca7 : add ah, al ; mov bh, cl ; call rsp
0x000000000019674f : add ah, al ; mov bl, 0xe8 ; call rsp
0x000000000019981f : add ah, al ; mov bl, 0xf6 ; jmp rsp
0x000000000019815f : add ah, al ; mov ebp, edi ; jmp rsp
0x000000000019b3bf : add ah, al ; pop rbp ; cli ; call rsp
0x00000000001aeebb : add ah, al ; xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001acdf3 : add ah, bh ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000001a116b : add ah, bh ; add byte ptr [rax], al ; add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x00000000000aac1e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac3e : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001b08f3 : add ah, bh ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b07f3 : add ah, bh ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b05f3 : add ah, bh ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001954b5 : add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000aacd6 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabfd : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001953b1 : add ah, bh ; jmp rax
0x00000000001a15f3 : add ah, bh ; pop rdx ; add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x00000000001b0bf3 : add ah, bh ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0bf8 ; jmp qword ptr [rcx]
0x0000000000195391 : add ah, bh ; push rax ; add esp, edi ; call rax
0x00000000001b2620 : add ah, bh ; ret
0x00000000001a85f3 : add ah, bh ; retf 0 ; call 0x131a7659
0x00000000001a0ad3 : add ah, bl ; add byte ptr [r8], r8b ; mov byte ptr [rbx - 0x15], dl ; call rcx
0x00000000001afcd3 : add ah, bl ; add dword ptr [r8], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001b0ad3 : add ah, bl ; add qword ptr [r8], r8 ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001adbd3 : add ah, bl ; and byte ptr [rcx], al ; add al, bh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001ab0d3 : add ah, bl ; cmc ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001af4d3 : add ah, bl ; cmp dword ptr [rcx], eax ; add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001af8d3 : add ah, bl ; cmp eax, 0x1e280001 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2bd3 : add ah, bl ; jo 0x1b2be0 ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6bd3 : add ah, bl ; mov al, 0 ; add byte ptr [rax - 0x4f], bh ; out dx, al ; call qword ptr [rax]
0x00000000001a45d3 : add ah, bl ; mov al, byte ptr [rax] ; add byte ptr [rax], ch ; je 0x1a45d0 ; call qword ptr [rcx]
0x00000000001a3fa7 : add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a4178 : add ah, byte ptr [rdx + 0x41280e0a] ; ret
0x00000000000aa6ea : add ah, byte ptr [rdx - 0xf] ; jl 0xaa73f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000a2a6b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001acce3 : add ah, ch ; adc dword ptr [rcx], eax ; add al, cl ; fpatan ; call qword ptr [rbx]
0x00000000001b09e3 : add ah, ch ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adee3 : add ah, ch ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a36e3 : add ah, ch ; jnp 0x1a36ef ; add al, ch ; cmp al, 0xed ; jmp qword ptr [rdi]
0x0000000000187473 : add ah, ch ; out dx, al ; call rsp
0x00000000001b2ae3 : add ah, ch ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b240d
0x00000000001a6ae3 : add ah, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a66e3 : add ah, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cwde ; jae 0x1a66e1 ; jmp qword ptr [rdx]
0x00000000001b3bc3 : add ah, cl ; add byte ptr [rcx], 0 ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b00c3 : add ah, cl ; add dword ptr [r8], r8d ; cmc ; jmp rax
0x00000000001b07c3 : add ah, cl ; add qword ptr [rax], r8 ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b05c3 : add ah, cl ; add qword ptr [rax], rax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001a93c3 : add ah, cl ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], ch ; int1 ; call qword ptr [rcx]
0x00000000001aa0c3 : add ah, cl ; in eax, 0 ; add byte ptr [rax - 0x17], cl ; int1 ; jmp qword ptr [rdi]
0x00000000001a6cc3 : add ah, cl ; mov cl, 0 ; add byte ptr [rax - 0x23], bl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001b29c3 : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b0bc3 : add ah, cl ; push rax ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001a85c3 : add ah, cl ; retf 0 ; call 0x211a7629
0x000000000019d4c3 : add ah, cl ; sbb dword ptr [rax], eax ; add al, cl ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001ab1c3 : add ah, cl ; test byte ptr [rax], 0 ; sub byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x00000000001aebc3 : add ah, cl ; xor byte ptr [rcx], al ; add byte ptr [rax], bh ; jrcxz 0x1aebc7 ; jmp qword ptr [rcx]
0x00000000001acbeb : add ah, dh ; adc byte ptr [rcx], al ; add al, dh ; ret
0x00000000001b02eb : add ah, dh ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001ae9eb : add ah, dh ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af1eb : add ah, dh ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0aeb : add ah, dh ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000198eef : add ah, dh ; and ch, dh ; jmp rsp
0x00000000001ab0eb : add ah, dh ; cmc ; add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001af8eb : add ah, dh ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x0000000000196e5f : add ah, dh ; cmp edx, ebp ; jmp rsp
0x00000000001a61eb : add ah, dh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x1a622e ; out dx, al ; jmp qword ptr [rcx]
0x00000000001b2beb : add ah, dh ; jo 0x1b2bf8 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a0b7 : add ah, dh ; jrcxz 0x19a0b8 ; inc esp ; ret 1
0x00000000001a67eb : add ah, dh ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jle 0x1a67e9 ; jmp qword ptr [rcx]
0x000000000019b99f : add ah, dh ; ret 0xfffd
0x000000000019ae67 : add ah, dh ; sar cl, 1 ; call rsp
0x00000000001ad7eb : add ah, dh ; sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x0000000000199c07 : add ah, dh ; sbb edi, esi ; call rsp
0x00000000001981a7 : add ah, dh ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x00000000001975ef : add ah, dh ; xchg eax, esp ; in eax, dx ; jmp rsp
0x00000000001b09cb : add ah, dl ; add qword ptr [rax], r8 ; loopne 0x1b0a48 ; cmc ; jmp qword ptr [rcx]
0x00000000001aafcb : add ah, dl ; hlt ; add byte ptr [rax], al ; mov al, 0x22 ; jmp qword ptr [rcx]
0x00000000001abacb : add ah, dl ; inc dword ptr [rax] ; add al, dh ; ret
0x00000000001968ff : add ah, dl ; jae 0x1968f0 ; jmp rsp
0x00000000001985e7 : add ah, dl ; je 0x1985e0 ; jmp rsp
0x0000000000198a87 : add ah, dl ; jmp rsp
0x000000000019924f : add ah, dl ; or al, 0xf6 ; call rsp
0x00000000001b1acb : add ah, dl ; pop rdi ; add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001b0ccb : add ah, dl ; push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b11cb : add ah, dl ; push rsi ; add dword ptr [rax], eax ; push rax ; jnp 0x1b11d0 ; jmp qword ptr [rcx]
0x000000000019b70f : add ah, dl ; salc ; cli ; call rsp
0x00000000001ad7cb : add ah, dl ; sbb al, 1 ; add al, dl ; stc ; call qword ptr [rax]
0x00000000001976e7 : add ah, dl ; scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x00000000001ae7cb : add ah, dl ; sub al, 1 ; add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001ae5cb : add ah, dl ; sub al, byte ptr [rcx] ; add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x000000000004b2d8 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f12c3 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000047463 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000127091 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001224f0 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000014557d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a0c9 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001455a1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001439ef : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000000b320 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000103652 : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000005ae21 : add al, 0 ; add byte ptr [rax], al ; mov rdi, r12 ; call 0x117129
0x00000000000abfa3 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d878c : add al, 0 ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000134a7b : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006a96f : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001bd059 : add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x0000000000026e51 : add al, 0 ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000662b5 : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x000000000007e54d : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000080941 : add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010eea5 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x0000000000040f83 : add al, 0 ; add cl, ch ; ret 0xffec
0x000000000007f0c6 : add al, 0 ; add dh, dh ; ret
0x0000000000122943 : add al, 0 ; add dh, dh ; ret 0xf04
0x00000000001162af : add al, 0 ; cmove rax, rdx ; ret
0x000000000009ea94 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000014199b : add al, 0 ; mov edx, 0x159 ; call 0x2dc49
0x000000000009ea04 : add al, 0 ; mov rax, rdi ; ret
0x0000000000045afa : add al, 0x10 ; add bl, dh ; ret
0x0000000000130300 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x000000000002da69 : add al, 0x10 ; ret
0x000000000010ac95 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x000000000010ad6b : add al, 0x11 ; ret
0x00000000000aac6d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000004e619 : add al, 0x13 ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000019b99c : add al, 0x17 ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x000000000009f5b1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008b12a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000001adcfc : add al, 0x22 ; add dword ptr [rax], eax ; loopne 0x1adc9e ; hlt ; jmp qword ptr [rcx]
0x000000000013a93a : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000011777d : add al, 0x24 ; add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000000c9d0f : add al, 0x24 ; add byte ptr [rax - 0x7af10000], al ; ret
0x0000000000096ce0 : add al, 0x24 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000bf1e5 : add al, 0x24 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbf1b6
0x00000000001adefc : add al, 0x24 ; add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000000cc271 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f690d : add al, 0x24 ; add rsp, 0x18 ; ret
0x000000000010a364 : add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a3c5 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000004698a : add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000089591 : add al, 0x24 ; call qword ptr [rdx]
0x00000000000ac673 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000020bea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001073d3 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cd225 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x000000000002084c : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000035321 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000002f6d2 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000004d397 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000001ae1fc : add al, 0x27 ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019b118 : add al, 0x29 ; cli ; jmp rsp
0x000000000002a21d : add al, 0x29 ; ret 0x8941
0x00000000000a9c19 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008d5ee : add al, 0x31 ; ret
0x00000000001221d4 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000019f1fc : add al, 0x37 ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x000000000008d4ea : add al, 0x37 ; ret
0x00000000000f5bed : add al, 0x39 ; ret
0x00000000000d799f : add al, 0x39 ; ret 0xec7f
0x0000000000072d5f : add al, 0x3a ; ret
0x0000000000097354 : add al, 0x3c ; cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x000000000005c464 : add al, 0x41 ; cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c439
0x00000000000ac916 : add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000208f2 : add al, 0x48 ; add edi, ebp ; call rax
0x00000000000f5c23 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009eaa5 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009eab5 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a81bb : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000009ea55 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000012414e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000016b009 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000016b01b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000072163 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000720a3 : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000015b46a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000710cc : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071272 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x0000000000071f84 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009ea15 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e9a5 : add al, 0x48 ; mov eax, edi ; ret
0x000000000008b8c4 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000ad120 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000001b09fc : add al, 0x4f ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001149e4 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001987a0 : add al, 0x52 ; call rsp
0x000000000001fc05 : add al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000189bec : add al, 0x66 ; cmc ; jmp rsp
0x000000000016b017 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afc : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000003512d : add al, 0x66 ; nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000001bad17 : add al, 0x66 ; ret
0x00000000001a7277 : add al, 0x71 ; ret
0x0000000000029ae2 : add al, 0x72 ; jns 0x29d4cced ; ret
0x000000000002da7d : add al, 0x72 ; or bl, dh ; ret
0x00000000001a8d67 : add al, 0x72 ; ret
0x00000000000821f4 : add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000ac914 : add al, 0x75 ; add al, 0x41 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000cfc04 : add al, 0x75 ; jae 0xcfc20 ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e510a : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000ac052 : add al, 0x75 ; ret
0x0000000000086537 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000fb562 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x000000000002de30 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de50 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd90 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de10 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd30 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd0 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd70 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb0 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002ded0 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002dd50 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002ddf0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd10 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001a4137 : add al, 0x79 ; ret
0x00000000001a719f : add al, 0x7b ; ret
0x0000000000063886 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x00000000000aadc3 : add al, 0x81 ; je 0xaada5 ; ret
0x0000000000146cab : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x00000000000aadbf : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0xaada9 ; ret
0x0000000000148583 : add al, 0x81 ; sub eax, edx ; ret
0x000000000009e8c9 : add al, 0x82 ; add r10, rax ; jmp r10
0x00000000000c325a : add al, 0x82 ; add rdx, r8 ; jmp rdx
0x00000000000210b5 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000aad78 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaad68 ; ret
0x0000000000091c77 : add al, 0x82 ; sub eax, ecx ; ret
0x0000000000026483 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000759b2 : add al, 0x83 ; loop 0x759bd ; mov eax, edx ; ret
0x0000000000077f04 : add al, 0x83 ; loopne 0x77f0d ; ret
0x00000000000ae46b : add al, 0x83 ; ret 0x4101
0x00000000000dbf92 : add al, 0x83 ; ret 0x4801
0x0000000000035d5b : add al, 0x83 ; ret 0xf701
0x0000000000118659 : add al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11862e
0x00000000000dea88 : add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000aae12 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xaae10 ; ret
0x00000000000ac94e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000adac9 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000002ebb9 : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000006c1d4 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000006c303 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00000000000d3fb3 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000ac61e : add al, 0x87 ; test r8d, r8d ; jne 0xac5f8 ; ret
0x000000000016b006 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x00000000000a2adb : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000003918a : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000009e947 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00000000000556a1 : add al, 0x89 ; ret 0x2944
0x000000000009e992 : add al, 0x8a ; add r10, rax ; jmp r10
0x00000000000aad7b : add al, 0x8a ; je 0xaad65 ; ret
0x00000000000a2ac4 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000f6ab7 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000ac608 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000054d40 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000dea42 : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000081bd4 : add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x000000000003d39d : add al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000001a7e70 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a6f76 : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb5db : add al, 0x8e ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000002e8ef : add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b604 : add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000010ab47 : add al, 0xa ; ret
0x0000000000002315 : add al, 0xaa ; ret
0x000000000002da66 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000013c153 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002e0b8 : add al, 0xb8 ; ret
0x00000000000aabc9 : add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000012dd79 : add al, 0xc2 ; jmp rax
0x00000000000ac83b : add al, 0xc3 ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000035f24 : add al, 0xcf ; setne al ; movzx eax, al ; ret
0x00000000000c7983 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000035f67 : add al, 0xd7 ; xor eax, eax ; ret
0x000000000004838d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x483e9
0x0000000000049f6d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x49fc9
0x0000000000196da1 : add al, 0xea ; jmp rsp
0x000000000002dd35 : add al, 0xf ; mov bh, 0xc0 ; ret
0x0000000000144dbd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000014a62b : add al, 0xf ; sub rax, r8 ; ret
0x00000000000d7c49 : add al, 0xf ; test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000000000663b6 : add al, 0xf ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x00000000000f0c7a : add al, 0xf ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x00000000000d7767 : add al, 0xf ; test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x00000000000abb25 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000a65db : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000e45b3 : add al, 0xf ; test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000fdad9 : add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000e3f29 : add al, 0xf ; xchg eax, esp ; ret 0x9848
0x00000000000481c8 : add al, 0xf0 ; mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000002b020 : add al, 0xf0 ; test rax, rax ; je 0x2b030 ; call rax
0x00000000000481cc : add al, 0xf1 ; xor eax, eax ; pop rbx ; ret
0x000000000018802d : add al, 0xf2 ; call qword ptr [rax]
0x0000000000188025 : add al, 0xf2 ; call rax
0x0000000000188045 : add al, 0xf2 ; jmp rax
0x0000000000188029 : add al, 0xf2 ; push rax ; add al, 0xf2 ; call qword ptr [rax]
0x000000000015b7d3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000006b45b : add al, 0xf3 ; ret
0x000000000008f3e9 : add al, 0xf6 ; ret 0x7408
0x00000000001bb2fc : add al, 0xf8 ; add dword ptr [rax], eax ; jo 0x1bb29e ; sti ; jmp qword ptr [rdx]
0x0000000000194de5 : add al, 0xfb ; call rax
0x000000000019549d : add al, 0xfc ; jmp qword ptr [rax]
0x000000000002f33d : add al, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000012388b : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000abb58 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000001abf95 : add al, 1 ; add byte ptr [rax], cl ; call rcx
0x00000000001981d5 : add al, 1 ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x000000000005cb58 : add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000d5bf3 : add al, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b419 : add al, 1 ; ret
0x000000000006b47a : add al, 1 ; xor eax, eax ; ret
0x00000000001a400f : add al, 2 ; hlt ; ret
0x00000000001ac9bf : add al, 2 ; jle 0x1ac9d1 ; ret
0x000000000009f49c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x000000000016f6f7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x00000000000d8982 : add al, 6 ; add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000000a6728 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000089afd : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000d5161 : add al, 7 ; mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd5190
0x00000000000967a8 : add al, 7 ; ret
0x000000000009eb7f : add al, 7 ; test r8b, r8b ; jne 0x9eb68 ; ret
0x0000000000077403 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000009f71f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001b29af : add al, ah ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000187f2f : add al, ah ; cld ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x00000000001acd7f : add al, ah ; fpatan ; jmp qword ptr [rcx]
0x00000000001a661f : add al, ah ; insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x00000000001b0d8f : add al, ah ; jae 0x1b0d8c ; jmp qword ptr [rcx]
0x00000000001bc689 : add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bc6e1 : add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001b09cf : add al, ah ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000001bdd7 : add al, ah ; ret 0x13
0x0000000000005fd7 : add al, ah ; ret 0xc
0x000000000000f367 : add al, ah ; ret 0xf
0x00000000001af37f : add al, ah ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001adcff : add al, ah ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001adbbf : add al, ah ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000018803f : add al, al ; add al, 0xf2 ; call rax
0x00000000001ae16f : add al, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001b077f : add al, al ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a75df : add al, al ; jne 0x1a75d6 ; jmp qword ptr [rax]
0x00000000001b113f : add al, al ; jp 0x1b113c ; jmp qword ptr [rcx]
0x00000000001a7c3f : add al, al ; jrcxz 0x1a7c36 ; call rsp
0x000000000019d4af : add al, al ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d50f : add al, al ; or ebp, ecx ; jmp qword ptr [rax]
0x0000000000010aef : add al, al ; ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017d3c7 : add al, al ; sldt word ptr [rax] ; ret
0x00000000001aa777 : add al, bh ; add dh, dl ; call rdi
0x00000000001b29c7 : add al, bh ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001acd97 : add al, bh ; fpatan ; jmp qword ptr [rcx]
0x000000000019df87 : add al, bh ; jno 0x19df78 ; call qword ptr [rax]
0x00000000001860b7 : add al, bh ; loope 0x1860be ; jmp qword ptr [rdi]
0x0000000000186137 : add al, bh ; loope 0x18613e ; jmp qword ptr [rdi]
0x00000000001861b7 : add al, bh ; loope 0x1861be ; jmp qword ptr [rdi]
0x00000000001b6467 : add al, bh ; loope 0x1b646a ; call rsi
0x00000000001b09e7 : add al, bh ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b9087 : add al, bh ; ret
0x00000000001a90a7 : add al, bh ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000001adbd7 : add al, bh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a7b37 : add al, bh ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001ab047 : add al, bl ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001b9597 : add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001a7747 : add al, bl ; frndint ; call qword ptr [rax]
0x00000000001b0797 : add al, bl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b1157 : add al, bl ; jp 0x1b1154 ; jmp qword ptr [rcx]
0x00000000000a6a2b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000019d557 : add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001afcd7 : add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001a7d17 : add al, bl ; sub edx, edi ; jmp qword ptr [rdi]
0x000000000019b2cd : add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000014d6e2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000019b415 : add al, byte ptr [r8] ; and al, 0x66 ; cli ; call rsp
0x0000000000089a61 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000019b0b6 : add al, byte ptr [rax] ; adc al, 0x22 ; cli ; call rsp
0x000000000019aace : add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x000000000019b2ce : add al, byte ptr [rax] ; adc al, 0x56 ; cli ; jmp rsp
0x000000000019b61e : add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b116 : add al, byte ptr [rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000002de87 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000007f52d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001073d6 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x000000000008e8f3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000074155 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000013dfcd : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000088102 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000842e1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x00000000000d776b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000008e5e9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000109f5e : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000009563b : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000010e51b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a2d2f
0x0000000000085e55 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000020d31 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003b4fd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014571d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148341 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7755 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000145741 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000063ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000132daf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000013582f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134f8f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x000000000005f80d : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x5baf6
0x0000000000067494 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63702
0x0000000000102842 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x00000000000ccdd2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000138229 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000103ac2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103835 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103701 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103679 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000013a93c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000001095f5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000abf83 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c80da : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000071910 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000036de9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000e5cca : add al, byte ptr [rax] ; add byte ptr [rbx + 0xf4801e1], al ; ret
0x00000000000b9a99 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000e75d3 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000171f04 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000d820e : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000046076 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000005e78e : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x00000000000f38c3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007eb53 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000083527 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000809e2 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000000000012568e : add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000024c24 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x000000000002426c : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000e0cdd : add al, byte ptr [rax] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x0000000000055930 : add al, byte ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000019b416 : add al, byte ptr [rax] ; and al, 0x66 ; cli ; call rsp
0x000000000019ae66 : add al, byte ptr [rax] ; hlt ; sar cl, 1 ; call rsp
0x000000000019b15e : add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x000000000019a9fe : add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x000000000019b30e : add al, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b1be : add al, byte ptr [rax] ; je 0x19b205 ; cli ; jmp rsp
0x000000000019b69e : add al, byte ptr [rax] ; je 0x19b670 ; cli ; jmp rsp
0x0000000000123da2 : add al, byte ptr [rax] ; jne 0x123df6 ; mov eax, r8d ; ret
0x000000000009ea75 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001bbf06 : add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001bc026 : add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x000000000009e9e5 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000019ade6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff9
0x000000000016e40b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001bc176 : add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x000000000011d099 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105df2 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000019b626 : add al, byte ptr [rax] ; ret
0x00000000001bc467 : add al, byte ptr [rax] ; ret 0x503
0x000000000019b036 : add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019ab5e : add al, byte ptr [rax] ; stc ; call rsp
0x000000000019af86 : add al, byte ptr [rax] ; sti ; stc ; jmp rsp
0x00000000001bbf36 : add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000019aaf6 : add al, byte ptr [rax] ; test byte ptr [rax - 7], bl ; jmp rsp
0x000000000019b3fe : add al, byte ptr [rax] ; test byte ptr [rcx - 6], ah ; call rsp
0x000000000019ae26 : add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x000000000019b29e : add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x000000000019ac8e : add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x000000000019ad96 : add al, byte ptr [rax] ; xor al, 0xb7 ; stc ; call rsp
0x000000000019af9e : add al, byte ptr [rax] ; xor al, 3 ; cli ; call rsp
0x000000000009a2f9 : add al, byte ptr [rbp + 0x38] ; ret
0x00000000001ae749 : add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x000000000011509e : add al, byte ptr [rcx + 0x39] ; ret
0x000000000019d0d0 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000035d6c : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000ebcaf : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x000000000005a6d9 : add al, byte ptr [rcx - 0x77] ; ret 0x144
0x00000000000dc31d : add al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000111665 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000019815d : add al, byte ptr [rcx] ; add ah, al ; mov ebp, edi ; jmp rsp
0x00000000001238c8 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001238e7 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000000001abd7d : add al, byte ptr [rcx] ; add byte ptr [rax], dh ; in eax, -0xe ; call qword ptr [rsi]
0x00000000001a1fd0 : add al, byte ptr [rdi + 0xa] ; ret
0x000000000019fdde : add al, byte ptr [rdx] ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a284d : add al, byte ptr [rdx] ; pop rsi ; ret
0x00000000001a2625 : add al, byte ptr [rdx] ; push rsi ; ret
0x00000000001a76c5 : add al, byte ptr [rdx] ; ret
0x00000000001b5bad : add al, byte ptr [rdx] ; xchg eax, ecx ; ret
0x000000000006e575 : add al, byte ptr [rip + 0x5b000000] ; ret
0x00000000001a7e74 : add al, byte ptr [rsi + rcx + 0x38] ; ret
0x0000000000195ce4 : add al, byte ptr [rsi - 0x7a6d0004] ; cld ; jmp qword ptr [rdx]
0x000000000004cfc7 : add al, byte ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a682a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000019b115 : add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x00000000001b2bd7 : add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001419a1 : add al, ch ; cdq ; ret 0xffee
0x00000000000f425d : add al, ch ; cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a36e7 : add al, ch ; cmp al, 0xed ; jmp qword ptr [rdi]
0x00000000000fa83f : add al, ch ; fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000134d41 : add al, ch ; fstp dword ptr [rax - 0x76b70011] ; ret 0x8d48
0x000000000013ccce : add al, ch ; in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a3c57 : add al, ch ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000b1949 : add al, ch ; int1 ; ret 0xfff7
0x000000000011238a : add al, ch ; nop ; ret 0xfff1
0x000000000019d127 : add al, ch ; or cl, ch ; call qword ptr [rdi]
0x00000000001b0aa7 : add al, ch ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000033542 : add al, ch ; pop rax ; ret
0x00000000001ba167 : add al, ch ; push rdi ; call qword ptr [rdx]
0x0000000000039aa7 : add al, ch ; ret
0x00000000000bdda8 : add al, ch ; ret 0x572
0x000000000006f648 : add al, ch ; ret 0xa1
0x000000000012c008 : add al, ch ; ret 0xcd
0x000000000002aca8 : add al, ch ; ret 0xea
0x0000000000141f78 : add al, ch ; ret 0xeebc
0x00000000000dd1d8 : add al, ch ; ret 0xf426
0x00000000000bd0a8 : add al, ch ; ret 0xf7c6
0x0000000000044b78 : add al, ch ; ret 0xfe90
0x00000000001242a8 : add al, ch ; ret 0xff0d
0x00000000001b2a87 : add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001aad87 : add al, ch ; sbb edx, esi ; jmp qword ptr [rcx]
0x000000000007676d : add al, ch ; std ; imul edi, ebp, 0x89c085ff ; ret
0x00000000001b2997 : add al, cl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001acce7 : add al, cl ; fpatan ; call qword ptr [rbx]
0x00000000001acd27 : add al, cl ; fpatan ; call qword ptr [rsi]
0x00000000001acd67 : add al, cl ; fpatan ; jmp qword ptr [rcx]
0x00000000001b0d77 : add al, cl ; jae 0x1b0d74 ; jmp qword ptr [rcx]
0x000000000019d4c7 : add al, cl ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d527 : add al, cl ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001aed07 : add al, cl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001b09b7 : add al, cl ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0537 : add al, cl ; pop rdx ; cmc ; jmp qword ptr [rcx]
0x00000000001b56b7 : add al, cl ; ret
0x00000000001af367 : add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001ab05f : add al, dh ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001ae19f : add al, dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001a52df : add al, dh ; fsubr st(5) ; call qword ptr [rsi]
0x00000000001b07af : add al, dh ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001bc0df : add al, dh ; jae 0x1bc0df ; call qword ptr [rdi]
0x00000000001bc32f : add al, dh ; jns 0x1bc32f ; call qword ptr [rcx]
0x00000000001a990f : add al, dh ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x000000000001bdef : add al, dh ; ret
0x000000000001be1f : add al, dh ; ret 0x13
0x00000000001a7d2f : add al, dh ; sub bh, dl ; call qword ptr [rdi]
0x00000000001aac2f : add al, dl ; adc al, 0xf2 ; call qword ptr [rdx]
0x00000000001a738f : add al, dl ; add edi, ebp ; jmp rsi
0x00000000001b2bbf : add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b937f : add al, dl ; fdiv st(7) ; jmp rdi
0x00000000001b0ccf : add al, dl ; jb 0x1b0ccc ; jmp qword ptr [rcx]
0x00000000001a693f : add al, dl ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a696f : add al, dl ; mov dh, ch ; jmp rbx
0x00000000001ad97f : add al, dl ; nop ; hlt ; call qword ptr [rcx]
0x000000000019d53f : add al, dl ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001b0a8f : add al, dl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a1f : add al, dl ; push rax ; jmp 0x1a0a27
0x00000000001b02ef : add al, dl ; push rbx ; cmc ; call qword ptr [rdx]
0x0000000000010f3f : add al, dl ; ret 0xa
0x0000000000008d37 : add al, dl ; ret 0xf
0x00000000001ad7cf : add al, dl ; stc ; call qword ptr [rax]
0x00000000001954b9 : add bh, ah ; jmp rax
0x0000000000195499 : add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000012af72 : add bh, al ; adc al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000218ff : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000edb9d : add bh, al ; or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001750ff : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000140e89 : add bh, bh ; and eax, 0x281ab0 ; ret
0x00000000001af410 : add bh, bh ; hlt ; call rsi
0x00000000001bc5a4 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x0000000000187f6c : add bh, bh ; int1 ; jmp qword ptr [rax]
0x000000000013221c : add bh, bh ; loope 0x1321b5 ; ret
0x000000000007a3da : add bh, bh ; nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000bb1ea : add bh, bh ; ret
0x0000000000195260 : add bh, bl ; sti ; jmp rax
0x00000000000f68a2 : add bh, byte ptr [rax + 0x16] ; jbe 0xf68b9 ; ret
0x000000000004a080 : add bh, byte ptr [rax + 1] ; ret
0x0000000000078962 : add bh, byte ptr [rax - 1] ; pop rbx ; ret
0x000000000003545b : add bh, byte ptr [rax - 1] ; ret
0x00000000001a2acc : add bh, byte ptr [rbp + 0x41380e0a] ; ret
0x00000000001722d2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000109e5f : add bh, byte ptr [rcx] ; ret
0x00000000001ac9c0 : add bh, byte ptr [rsi + 0xa] ; ret
0x0000000000187e7c : add bh, ch ; int1 ; call qword ptr [rax]
0x00000000001a4d41 : add bh, ch ; jmp rsp
0x00000000001bd057 : add bh, cl ; add al, 0 ; add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000d47f5 : add bh, dh ; dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000d726d : add bh, dh ; ret
0x000000000009d4f1 : add bh, dh ; ret 0
0x0000000000036882 : add bl, al ; cmp byte ptr [rax], al ; ret
0x00000000000abc99 : add bl, al ; lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00000000000ac87d : add bl, al ; lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x000000000008ebdd : add bl, al ; lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x00000000001238de : add bl, al ; mov eax, 0x100 ; ret
0x00000000001238e4 : add bl, al ; mov eax, 0x102 ; ret
0x00000000000cea3c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000adaa1 : add bl, al ; mov eax, 2 ; ret
0x00000000000d958d : add bl, al ; mov eax, 3 ; ret
0x00000000000d9587 : add bl, al ; mov eax, 4 ; ret
0x00000000000877a4 : add bl, al ; mov rsi, rbx ; mov rdi, rax ; call rcx
0x00000000000758bc : add bl, al ; nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000cda0c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000fc2ed : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000132421 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001434ba : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000895dc : add bl, al ; ret
0x000000000013510e : add bl, al ; xor eax, eax ; ret
0x0000000000194dd1 : add bl, bh ; call rax
0x000000000018a4b7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001a9dc7 : add bl, byte ptr [rax + 0x41180e0a] ; ret
0x000000000019db5d : add bl, byte ptr [rax + 0xa] ; ret
0x00000000001b2815 : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000735aa : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a25f7 : add bl, byte ptr [rcx + 0xa] ; ret
0x00000000001b5918 : add bl, byte ptr [rdi + 0x41280e0a] ; ret
0x00000000001a9e85 : add bl, byte ptr [rdx + 0xa] ; ret
0x00000000001957f8 : add bl, byte ptr [rsi - 4] ; call qword ptr [rdx + 0x22fffc5d]
0x00000000001bcd27 : add bl, ch ; add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x000000000007b5dd : add bl, ch ; fucomp st(0) ; ret
0x0000000000187dac : add bl, ch ; int1 ; jmp qword ptr [rax]
0x0000000000126a34 : add bl, ch ; leave ; mov eax, 0x200000 ; jmp 0x126a09
0x00000000000bf1ea : add bl, ch ; ret 0x1f0f
0x0000000000126a3b : add bl, ch ; ret 0xb8
0x00000000000a6ddf : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a6def : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000034cdd : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000020582 : add bl, dh ; ret
0x0000000000186f9c : add bl, dl ; in eax, dx ; jmp rcx
0x00000000000330be : add bl, sil ; ret
0x00000000001aa00b : add byte ptr [0xffffffffe8a00000], dl ; int1 ; call qword ptr [rbx]
0x00000000000cdb77 : add byte ptr [r15 - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000051fe7 : add byte ptr [r8 - 0x7d], r9b ; call 0xffffffffc23e67f9
0x0000000000023de5 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x00000000001a067d : add byte ptr [r8], al ; and byte ptr [rsi], 0xeb ; call qword ptr [rcx]
0x0000000000036e8d : add byte ptr [r8], r8b ; add rsp, 8 ; ret
0x00000000001a0ad5 : add byte ptr [r8], r8b ; mov byte ptr [rbx - 0x15], dl ; call rcx
0x00000000001a0a1d : add byte ptr [r8], r8b ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001aac9f : add byte ptr [rax + 0x15], ah ; jmp qword ptr [rcx]
0x000000000008779f : add byte ptr [rax + 0x16], bh ; ret
0x00000000001bae77 : add byte ptr [rax + 0x16], cl ; clc ; jmp qword ptr [rcx]
0x00000000001bc6dc : add byte ptr [rax + 0x1809], dh ; loopne 0x1bc6f6 ; ret 0xa
0x00000000001bc684 : add byte ptr [rax + 0x180a], dh ; loopne 0x1bc69f ; ret 0xb
0x00000000001a6b77 : add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001a2c4f : add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x00000000001af8ef : add byte ptr [rax + 0x1e], al ; cmc ; jmp qword ptr [rcx]
0x0000000000034bab : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000001a92df : add byte ptr [rax + 0x24], dh ; int1 ; jmp rcx
0x00000000001a93c7 : add byte ptr [rax + 0x25], ch ; int1 ; call qword ptr [rcx]
0x00000000001a9347 : add byte ptr [rax + 0x25], ch ; int1 ; jmp qword ptr [rcx]
0x0000000000172a3f : add byte ptr [rax + 0x27201fa], al ; mov byte ptr [rdi], cl ; ret
0x00000000001a06cf : add byte ptr [rax + 0x27], dl ; jmp 0x1a06d7
0x0000000000032857 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000e3a02 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c1504 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002944a : add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000007f085 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x0000000000028552 : add byte ptr [rax + 0x29], cl ; ret 0xe183
0x00000000001a94bf : add byte ptr [rax + 0x30], dl ; int1 ; jmp qword ptr [rcx]
0x000000000012fd3d : add byte ptr [rax + 0x31], cl ; ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x00000000001a61ef : add byte ptr [rax + 0x34], dh ; out dx, al ; jmp qword ptr [rcx]
0x0000000000045b6c : add byte ptr [rax + 0x39], cl ; ret
0x00000000000f146c : add byte ptr [rax + 0x39], cl ; ret 0x3c76
0x000000000007d9d6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000bdc83 : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000002bdbe : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000007d997 : add byte ptr [rax + 0x39], cl ; ret 0x8948
0x00000000001152a1 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x0000000000115360 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000008873b : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00000000001a6ae7 : add byte ptr [rax + 0x3e], bl ; cli ; call qword ptr [rax]
0x0000000000194675 : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x0000000000075f86 : add byte ptr [rax + 0x4740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000001bb54f : add byte ptr [rax + 0x47], dl ; clc ; call qword ptr [rbx]
0x00000000001b00c7 : add byte ptr [rax + 0x4b], cl ; cmc ; jmp rax
0x00000000001a6407 : add byte ptr [rax + 0x4e], bh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000070675 : add byte ptr [rax + 0x5740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001b05af : add byte ptr [rax + 0x5b], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b05c7 : add byte ptr [rax + 0x5b], bl ; cmc ; jmp qword ptr [rcx]
0x000000000001f92d : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000006e0d7 : add byte ptr [rax + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000001073d8 : add byte ptr [rax + 0x5f], bl ; call rax
0x000000000002ec94 : add byte ptr [rax + 0x63], cl ; adc al, 0x88 ; add rax, rdx ; jmp rax
0x000000000005bf51 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x0000000000063e44 : add byte ptr [rax + 0x63], cl ; adc al, 0x91 ; add rcx, rdx ; jmp rcx
0x00000000000852e7 : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000063883 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000006bc83 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000006c94b : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000002e8ec : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004b601 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x00000000000aabc6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000000f2e2b : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000033296 : add byte ptr [rax + 0x63], cl ; or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000004b2da : add byte ptr [rax + 0x63], cl ; ret
0x000000000006bd6a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x0000000000113035 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000b2e2f : add byte ptr [rax + 0x63], cl ; ret 0x8348
0x0000000000072d2f : add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004617d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000004b64c : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000006ca9c : add byte ptr [rax + 0x63], cl ; xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x00000000000cd23f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x000000000017581f : add byte ptr [rax + 0x67], al ; jmp 0x175827
0x00000000000cd25f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000cd24f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000cd26f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000001b090f : add byte ptr [rax + 0x6e], al ; cmc ; jmp qword ptr [rcx]
0x00000000000cd22f : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000001b0927 : add byte ptr [rax + 0x6e], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000cd22e : add byte ptr [rax + 0x6e], dil ; syscall ; ret
0x00000000001bc023 : add byte ptr [rax + 0x6f880002], ch ; clc ; call rcx
0x00000000000cd47f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x000000000019cf87 : add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001b0b37 : add byte ptr [rax + 0x70], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c6f : add byte ptr [rax + 0x72], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c87 : add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a754f : add byte ptr [rax + 0x73], ah ; out dx, eax ; call rax
0x00000000001b0d47 : add byte ptr [rax + 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000089a5f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001b0ef7 : add byte ptr [rax + 0x76], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b0edf : add byte ptr [rax + 0x76], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000071323 : add byte ptr [rax + 0x7740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000704f3 : add byte ptr [rax + 0x7740000], al ; mov eax, esi ; pop rbx ; ret
0x00000000001b0fa7 : add byte ptr [rax + 0x78], cl ; cmc ; jmp qword ptr [rbx]
0x00000000000a732f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000019c1bf : add byte ptr [rax + 0x7b], al ; std ; jmp qword ptr [rdx]
0x00000000001b11e7 : add byte ptr [rax + 0x7b], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001b11cf : add byte ptr [rax + 0x7b], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a67ef : add byte ptr [rax + 0x7e], al ; out dx, al ; jmp qword ptr [rcx]
0x00000000000cda07 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000cd95a : add byte ptr [rax + 0x7f], bh ; ret
0x000000000006d82a : add byte ptr [rax + 0x8740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000760aa : add byte ptr [rax + 0x8740000], al ; mov eax, esi ; pop rbx ; ret
0x0000000000075b81 : add byte ptr [rax + 0x9740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000bc36f : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x00000000001ad00f : add byte ptr [rax + 0xd], al ; hlt ; jmp rcx
0x00000000001a2a87 : add byte ptr [rax + 0xd], cl ; in eax, dx ; jmp qword ptr [rax]
0x00000000001077af : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x000000000007118c : add byte ptr [rax + 0xe740000], al ; mov eax, edx ; pop rbx ; ret
0x00000000000761ec : add byte ptr [rax + 0xe740000], al ; mov eax, esi ; pop rbx ; ret
0x000000000002ddd4 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000008d455 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000c959c : add byte ptr [rax + 0xf], cl ; ret
0x0000000000078cdb : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x000000000008e64b : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000140814 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010efcb : add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000517bb : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f96c6 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000be066 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000008f19b : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000f963c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b98 : add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025397 : add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028094 : add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cbf7d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000012668c : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000cda1f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000001adb5b : add byte ptr [rax + 1], ah ; add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001adb73 : add byte ptr [rax + 1], bh ; add byte ptr [rax - 0x6d], ch ; hlt ; jmp qword ptr [rcx]
0x000000000012b00f : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b5 : add byte ptr [rax + 1], bh ; ret
0x000000000008e8f5 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x00000000000c00b2 : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000003c036 : add byte ptr [rax + 1], cl ; ret
0x000000000003bf0f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x00000000000bb5fc : add byte ptr [rax + 1], cl ; ret 0x8d48
0x0000000000049510 : add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000773ee : add byte ptr [rax + 1], dil ; ret
0x000000000012e04f : add byte ptr [rax + 2], bh ; ret
0x00000000000cdbf6 : add byte ptr [rax + 7], bh ; ret
0x00000000000ec982 : add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000ebae8 : add byte ptr [rax + 9], cl ; ret 0x8b48
0x000000000017c36b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001a90a3 : add byte ptr [rax + rax*4], dh ; add byte ptr [rax], al ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000001a7b33 : add byte ptr [rax + rax*8], bh ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001a7b63 : add byte ptr [rax + rax*8], ch ; add byte ptr [rax], bl ; mov ch, 0xfb ; call qword ptr [rax]
0x00000000000a69ac : add byte ptr [rax + rax], 0 ; ret
0x00000000000f12c2 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b31f : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x000000000006a96e : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001162ae : add byte ptr [rax + rax], al ; cmove rax, rdx ; ret
0x000000000008241c : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000082d89 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000d7af : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000001a7d3f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a7d87 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000ac565 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000001b136b : add byte ptr [rax + rbx*2 + 1], dh ; add byte ptr [rax - 0x7b], ah ; cmc ; jmp rax
0x00000000001a9343 : add byte ptr [rax + rbx*8], cl ; add byte ptr [rax + 0x25], ch ; int1 ; jmp qword ptr [rcx]
0x0000000000070a75 : add byte ptr [rax + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000ffddd : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000045ce6 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x00000000001977cf : add byte ptr [rax + rcx*8 - 0x13], ah ; jmp rsp
0x00000000001a832b : add byte ptr [rax + rcx*8], dh ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x00000000001af363 : add byte ptr [rax + rdi + 1], ch ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001af37b : add byte ptr [rax + rdi - 0x21fffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000001a738b : add byte ptr [rax + rdi*4 + 0x1d00000], dl ; out dx, eax ; jmp rsi
0x00000000001bb2fb : add byte ptr [rax + rdi*8], al ; add dword ptr [rax], eax ; jo 0x1bb29f ; sti ; jmp qword ptr [rdx]
0x00000000001ab313 : add byte ptr [rax + rdi*8], bl ; add byte ptr [rax], al ; call 0x111aa55a
0x000000000017d517 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000001acb93 : add byte ptr [rax + rdx - 0x4317ffff], bl ; jmp qword ptr [rdi]
0x00000000001b0b33 : add byte ptr [rax + rdx*2], bh ; add dword ptr [rax], eax ; js 0x1b0bb2 ; cmc ; jmp qword ptr [rcx]
0x00000000001aebab : add byte ptr [rax + rsi - 0x1ccfffff], dh ; hlt ; call qword ptr [rsi]
0x00000000001b2b73 : add byte ptr [rax + rsi*2 + 1], bh ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b43 : add byte ptr [rax + rsi*2 + 1], cl ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b13 : add byte ptr [rax + rsi*2], bl ; add dword ptr [rax], eax ; call 0x271b243d
0x00000000001a6ba3 : add byte ptr [rax + rsi*4 + 0x54080000], ch ; cli ; call qword ptr [rax]
0x00000000001a6b73 : add byte ptr [rax + rsi*4], bh ; add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001aab9b : add byte ptr [rax + rsi*8 + 0x13900000], ah ; jmp qword ptr [rcx]
0x00000000001978b7 : add byte ptr [rax + rsi*8 - 0x13], dl ; call rsp
0x00000000001aef6f : add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aef87 : add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aef27 : add byte ptr [rax - 0x15], cl ; hlt ; jmp rdx
0x0000000000133b8d : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000001aa0c7 : add byte ptr [rax - 0x17], cl ; int1 ; jmp qword ptr [rdi]
0x00000000001aeebf : add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000302f9 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8948
0x00000000000f1434 : add byte ptr [rax - 0x188b7f80], 0x89 ; ret 0x8b48
0x00000000001aee47 : add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aedb7 : add byte ptr [rax - 0x19], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aea1f : add byte ptr [rax - 0x21], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001aea37 : add byte ptr [rax - 0x21], bh ; hlt ; call qword ptr [rbx]
0x00000000001aea07 : add byte ptr [rax - 0x21], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6cc7 : add byte ptr [rax - 0x23], bl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001acddf : add byte ptr [rax - 0x26], al ; jmp qword ptr [rcx]
0x00000000001acdf7 : add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000001ace0f : add byte ptr [rax - 0x26], dh ; jmp qword ptr [rcx]
0x0000000000036081 : add byte ptr [rax - 0x2d], cl ; loopne 0x360d7 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001ae5cf : add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x0000000000033dc7 : add byte ptr [rax - 0x39], cl ; ret
0x000000000008767e : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000005c4f9 : add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x0000000000074177 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000abf8f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abf6f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abfcf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000abf7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000abfbf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000034f15 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x00000000000519d8 : add byte ptr [rax - 0x3f7cb7f0], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000034c0a : add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000011c129 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1ef : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000001a1327 : add byte ptr [rax - 0x42], bl ; in al, dx ; jmp rax
0x00000000001b1f5f : add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x000000000003c932 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000001b1e17 : add byte ptr [rax - 0x4b], bl ; cmc ; call rdi
0x00000000001a6bd7 : add byte ptr [rax - 0x4f], bh ; out dx, al ; call qword ptr [rax]
0x00000000001ae217 : add byte ptr [rax - 0x58], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1ff : add byte ptr [rax - 0x58], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001b1acf : add byte ptr [rax - 0x59], dl ; cmc ; call rsi
0x00000000001a0ff7 : add byte ptr [rax - 0x5d], ch ; in al, dx ; jmp qword ptr [rcx]
0x00000000001adee7 : add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001baf67 : add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x00000000000ff97f : add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000001bb2ff : add byte ptr [rax - 0x6b], dh ; sti ; jmp qword ptr [rdx]
0x00000000001adb77 : add byte ptr [rax - 0x6d], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001adb5f : add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ad9cf : add byte ptr [rax - 0x6f], al ; hlt ; jmp qword ptr [rcx]
0x00000000001ad9e7 : add byte ptr [rax - 0x6f], bl ; hlt ; jmp qword ptr [rsi]
0x00000000001a6b2f : add byte ptr [rax - 0x71], al ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a6b17 : add byte ptr [rax - 0x71], cl ; out dx, al ; call qword ptr [rax]
0x0000000000037373 : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000026b0f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af3 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002cb37 : add byte ptr [rax - 0x73], cl ; add eax, 0x15ffa6 ; ret
0x000000000002092f : add byte ptr [rax - 0x73], cl ; add eax, 0x16bcf4 ; ret
0x000000000002093f : add byte ptr [rax - 0x73], cl ; add eax, 0x16dc23 ; ret
0x00000000000fe2ec : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8ca4 ; ret
0x00000000000fe12c : add byte ptr [rax - 0x73], cl ; add eax, 0x2c8e64 ; ret
0x000000000012b0af : add byte ptr [rax - 0x73], cl ; add eax, 0x61a2e ; ret
0x0000000000026b2b : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ac5af : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bf : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000001206cf : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2a8025 ; call rax
0x00000000000ac59f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000008156a : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000450dd : add byte ptr [rax - 0x73], cl ; xor eax, 0x1cb ; call rax
0x000000000006f218 : add byte ptr [rax - 0x73], cl ; xor eax, 0x30 ; call rax
0x000000000007c748 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe1e0 ; call rax
0x000000000007c2f8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe630 ; call rax
0x000000000007bf08 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffea20 ; call rax
0x000000000007aea8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa80 ; call rax
0x000000000007ac38 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffcf0 ; call rax
0x000000000006f511 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd37 ; call rax
0x000000000012dd76 : add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000000eff07 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000003a721 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000140ee2 : add byte ptr [rax - 0x75], cl ; add eax, 0x284526 ; call qword ptr [rax]
0x00000000001408cf : add byte ptr [rax - 0x75], cl ; add eax, 0x284b39 ; call qword ptr [rax]
0x000000000007cb0f : add byte ptr [rax - 0x75], cl ; add eax, 0x348a09 ; ret
0x0000000000029c8f : add byte ptr [rax - 0x75], cl ; add eax, 0x39bc59 ; ret
0x0000000000021a4f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a78b9 ; ret
0x0000000000021a3f : add byte ptr [rax - 0x75], cl ; add eax, 0x3a78d9 ; ret
0x000000000007ff33 : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fde0e : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x0000000000073d18 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000845df : add byte ptr [rax - 0x75], cl ; je 0x8460e ; call rax
0x00000000000845de : add byte ptr [rax - 0x75], cl ; je 0x8460f ; call rax
0x0000000000143657 : add byte ptr [rax - 0x75], cl ; jl 0x143688 ; sbb al, ch ; ret 0xffed
0x000000000007b706 : add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe6 : add byte ptr [rax - 0x75], cl ; jp 0x73031 ; jmp 0x72fb6
0x00000000000cf303 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xfffffcf8 ; call r12
0x00000000000ec2f5 : add byte ptr [rax - 0x75], cl ; mov ebp, 0xffffff78 ; call rbx
0x0000000000074f6f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x00000000000d721f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x000000000013bb07 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], r9b ; jmp rax
0x000000000002342f : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000106237 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000010622f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x00000000000d1973 : add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00000000001529df : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000848e7 : add byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x68 ; call rax
0x00000000000c9b8f : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000010998e : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000005be57 : add byte ptr [rax - 0x75], cl ; xor eax, 0x368111 ; call rax
0x000000000005b801 : add byte ptr [rax - 0x75], cl ; xor eax, 0x368767 ; call rax
0x0000000000050049 : add byte ptr [rax - 0x75], cl ; xor eax, 0x373f1f ; call rax
0x000000000004d3cd : add byte ptr [rax - 0x75], cl ; xor eax, 0x376b9b ; call rax
0x0000000000123bef : add byte ptr [rax - 0x76acfe07], al ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x00000000000ff414 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000000ffaf2 : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000011777f : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x00000000001435b4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000896d1 : add byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008958e : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rdx]
0x00000000001437df : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000033630 : add byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x000000000008921e : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000011642f : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000003a69f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x000000000007cb3f : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007a361 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006abce : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000844e1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007221c : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072064 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000033c47 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x0000000000143099 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000009f49e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000088104 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x00000000000bea26 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103f15 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103e15 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000010bf54 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000007019f : add byte ptr [rax - 0x77], cl ; jmp 0x48f58af8
0x00000000000be4d5 : add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece6e2b
0x000000000006dcb5 : add byte ptr [rax - 0x77], cl ; mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000784b3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000008588c : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x81b89
0x00000000000bda26 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call 0x89d19
0x0000000000088b75 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e30c : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103ad1 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012ca83 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000076ca3 : add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x00000000001146c1 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000084ba5 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000002ad35 : add byte ptr [rax - 0x77], cl ; ret
0x000000000007d9c2 : add byte ptr [rax - 0x77], cl ; ret 0x18eb
0x000000000012800f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000008408c : add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000afc58 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x0000000000047465 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000662e5 : add byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000006e513 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003413a : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x0000000000046ef4 : add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x00000000000bf2bf : add byte ptr [rax - 0x77], cl ; ret 0x3e9
0x0000000000117782 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x00000000000d776d : add byte ptr [rax - 0x77], cl ; ret 0x8341
0x000000000002fa5f : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000010d353 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000007fe1f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000000522b9 : add byte ptr [rax - 0x77], cl ; ret 0x858b
0x000000000002c03d : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bcd40 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000970b0 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c537 : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006f0c8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000c97e6 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000fe4ba : add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x00000000000c8f3e : add byte ptr [rax - 0x77], cl ; ret 0x9ce9
0x00000000000fe015 : add byte ptr [rax - 0x77], cl ; ret 0xb6e9
0x0000000000105e95 : add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x000000000007db9b : add byte ptr [rax - 0x77], cl ; ret 0xbfe9
0x000000000008e5eb : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000044dea : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000528df : add byte ptr [rax - 0x77], cl ; ret 0xd5e9
0x0000000000045cea : add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000061cd7 : add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000e0bcf : add byte ptr [rax - 0x77], cl ; ret 0xe283
0x00000000000951f5 : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000089162 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000007a3e0 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000011ac94 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000014356c : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000001322ec : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x132304 ; ret
0x000000000013505c : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x135074 ; ret
0x0000000000135074 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13508c ; ret
0x00000000001358ac : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1358c4 ; ret
0x00000000001358c4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x1358dc ; ret
0x00000000001358f4 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x13590c ; ret
0x000000000011931f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000001bc177 : add byte ptr [rax - 0x79], bl ; sti ; call rcx
0x00000000001ad7ef : add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x00000000000c9d11 : add byte ptr [rax - 0x7af10000], al ; ret
0x00000000001b136f : add byte ptr [rax - 0x7b], ah ; cmc ; jmp rax
0x000000000008b8bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000072b0a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000063690 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x00000000000a32d3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001003a1 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000138ee3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000001a4c6f : add byte ptr [rax - 0x7c], al ; in eax, dx ; call qword ptr [rdx]
0x000000000016cbc7 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x0000000000051fe8 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc23e67f8
0x000000000010e51d : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34a2d2d
0x0000000000084abb : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000061cfe : add byte ptr [rax - 0x7d], cl ; clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x000000000006ad90 : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000878cd : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000002db94 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000004d6d1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000f71bf : add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x0000000000174576 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x174587 ; ret
0x0000000000084be2 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000020c2c : add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1dba : add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000126b8f : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000122e04 : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000aa14f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000fea6f : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000001224f2 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000082bd9 : add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000bee1f : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x000000000012267a : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021905 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e58af : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001749af : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108f3a : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a07 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000009f02f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000023de6 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000029016 : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000144e3f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000072a27 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000d7c0f : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaef : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000343b9 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000afc8f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000d8d17 : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x00000000000242b7 : add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c6f : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006c95f : add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000609ef : add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010e617 : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000011f6f5 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000008de80 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000146e23 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d7757 : add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x0000000000144e63 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000034217 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009f65f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000008b9ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000297fc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000006ee54 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x0000000000046067 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000aff17 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000bc589 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x0000000000039aa0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bdda1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00000000001242a1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000007186c : add byte ptr [rax - 0x7f], cl ; ret
0x0000000000158ffb : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000006f1bf : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000001a244f : add byte ptr [rax - 0xb], ah ; in al, dx ; call qword ptr [rsi]
0x00000000001b0ac0 : add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x000000000011954b : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000033f0d : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548d : add byte ptr [rax - 1], bh ; ret
0x00000000001a6ab7 : add byte ptr [rax - 1], bh ; stc ; call qword ptr [rax]
0x00000000000368c6 : add byte ptr [rax - 1], dil ; ret
0x0000000000195924 : add byte ptr [rax - 4], ah ; call qword ptr [rax + 0x20fffc5f]
0x000000000019b4ef : add byte ptr [rax - 6], ah ; call rsp
0x00000000001aa547 : add byte ptr [rax - 7], ch ; int1 ; call rsi
0x0000000000039aa4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bdda5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00000000001242a5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x000000000006b4bb : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000073ed9 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003ea8d : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007a3dd : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000001750fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000013c11b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000015b7db : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000963cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000002bd53 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000082f33 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000aad83 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009674b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006fe0b : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000362c6 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x0000000000071033 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df32 : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000b5c13 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000016e711 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000002b0ae : add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x0000000000065892 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x00000000001a90a5 : add byte ptr [rax], 0 ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x000000000006d82b : add byte ptr [rax], 0 ; je 0x6d840 ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc0 : add byte ptr [rax], 0 ; je 0x6fdd9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f4 : add byte ptr [rax], 0 ; je 0x70508 ; mov eax, esi ; pop rbx ; ret
0x0000000000070676 : add byte ptr [rax], 0 ; je 0x70688 ; mov eax, esi ; pop rbx ; ret
0x0000000000070fea : add byte ptr [rax], 0 ; je 0x71001 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118d : add byte ptr [rax], 0 ; je 0x711a8 ; mov eax, edx ; pop rbx ; ret
0x0000000000071324 : add byte ptr [rax], 0 ; je 0x71338 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b82 : add byte ptr [rax], 0 ; je 0x75b98 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f87 : add byte ptr [rax], 0 ; je 0x75f98 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ab : add byte ptr [rax], 0 ; je 0x760c0 ; mov eax, esi ; pop rbx ; ret
0x00000000000761ed : add byte ptr [rax], 0 ; je 0x76208 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d2 : add byte ptr [rax], 0 ; je 0x764e8 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e77 : add byte ptr [rax], 0 ; je 0x76e88 ; mov eax, edx ; pop rbx ; ret
0x0000000000078083 : add byte ptr [rax], 0 ; je 0x78098 ; mov eax, edx ; pop rbx ; ret
0x0000000000126a39 : add byte ptr [rax], ah ; add bl, ch ; ret 0xb8
0x00000000001ab0ef : add byte ptr [rax], ah ; and al, 0xf2 ; jmp qword ptr [rcx]
0x000000000010e70e : add byte ptr [rax], ah ; jmp 0x10e6d8
0x000000000019df2f : add byte ptr [rax], ah ; jno 0x19df20 ; call qword ptr [rcx]
0x00000000001b119f : add byte ptr [rax], ah ; jnp 0x1b119c ; jmp qword ptr [rcx]
0x000000000002de14 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001aa99f : add byte ptr [rax], ah ; or dh, dl ; call rsi
0x000000000000a63f : add byte ptr [rax], ah ; ret 0x10
0x00000000000078f7 : add byte ptr [rax], ah ; ret 0xf
0x000000000019f6bf : add byte ptr [rax], ah ; sub edx, ebp ; jmp rax
0x00000000001ae1cf : add byte ptr [rax], ah ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001adabf : add byte ptr [rax], ah ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a7d3e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7d86 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001ace0a : add byte ptr [rax], al ; adc al, 0x13 ; add dword ptr [rax], eax ; jo 0x1acdf5 ; jmp qword ptr [rcx]
0x000000000019d50a : add byte ptr [rax], al ; adc al, 0x1a ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x00000000001af40a : add byte ptr [rax], al ; adc al, 0x39 ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x00000000001afa0a : add byte ptr [rax], al ; adc al, 0x3f ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001b090a : add byte ptr [rax], al ; adc al, 0x4e ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c0a : add byte ptr [rax], al ; adc al, 0x51 ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b110a : add byte ptr [rax], al ; adc al, 0x56 ; add dword ptr [rax], eax ; nop ; jp 0x1b1111 ; jmp qword ptr [rcx]
0x0000000000197c86 : add byte ptr [rax], al ; adc al, 0x59 ; out dx, al ; call rsp
0x00000000001b2a0a : add byte ptr [rax], al ; adc al, 0x6f ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x0000000000197dd6 : add byte ptr [rax], al ; adc al, 0x71 ; out dx, al ; jmp rsp
0x00000000001b360a : add byte ptr [rax], al ; adc al, 0x7b ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001a790a : add byte ptr [rax], al ; adc al, 0xbe ; add byte ptr [rax], al ; adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001977f6 : add byte ptr [rax], al ; adc al, 0xcc ; in eax, dx ; inc esp ; ret 0
0x000000000019792e : add byte ptr [rax], al ; adc al, 0xfe ; in eax, dx ; call rsp
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001a790e : add byte ptr [rax], al ; adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x00000000001a643e : add byte ptr [rax], al ; adc byte ptr [rdi - 0x12], cl ; call qword ptr [rdx]
0x0000000000035d70 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000001a163e : add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x00000000001a942e : add byte ptr [rax], al ; adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x0000000000187471 : add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x00000000001acbe9 : add byte ptr [rax], al ; add ah, dh ; adc byte ptr [rcx], al ; add al, dh ; ret
0x00000000001abac9 : add byte ptr [rax], al ; add ah, dl ; inc dword ptr [rax] ; add al, dh ; ret
0x00000000001adcfa : add byte ptr [rax], al ; add al, 0x22 ; add dword ptr [rax], eax ; loopne 0x1adca0 ; hlt ; jmp qword ptr [rcx]
0x00000000001adefa : add byte ptr [rax], al ; add al, 0x24 ; add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ae1fa : add byte ptr [rax], al ; add al, 0x27 ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x000000000019f1fa : add byte ptr [rax], al ; add al, 0x37 ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000001b09fa : add byte ptr [rax], al ; add al, 0x4f ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001bb2fa : add byte ptr [rax], al ; add al, 0xf8 ; add dword ptr [rax], eax ; jo 0x1bb2a0 ; sti ; jmp qword ptr [rdx]
0x000000000001bdd5 : add byte ptr [rax], al ; add al, ah ; ret 0x13
0x000000000018803d : add byte ptr [rax], al ; add al, al ; add al, 0xf2 ; call rax
0x00000000001860b5 : add byte ptr [rax], al ; add al, bh ; loope 0x1860c0 ; jmp qword ptr [rdi]
0x0000000000186135 : add byte ptr [rax], al ; add al, bh ; loope 0x186140 ; jmp qword ptr [rdi]
0x00000000001861b5 : add byte ptr [rax], al ; add al, bh ; loope 0x1861c0 ; jmp qword ptr [rdi]
0x00000000001ae747 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0x283100e] ; push rsp ; ret
0x0000000000111663 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000112388 : add byte ptr [rax], al ; add al, ch ; nop ; ret 0xfff1
0x0000000000033540 : add byte ptr [rax], al ; add al, ch ; pop rax ; ret
0x0000000000039aa5 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000bdda6 : add byte ptr [rax], al ; add al, ch ; ret 0x572
0x000000000006f646 : add byte ptr [rax], al ; add al, ch ; ret 0xa1
0x000000000012c006 : add byte ptr [rax], al ; add al, ch ; ret 0xcd
0x000000000002aca6 : add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00000000000dd1d6 : add byte ptr [rax], al ; add al, ch ; ret 0xf426
0x00000000000bd0a6 : add byte ptr [rax], al ; add al, ch ; ret 0xf7c6
0x00000000001242a6 : add byte ptr [rax], al ; add al, ch ; ret 0xff0d
0x000000000001bded : add byte ptr [rax], al ; add al, dh ; ret
0x000000000001be1d : add byte ptr [rax], al ; add al, dh ; ret 0x13
0x00000000001750fd : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013221a : add byte ptr [rax], al ; add bh, bh ; loope 0x1321b7 ; ret
0x00000000000d726b : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000cea3a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000ada9f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x00000000000d958b : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00000000000d9585 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x00000000001359bb : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000895da : add byte ptr [rax], al ; add bl, al ; ret
0x000000000013510c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000194dcf : add byte ptr [rax], al ; add bl, bh ; call rax
0x000000000007b5db : add byte ptr [rax], al ; add bl, ch ; fucomp st(0) ; ret
0x00000000000bf1e8 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x00000000000a6ddd : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a6ded : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002bd55 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000142c6b : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x0000000000055b8b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000e3a00 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000c1502 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000002bdbc : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x860f
0x0000000000194673 : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000000b0629 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000072d2d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000004b64a : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000017581d : add byte ptr [rax], al ; add byte ptr [rax + 0x67], al ; jmp 0x175829
0x00000000000a732d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000cd958 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x00000000000c959a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000140812 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000010efc9 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8349
0x00000000000ff52f : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000f96c4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000000f963a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x0000000000025b96 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x0000000000025395 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xdb85
0x0000000000028092 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xed85
0x00000000000cbf7b : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000cda1d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x000000000012b00d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000004a0b3 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000aaec0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003c034 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000003bf0d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000012e05d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000cdbf4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x00000000001a7d3d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret 0
0x00000000001a7d85 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000ac563 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi - 0x10] ; ret
0x000000000003c2c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000073eda : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000034c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000001f919 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000ca1ed : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x00000000000ff97d : add byte ptr [rax], al ; add byte ptr [rax - 0x6af0dc06], al ; ret 0xc084
0x00000000000ac5ad : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac59d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007ff31 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fde0c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000007b704 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000072fe4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jp 0x73033 ; jmp 0x72fb8
0x000000000002342d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d1971 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbp ; adc al, ch ; ret
0x00000000000c9b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000007cb3d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000bea24 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000103f13 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe8
0x0000000000103e13 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret 0xffe9
0x000000000010bf52 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x0000000000088b73 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000012e30a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000103acf : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000076ca1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rbp ; sbb al, ch ; ret
0x000000000003ea20 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008408a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000afc56 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000f003d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002c03b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000cdff1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000006f0c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000105e93 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000570dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061cd5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000951f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000007a3de : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000006368e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 3
0x0000000000138ee1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x19], 0x5b ; ret
0x00000000000f71bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or dh, dh ; ret 0x7540
0x00000000000320dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000126b8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000aa14d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb2d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013e4ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000021903 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e58ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001749ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000108f38 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000056a05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000029014 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000000000146963 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d7c0d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000afc8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c6d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000609ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x000000000010e615 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x00000000001484e1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014698d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bc73d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009f65d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000029abe : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000015a7f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000033f0b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003548b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001a7d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret 0
0x00000000001a7d84 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000001bdd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x13
0x000000000018803b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; add al, 0xf2 ; call rax
0x00000000001860b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1860c2 ; jmp qword ptr [rdi]
0x0000000000186133 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x186142 ; jmp qword ptr [rdi]
0x00000000001861b3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; loope 0x1861c2 ; jmp qword ptr [rdi]
0x000000000001bdeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001be1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x13
0x0000000000194dcd : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bh ; call rax
0x00000000000a6deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x00000000000758cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000072d2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d4c
0x000000000017581b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x67], al ; jmp 0x17582b
0x00000000000ac5ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000ac5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000ac59b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000007cb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000084088 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x00000000000bff4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000570db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000061cd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xe0e8
0x00000000000320db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000aa14b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x00000000000feb2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013e4ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x00000000001749ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000d7c0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000008eaeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000008ea7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x00000000000afc8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000002519b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000e6c6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000006167b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xb908
0x00000000000c004b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000001bdd1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ah ; ret 0x13
0x000000000001bde9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x000000000001be19 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret 0x13
0x0000000000194dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, bh ; call rax
0x00000000000ea94d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001bee70 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000194dca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x000000000001bd59 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000018249 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00000000000093a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000001860b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1860c3 ; jmp qword ptr [rdi]
0x0000000000186132 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186143 ; jmp qword ptr [rdi]
0x00000000001861b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1861c3 ; jmp qword ptr [rdi]
0x000000000017581a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x17582c
0x00000000001942ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000000404a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcb6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001e712 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x00000000000189b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c9
0x000000000001926a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18ca
0x000000000001a362 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d2
0x0000000000003fea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017e1f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017e6e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008652 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b532 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bf352 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001befd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007602 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bd746 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bd5f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000194dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x00000000000a9bab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001bd5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x000000000001824b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x000000000003a899 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000001019fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000aa38b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001100eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000001942eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000007a61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000001173cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000000abf4c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004db0e : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x00000000000fe3fc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000077eec : add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001750fc : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000001439ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x000000000018021c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017f3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001860b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1860c1 ; jmp qword ptr [rdi]
0x0000000000186134 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x186141 ; jmp qword ptr [rdi]
0x00000000001861b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; loope 0x1861c1 ; jmp qword ptr [rdi]
0x00000000000fb847 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000108a77 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000d6c0d : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fdc55 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbf7a : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000097486 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x0000000000187470 : add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; out dx, al ; call rsp
0x00000000001a7d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1a7dab ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x000000000017581c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x17582a
0x000000000006084e : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x5ca9d
0x00000000000bf711 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xbb947
0x0000000000058e19 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000170b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000170b3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000170b4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000170b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000170b6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000170aac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000170abc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000170acc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170adc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000170aec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000170afc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000170b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000170b1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac59c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000170a9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000168c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a732c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a69fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000168c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168c7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f5f3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a6d1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000cda1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007222c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000004a0b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e05c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000013c11c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d720c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000011865b : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11862c
0x000000000015b7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000168cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000013c4d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6d5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000012d97a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000c884c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007cb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007cb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000168c5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a6d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000a6ddc : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a6dec : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000007a61c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b92c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000002058b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000133728 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013c2d9 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000096ce2 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001095e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000003a89a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000007b9b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001942ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x0000000000194672 : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000000404c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcb6c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000e45c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x000000000001e714 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x00000000000189b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c9
0x000000000001926c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18ca
0x000000000001a364 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d2
0x000000000017f1ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f984 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000017e1f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000005ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x30
0x000000000000d7b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000017e6e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000b324 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x4f
0x0000000000008654 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x53
0x000000000000b534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000001bf354 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001befd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000007604 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 4
0x00000000001bd748 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000000dd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001bd5f8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000194dce : add byte ptr [rax], al ; add byte ptr [rax], al ; sti ; call rax
0x00000000000a9bac : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000003a7a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009674c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000094422 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x94433 ; ret
0x00000000000a9bad : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001bd5d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000001a116d : add byte ptr [rax], al ; add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x000000000001824d : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x0000000000029a6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c311b : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094f31 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000054d9c : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b6f : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000012cf27 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000006d714 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x00000000000aa8e1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c36d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x0000000000024aae : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000000db203 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d5cfd : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000006b455 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcfb8b37], al ; ret
0x00000000000aac39 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000943e3 : add byte ptr [rax], al ; add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000cd416 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000015b0bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000029da9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000035a94 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000003a9fd : add byte ptr [rax], al ; add byte ptr [rbx + 0xf48fffa], al ; ret
0x0000000000170848 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000005a37c : add byte ptr [rax], al ; add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000005721c : add byte ptr [rax], al ; add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x000000000003a89b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000047a0e : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000000e13cd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f71a], al ; ret
0x000000000013c5cd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000e17bd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000e978d : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00000000001019fd : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000072fd4 : add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x00000000000b5776 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x0000000000168cad : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000012fb09 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000006f7d7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000001169ce : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000168c8d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a6d3d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000075510 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x00000000000c4990 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000056802 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056785 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x00000000000362c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000aa900 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc1e : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x00000000000aa38d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000001bccf1 : add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x00000000000e4751 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000002f6d5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000103711 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000005ae22 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x117128
0x0000000000103845 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000088cfd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x00000000000d97d8 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd97ef
0x0000000000071034 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df33 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x000000000010367a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000103689 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000000f5f3d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000045f92 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000000000047d67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000ddd77 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x000000000008e1e1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000005aef4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000b5c14 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000005133c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010f76d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000094f9f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000e1a54 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000d5350 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001100ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e1d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000089e9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000bd86d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x0000000000121577 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000835df : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000001942ed : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000019cc8e : add byte ptr [rax], al ; add byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x000000000008ec10 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ec36 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000001a587e : add byte ptr [rax], al ; add byte ptr [rcx], 0xee ; call qword ptr [rsi]
0x00000000000d5b65 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5af6
0x00000000000b9df5 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000db212 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e0795 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000db0ab : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x000000000008d9f4 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000c286f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000c5fe1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c41fd : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c2832 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a7eb : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xca39
0x000000000005401a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c672d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c245e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5f51 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fccef : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000e06fd : add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000003a26a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ae505 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x00000000000abc62 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001728f2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000000e81f8 : add byte ptr [rax], al ; add byte ptr [rdi - 0xa], dh ; ret
0x0000000000115975 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x00000000000aab95 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b8bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000015b92d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000025c55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d18ed : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce25 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000007a61d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000008eb2d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000c52e4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000000c55fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x144
0x000000000013d40b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bc6a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a84e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4389
0x00000000000df12a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8539
0x0000000000142b1c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8941
0x00000000000fb848 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eaf08 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b64ec : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d786e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c354f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xd801
0x00000000000e06eb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000014a735 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d8e7c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x000000000016e712 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008ea42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000103653 : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f68a5 : add byte ptr [rax], al ; add byte ptr [rsi + 6], dh ; ret
0x00000000001bace6 : add byte ptr [rax], al ; add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000000f5f17 : add byte ptr [rax], al ; add byte ptr [rsp + rax - 0xd], dh ; ret
0x000000000019f13a : add byte ptr [rax], al ; add byte ptr ss:[rax], al ; rol al, 0xe9 ; call qword ptr [rsi]
0x00000000000e4c65 : add byte ptr [rax], al ; add cl, al ; call 0x66d0d57d
0x0000000000067495 : add byte ptr [rax], al ; add cl, ch ; pop rdi ; ret 0xffff
0x000000000002d2c5 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000060226 : add byte ptr [rax], al ; add cl, ch ; ret 0xffb8
0x0000000000067732 : add byte ptr [rax], al ; add cl, ch ; ret 0xffbf
0x000000000009e7e5 : add byte ptr [rax], al ; add cl, ch ; ret 0xffd3
0x000000000009e6b1 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff5
0x000000000002b0af : add byte ptr [rax], al ; add cl, ch ; ret 0xfffb
0x00000000000f0c01 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x000000000006084f : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x0000000000065893 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000023ff4 : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000e45b7 : add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000e45c6 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000171d61 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000061ba2 : add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000000a12b0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000a12b9 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000e4679 : add byte ptr [rax], al ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000d5b66 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001af15a : add byte ptr [rax], al ; add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000000abf4e : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000059820 : add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000008e8f4 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000004da4e : add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x0000000000132db1 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000135831 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000134f91 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000132214 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000012eb15 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001442fe : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x00000000000359da : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x00000000000353a8 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000013aee1 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f5f59 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000020b8b : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000007abac : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034b20 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000012f7dd : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000209ac : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x0000000000035697 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000045cf1 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008d85a : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021aa7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035178 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001a5e6e : add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x000000000019d41a : add byte ptr [rax], al ; and al, 0x19 ; add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001b051a : add byte ptr [rax], al ; and al, 0x4a ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a1a : add byte ptr [rax], al ; and al, 0x4f ; add byte ptr [rax], al ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001b291a : add byte ptr [rax], al ; and al, 0x6e ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a381a : add byte ptr [rax], al ; and al, 0x7d ; add byte ptr [rax], al ; sar byte ptr [rdi], 1 ; in eax, dx ; jmp qword ptr [rax]
0x00000000001a521a : add byte ptr [rax], al ; and al, 0x97 ; add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a661a : add byte ptr [rax], al ; and al, 0xab ; add byte ptr [rax], al ; loopne 0x1a6698 ; out dx, al ; jmp rdx
0x0000000000126a38 : add byte ptr [rax], al ; and byte ptr [rax], al ; jmp 0x126a05
0x000000000019df2e : add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x000000000019bcbe : add byte ptr [rax], al ; and byte ptr [rdi - 0x18], cl ; call qword ptr [rcx]
0x00000000001ab0ee : add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aa99e : add byte ptr [rax], al ; and byte ptr [rdx], cl ; call rsi
0x00000000001a067e : add byte ptr [rax], al ; and byte ptr [rsi], 0xeb ; call qword ptr [rcx]
0x00000000001adb5a : add byte ptr [rax], al ; and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x0000000000077eee : add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000002e0eb : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000001b2bef : add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008eb2e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x000000000008b7a0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008d454 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000001ab316 : add byte ptr [rax], al ; call 0x111aa557
0x0000000000088e1c : add byte ptr [rax], al ; call 0x115044
0x00000000001a85f6 : add byte ptr [rax], al ; call 0x131a7656
0x00000000001a8626 : add byte ptr [rax], al ; call 0x131a7686
0x00000000001a8656 : add byte ptr [rax], al ; call 0x131a76b6
0x00000000001a8686 : add byte ptr [rax], al ; call 0x131a76e6
0x00000000001a86b6 : add byte ptr [rax], al ; call 0x131a7716
0x000000000019d126 : add byte ptr [rax], al ; call 0x1819ba3a
0x00000000000f3fab : add byte ptr [rax], al ; call 0x2027d
0x00000000001a85c6 : add byte ptr [rax], al ; call 0x211a7626
0x00000000001aad86 : add byte ptr [rax], al ; call 0x221a9fab
0x00000000001aad85 : add byte ptr [rax], al ; call 0x221a9fac
0x00000000001a3c56 : add byte ptr [rax], al ; call 0x271a29a8
0x00000000001a36e6 : add byte ptr [rax], al ; call 0x281a242e
0x0000000000021956 : add byte ptr [rax], al ; call 0x2dc44
0x0000000000112389 : add byte ptr [rax], al ; call 0x2e624
0x0000000000080fdf : add byte ptr [rax], al ; call 0x7d284
0x00000000001750fe : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000093a6 : add byte ptr [rax], al ; call qword ptr [rsi]
0x00000000000bc20d : add byte ptr [rax], al ; call r12
0x0000000000020850 : add byte ptr [rax], al ; call rax
0x0000000000103659 : add byte ptr [rax], al ; call rbx
0x00000000001439ae : add byte ptr [rax], al ; call rcx
0x000000000018021e : add byte ptr [rax], al ; call rdi
0x0000000000039fcc : add byte ptr [rax], al ; call rdx
0x000000000017f3ce : add byte ptr [rax], al ; call rsp
0x00000000001aa776 : add byte ptr [rax], al ; clc ; add dh, dl ; call rdi
0x000000000019df86 : add byte ptr [rax], al ; clc ; jno 0x19df79 ; call qword ptr [rax]
0x00000000001860b6 : add byte ptr [rax], al ; clc ; loope 0x1860bf ; jmp qword ptr [rdi]
0x0000000000186136 : add byte ptr [rax], al ; clc ; loope 0x18613f ; jmp qword ptr [rdi]
0x00000000001861b6 : add byte ptr [rax], al ; clc ; loope 0x1861bf ; jmp qword ptr [rdi]
0x00000000001a90a6 : add byte ptr [rax], al ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000001a7b36 : add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001acdf2 : add byte ptr [rax], al ; cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000001a116a : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x00000000001b08f2 : add byte ptr [rax], al ; cld ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b07f2 : add byte ptr [rax], al ; cld ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b05f2 : add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001a15f2 : add byte ptr [rax], al ; cld ; pop rdx ; add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x00000000001b0bf2 : add byte ptr [rax], al ; cld ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0bf9 ; jmp qword ptr [rcx]
0x00000000001a85f2 : add byte ptr [rax], al ; cld ; retf 0 ; call 0x131a765a
0x00000000001ab042 : add byte ptr [rax], al ; cmc ; add byte ptr [rax], al ; fsub dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000000000fb849 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000108a79 : add byte ptr [rax], al ; cmovae rax, rsi ; ret
0x00000000000b64ed : add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000d6c0f : add byte ptr [rax], al ; cmove eax, esi ; ret
0x00000000000fdc57 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cbf7c : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000001157c9 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000000000097488 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x00000000000cd9ad : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000010eccf : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000019d432 : add byte ptr [rax], al ; cmp al, 0x19 ; add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001aea32 : add byte ptr [rax], al ; cmp al, 0x2f ; add dword ptr [rax], eax ; js 0x1aea22 ; hlt ; call qword ptr [rbx]
0x00000000001b0732 : add byte ptr [rax], al ; cmp al, 0x4c ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0b32 : add byte ptr [rax], al ; cmp al, 0x50 ; add dword ptr [rax], eax ; js 0x1b0bb3 ; cmc ; jmp qword ptr [rcx]
0x00000000001b2c32 : add byte ptr [rax], al ; cmp al, 0x71 ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b5432 : add byte ptr [rax], al ; cmp al, 0x99 ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a7b32 : add byte ptr [rax], al ; cmp al, 0xc0 ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001bbf32 : add byte ptr [rax], al ; cmp al, 4 ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x000000000016cbc6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000019e556 : add byte ptr [rax], al ; cmp byte ptr [rbp - 0x17], bh ; jmp rsp
0x00000000001a6346 : add byte ptr [rax], al ; cmp byte ptr [rdi], dh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab106 : add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001ab246 : add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ch ; jmp rcx
0x0000000000074697 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x746a8 ; pop rbx ; ret
0x00000000000cc6f0 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xcc703 ; ret
0x00000000000acc17 : add byte ptr [rax], al ; cmp edi, 0x7f ; ja 0xacc31 ; mov eax, edi ; ret
0x0000000000072aa5 : add byte ptr [rax], al ; cmp qword ptr [rax + 0x30], 0 ; je 0x72ab9 ; ret
0x0000000000083f87 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x83f58 ; ret
0x00000000000cda94 : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xcdac7 ; ret
0x00000000001a66e6 : add byte ptr [rax], al ; cwde ; jae 0x1a66de ; jmp qword ptr [rdx]
0x000000000019e526 : add byte ptr [rax], al ; cwde ; jl 0x19e519 ; jmp qword ptr [rsi]
0x000000000019d436 : add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6de6 : add byte ptr [rax], al ; cwde ; out 0xee, al ; call qword ptr [rax]
0x00000000001a1406 : add byte ptr [rax], al ; cwde ; ret
0x00000000001a0b56 : add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b60
0x00000000001a9342 : add byte ptr [rax], al ; fadd dword ptr [rax] ; add byte ptr [rax + 0x25], ch ; int1 ; jmp qword ptr [rcx]
0x00000000001a2876 : add byte ptr [rax], al ; fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x00000000001afcd2 : add byte ptr [rax], al ; fadd qword ptr [rcx + 1] ; add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000001aced2 : add byte ptr [rax], al ; fcom qword ptr [rbx] ; add dword ptr [rax], eax ; call 0x131ac2c0
0x00000000001a7746 : add byte ptr [rax], al ; fcomp st(1) ; cld ; call qword ptr [rax]
0x00000000001b2bd2 : add byte ptr [rax], al ; fdiv qword ptr [rax + 1] ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6bd2 : add byte ptr [rax], al ; fdiv qword ptr [rax - 0x4e880000] ; out dx, al ; call qword ptr [rax]
0x00000000001af4d2 : add byte ptr [rax], al ; fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001af8d2 : add byte ptr [rax], al ; fdivr qword ptr [rip + 0x1e280001] ; cmc ; jmp qword ptr [rcx]
0x00000000001ab0d2 : add byte ptr [rax], al ; fdivr st(5), st(0) ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001b0ad2 : add byte ptr [rax], al ; fmul qword ptr [rdi + 1] ; add byte ptr [rax], bl ; jo 0x1b0ad9 ; jmp qword ptr [rcx]
0x00000000001a45d2 : add byte ptr [rax], al ; fmul qword ptr [rdx + 0x74280000] ; in eax, dx ; call qword ptr [rcx]
0x00000000000350d6 : add byte ptr [rax], al ; fstp st(1) ; ret
0x00000000001ab046 : add byte ptr [rax], al ; fsub dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000000001adbd2 : add byte ptr [rax], al ; fsub qword ptr [rax] ; add dword ptr [rax], eax ; clc ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a7d16 : add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001acbea : add byte ptr [rax], al ; hlt ; adc byte ptr [rcx], al ; add al, dh ; ret
0x00000000001b02ea : add byte ptr [rax], al ; hlt ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001ae9ea : add byte ptr [rax], al ; hlt ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af1ea : add byte ptr [rax], al ; hlt ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0aea : add byte ptr [rax], al ; hlt ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001ab0ea : add byte ptr [rax], al ; hlt ; cmc ; add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001af8ea : add byte ptr [rax], al ; hlt ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x0000000000196e5e : add byte ptr [rax], al ; hlt ; cmp edx, ebp ; jmp rsp
0x00000000001a61ea : add byte ptr [rax], al ; hlt ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x1a622f ; out dx, al ; jmp qword ptr [rcx]
0x00000000001b2bea : add byte ptr [rax], al ; hlt ; jo 0x1b2bf9 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a67ea : add byte ptr [rax], al ; hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jle 0x1a67ea ; jmp qword ptr [rcx]
0x00000000001ad7ea : add byte ptr [rax], al ; hlt ; sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x00000000001975ee : add byte ptr [rax], al ; hlt ; xchg eax, esp ; in eax, dx ; jmp rsp
0x00000000001baada : add byte ptr [rax], al ; in al, -0x11 ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x0000000000197e6e : add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x00000000001a92da : add byte ptr [rax], al ; in al, -0x29 ; add byte ptr [rax], al ; jo 0x1a930f ; int1 ; jmp rcx
0x000000000019bbda : add byte ptr [rax], al ; in al, 0 ; add byte ptr [rax], al ; xor byte ptr [rbp - 0x18], cl ; call qword ptr [rsi]
0x00000000001b0eda : add byte ptr [rax], al ; in al, 0x53 ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0ee1 ; jmp qword ptr [rcx]
0x00000000001979a6 : add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x00000000001acce2 : add byte ptr [rax], al ; in al, dx ; adc dword ptr [rcx], eax ; add al, cl ; fpatan ; call qword ptr [rbx]
0x00000000001b09e2 : add byte ptr [rax], al ; in al, dx ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adee2 : add byte ptr [rax], al ; in al, dx ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a36e2 : add byte ptr [rax], al ; in al, dx ; jnp 0x1a36f0 ; add al, ch ; cmp al, 0xed ; jmp qword ptr [rdi]
0x0000000000187472 : add byte ptr [rax], al ; in al, dx ; out dx, al ; call rsp
0x00000000001b2ae2 : add byte ptr [rax], al ; in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b240e
0x00000000001a6ae2 : add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a66e2 : add byte ptr [rax], al ; in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cwde ; jae 0x1a66e2 ; jmp qword ptr [rdx]
0x00000000001acd62 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, cl ; fpatan ; jmp qword ptr [rcx]
0x00000000001af962 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; call 0x221aee94
0x00000000001bb062 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001af362 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001baf62 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; hlt ; add dword ptr [rax], eax ; js 0x1baf0b ; sti ; jmp qword ptr [rdx]
0x00000000001ba162 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x0000000000197db6 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x00000000001b2962 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5962 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000001b6462 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; test eax, 0xe1f80001 ; sti ; call rsi
0x00000000001aed62 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001bc53e : add byte ptr [rax], al ; int1 ; or byte ptr [rbx], al ; ret
0x000000000019dfce : add byte ptr [rax], al ; jb 0x19dfc1 ; jmp qword ptr [rsi]
0x00000000000f68a6 : add byte ptr [rax], al ; jbe 0xf68b5 ; ret
0x00000000001a386a : add byte ptr [rax], al ; je 0x1a38f4 ; add byte ptr [rax], al ; xor byte ptr [rax - 0x13], al ; jmp rsi
0x00000000001a4c6a : add byte ptr [rax], al ; je 0x1a4c08 ; add byte ptr [rax], al ; test bpl, bpl ; call qword ptr [rdx]
0x00000000001a5e6a : add byte ptr [rax], al ; je 0x1a5e1a ; add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x00000000001a7d9e : add byte ptr [rax], al ; je 0x1a7da9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001aef6a : add byte ptr [rax], al ; je 0x1aefab ; add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c6a : add byte ptr [rax], al ; je 0x1b0cc8 ; add dword ptr [rax], eax ; jb 0x1b0c71 ; jmp qword ptr [rcx]
0x000000000006d82c : add byte ptr [rax], al ; je 0x6d83f ; mov eax, edx ; pop rbx ; ret
0x000000000006fdc1 : add byte ptr [rax], al ; je 0x6fdd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000704f5 : add byte ptr [rax], al ; je 0x70507 ; mov eax, esi ; pop rbx ; ret
0x0000000000070677 : add byte ptr [rax], al ; je 0x70687 ; mov eax, esi ; pop rbx ; ret
0x0000000000070feb : add byte ptr [rax], al ; je 0x71000 ; mov eax, r8d ; pop rbx ; ret
0x000000000007118e : add byte ptr [rax], al ; je 0x711a7 ; mov eax, edx ; pop rbx ; ret
0x0000000000071325 : add byte ptr [rax], al ; je 0x71337 ; mov eax, edx ; pop rbx ; ret
0x0000000000075b83 : add byte ptr [rax], al ; je 0x75b97 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f88 : add byte ptr [rax], al ; je 0x75f97 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ac : add byte ptr [rax], al ; je 0x760bf ; mov eax, esi ; pop rbx ; ret
0x00000000000761ee : add byte ptr [rax], al ; je 0x76207 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d3 : add byte ptr [rax], al ; je 0x764e7 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e78 : add byte ptr [rax], al ; je 0x76e87 ; mov eax, edx ; pop rbx ; ret
0x0000000000078084 : add byte ptr [rax], al ; je 0x78097 ; mov eax, edx ; pop rbx ; ret
0x0000000000087607 : add byte ptr [rax], al ; je 0x87614 ; ret
0x0000000000088f26 : add byte ptr [rax], al ; je 0x88f34 ; ret
0x0000000000094426 : add byte ptr [rax], al ; je 0x9442f ; ret
0x00000000000ac564 : add byte ptr [rax], al ; je 0xac5d8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000cdabb : add byte ptr [rax], al ; je 0xcdb0e ; mov eax, 0x20 ; ret
0x00000000000e8466 : add byte ptr [rax], al ; je 0xe84a6 ; xor eax, eax ; ret
0x00000000000f5f18 : add byte ptr [rax], al ; je 0xf5f25 ; ret
0x00000000001728f3 : add byte ptr [rax], al ; jg 0x172906 ; neg eax ; ret
0x00000000000abc63 : add byte ptr [rax], al ; jg 0xabc6f ; neg eax ; ret
0x0000000000170849 : add byte ptr [rax], al ; jl 0x170856 ; neg eax ; ret
0x00000000001a2872 : add byte ptr [rax], al ; jl 0x1a28ec ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x00000000001aa772 : add byte ptr [rax], al ; jl 0x1aa76b ; add byte ptr [rax], al ; clc ; add dh, dl ; call rdi
0x00000000001b2b72 : add byte ptr [rax], al ; jl 0x1b2bef ; add dword ptr [rax], eax ; call 0x271b249e
0x00000000001bc172 : add byte ptr [rax], al ; jl 0x1bc185 ; add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x00000000001a67ee : add byte ptr [rax], al ; jle 0x1a67e6 ; jmp qword ptr [rcx]
0x000000000017581e : add byte ptr [rax], al ; jmp 0x175828
0x00000000001972b6 : add byte ptr [rax], al ; jmp 0x1972c0
0x000000000005f80f : add byte ptr [rax], al ; jmp 0x5baf4
0x0000000000060850 : add byte ptr [rax], al ; jmp 0x5ca9b
0x0000000000067496 : add byte ptr [rax], al ; jmp 0x63700
0x000000000007b5dc : add byte ptr [rax], al ; jmp 0x7b5c2
0x00000000000bf713 : add byte ptr [rax], al ; jmp 0xbb945
0x00000000000bf1e9 : add byte ptr [rax], al ; jmp 0xbf1b2
0x0000000000035325 : add byte ptr [rax], al ; jmp rax
0x000000000013221b : add byte ptr [rax], al ; jmp rcx
0x00000000000cd98f : add byte ptr [rax], al ; jne 0xcd960 ; ret
0x00000000000cdb9e : add byte ptr [rax], al ; jne 0xcdb81 ; xor eax, eax ; ret
0x000000000019cc8f : add byte ptr [rax], al ; jno 0x19cc94 ; jmp qword ptr [rdi]
0x000000000019c1be : add byte ptr [rax], al ; jnp 0x19c1c5 ; jmp qword ptr [rdx]
0x00000000001a2c4e : add byte ptr [rax], al ; jo 0x1a2c71 ; in eax, dx ; call rdx
0x00000000001a61ee : add byte ptr [rax], al ; jo 0x1a622b ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a92de : add byte ptr [rax], al ; jo 0x1a930b ; int1 ; jmp rcx
0x00000000001b0abf : add byte ptr [rax], al ; jo 0x1b0abc ; jmp qword ptr [rcx]
0x00000000001b2b42 : add byte ptr [rax], al ; jo 0x1b2b51 ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001a6406 : add byte ptr [rax], al ; js 0x1a645d ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6ab6 : add byte ptr [rax], al ; js 0x1a6abe ; stc ; call qword ptr [rax]
0x00000000001a6bd6 : add byte ptr [rax], al ; js 0x1a6b90 ; out dx, al ; call qword ptr [rax]
0x00000000000cdbf5 : add byte ptr [rax], al ; js 0xcdc05 ; ret
0x00000000001bc6d4 : add byte ptr [rax], al ; lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bc67c : add byte ptr [rax], al ; lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x000000000012cb41 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012cf28 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000170b2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000170b3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000170b4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000170b5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000170b6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000170a8d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000170aae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000170abe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000170ace : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170ade : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000170aee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000170afe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000170a3a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170b0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000170b1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000ac43b : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac59e : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5be : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi - 8] ; ret
0x0000000000170a9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000002092e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16bcf4] ; ret
0x000000000002093e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x16dc23] ; ret
0x000000000012b0ae : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x61a2e] ; ret
0x00000000001206ce : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2a8025] ; call rax
0x00000000000450dc : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f217 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007bf07 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c2f7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c747 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f510 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ac37 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007aea7 : add byte ptr [rax], al ; lea rsi, qword ptr [rip - 0x580] ; call rax
0x00000000001b0aa2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; call 0x221b0025
0x00000000001a6ba2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b0fa2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fa9 ; jmp qword ptr [rbx]
0x00000000001a7da2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x0000000000187f2e : add byte ptr [rax], al ; loopne 0x187f37 ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x00000000001a661e : add byte ptr [rax], al ; loopne 0x1a6694 ; out dx, al ; jmp rdx
0x00000000001bc688 : add byte ptr [rax], al ; loopne 0x1bc69b ; ret 0xb
0x00000000001bc6e0 : add byte ptr [rax], al ; loopne 0x1bc6f2 ; ret 0xa
0x00000000001acdaa : add byte ptr [rax], al ; mov ah, 0x12 ; add dword ptr [rax], eax ; adc dl, bl ; jmp qword ptr [rcx]
0x000000000019d4aa : add byte ptr [rax], al ; mov ah, 0x19 ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001aebaa : add byte ptr [rax], al ; mov ah, 0x30 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001af9aa : add byte ptr [rax], al ; mov ah, 0x3e ; add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b05aa : add byte ptr [rax], al ; mov ah, 0x4a ; add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019749e : add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x00000000001b3baa : add byte ptr [rax], al ; mov ah, 0x80 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001aafce : add byte ptr [rax], al ; mov al, 0x22 ; jmp qword ptr [rcx]
0x00000000001a5ece : add byte ptr [rax], al ; mov al, 0x29 ; out dx, al ; jmp qword ptr [rdi]
0x00000000001a4d3e : add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000016afae : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x0000000000166c7e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001a15f6 : add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x00000000001a7ff6 : add byte ptr [rax], al ; mov byte ptr [rax + rsi*8], bh ; jmp qword ptr [rbx]
0x000000000019c2f6 : add byte ptr [rax], al ; mov byte ptr [rax - 0x18], bh ; call qword ptr [rax]
0x00000000001a0ad6 : add byte ptr [rax], al ; mov byte ptr [rbx - 0x15], dl ; call rcx
0x0000000000168c4e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000d58de : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009e9be : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000a732e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5d2e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfe : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a69fe : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000072b7b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168c8e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cae : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168c9e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168c7e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000f5f3e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000a6d1e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x000000000009e9ee : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000a6d3e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d4e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6d2e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000055765 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000012d93e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000012d92e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xb ; ret
0x000000000012d95e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000012d94e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000f67c4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000c9dd0 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000a5d3e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000008779e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000cd23e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000cd25e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000cd24e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000cd26e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000cd47e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000cd959 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000bc36e : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x00000000001077ae : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000cda1e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000011954a : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003548c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012b00e : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x000000000004a0b4 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012e05e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000105f8a : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000016e39e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007c85e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000012d88c : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000013c11e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d720e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000f5f2e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007742e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x00000000000773fe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000007302e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x000000000003687e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38d802] ; ret
0x000000000006f7d8 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000002122c : add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000010cf7b : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000054e52 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000218a3 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000001169cf : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116ba8 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b631 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000071035 : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000132fea : add byte ptr [rax], al ; mov ebp, eax ; call 0x12f2c6
0x00000000001b9082 : add byte ptr [rax], al ; mov ebp, ss ; add dword ptr [rax], eax ; clc ; ret
0x00000000001a8682 : add byte ptr [rax], al ; mov ebx, cs ; add byte ptr [rax], al ; call 0x131a76ea
0x00000000000a5d6e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000001a9a82 : add byte ptr [rax], al ; mov edi, ds ; add byte ptr [rax], al ; test al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000001aad82 : add byte ptr [rax], al ; mov edx, dr0 ; add byte ptr [rax], al ; call 0x221a9faf
0x000000000011865d : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x11862a
0x000000000015b0be : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a5d5e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000070103 : add byte ptr [rax], al ; mov edx, eax ; je 0x70119 ; mov eax, edx ; pop rbx ; ret
0x00000000000711f5 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x7118d
0x0000000000071386 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x71324
0x0000000000075be1 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b82
0x0000000000076531 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x764d2
0x0000000000075511 : add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000103654 : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000001aa2b2 : add byte ptr [rax], al ; mov esp, 0x180000e7 ; out dx, eax ; int1 ; jmp rcx
0x00000000001adeb2 : add byte ptr [rax], al ; mov esp, 0x18000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001b11b2 : add byte ptr [rax], al ; mov esp, 0x38000156 ; jnp 0x1b11b9 ; jmp qword ptr [rcx]
0x00000000001aedb2 : add byte ptr [rax], al ; mov esp, 0x78000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001ae1b2 : add byte ptr [rax], al ; mov esp, 0x8000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001a3db2 : add byte ptr [rax], al ; mov esp, 0xa8000082 ; in eax, dx ; call qword ptr [rax]
0x00000000001b09b2 : add byte ptr [rax], al ; mov esp, 0xc800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b56b2 : add byte ptr [rax], al ; mov esp, 0xc800019b ; ret
0x00000000001a37b2 : add byte ptr [rax], al ; mov esp, 0xe00007c ; ret 0xffe7
0x00000000001b2ab2 : add byte ptr [rax], al ; mov esp, 0xe800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000004d64b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x00000000001146c0 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x00000000001435b3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000014356b : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001437de : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000896d0 : add byte ptr [rax], al ; mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000168cce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168cee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168cfe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d0e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d1e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d2e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d3e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168cde : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168cbe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x0000000000094cce : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000013c4da : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000a6d5e : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000a6d7e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6d9e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6dae : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dbe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dce : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d8e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a6d6e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000004a0a0 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000762dc : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001322eb : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000012d8cc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b293 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000f5e5c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x000000000012d89c : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000011931e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000003362f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x000000000003a5f6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013822b : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000353e4 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000abf6e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000abf7e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000abf8e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000abf9e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000abfae : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000abfbe : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000abfce : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007b239 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000746b0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000114996 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b705 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000106226 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000003a720 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c884e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000074f6e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb2e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000140ee1 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x284526] ; call qword ptr [rax]
0x00000000001408ce : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x284b39] ; call qword ptr [rax]
0x000000000007cb0e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x348a09] ; ret
0x0000000000021a4e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a3e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a78d9] ; ret
0x00000000000fde0d : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000007df34 : add byte ptr [rax], al ; mov rax, r8 ; ret
0x000000000006dc05 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103116 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006abcd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaac : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000033ea4 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000007cb3e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000014105a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000084ba4 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e539 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000000ec2f4 : add byte ptr [rax], al ; mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x0000000000072fe5 : add byte ptr [rax], al ; mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb7
0x0000000000143656 : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8b1
0x000000000005ae23 : add byte ptr [rax], al ; mov rdi, r12 ; call 0x117127
0x0000000000103846 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000002f6d6 : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x0000000000103712 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x000000000010368a : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000010367b : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000230ae : add byte ptr [rax], al ; mov rdi, rax ; call 0x8f3b7
0x000000000012e30b : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000103ad0 : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x0000000000137345 : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006cb46 : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c433 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000088103 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000013a93e : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000a5d9e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000087bf0 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000d97d9 : add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd97ee
0x000000000007d9c1 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e4
0x000000000005be56 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368111] ; call rax
0x000000000005b800 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368767] ; call rax
0x0000000000050048 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3cc : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x376b9b] ; call rax
0x0000000000088cfe : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000087e60 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000879d2 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000088b74 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000019df82 : add byte ptr [rax], al ; mov word ptr [rax + rax], fs ; add al, bh ; jno 0x19df7d ; call qword ptr [rax]
0x000000000019cf82 : add byte ptr [rax], al ; mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x00000000001ac682 : add byte ptr [rax], al ; mov word ptr [rbx], cs ; add dword ptr [rax], eax ; test al, 0x87 ; call qword ptr [rsi]
0x00000000001ade82 : add byte ptr [rax], al ; mov word ptr [rbx], fs ; add dword ptr [rax], eax ; call 0x221ad330
0x00000000001b0c82 : add byte ptr [rax], al ; mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001aef82 : add byte ptr [rax], al ; mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000168c6e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168c5e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000001b2a82 : add byte ptr [rax], al ; mov word ptr [rdi + 1], gs ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000a6d0e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009ea5e : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9ce : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003b2dd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b324 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000034e5e : add byte ptr [rax], al ; movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x00000000000e0cde : add byte ptr [rax], al ; movdqa xmm0, xmm2 ; jmp 0xe0cc8
0x00000000000a6dde : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a6dee : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001b099a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001ade9a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], al ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ab79a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x0000000000197266 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x00000000001aab9a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; lock add byte ptr [rax], al ; nop ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000001aa99a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; and byte ptr [rdx], cl ; call rsi
0x00000000001b119a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x000000000006c94a : add byte ptr [rax], al ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x0000000000047c8f : add byte ptr [rax], al ; movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000007a61e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000015b24e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000015b92e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b8be : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001aab9e : add byte ptr [rax], al ; nop ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000001ab42e : add byte ptr [rax], al ; nop ; call rbx
0x00000000001ab79e : add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x000000000011935d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000019d41e : add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a63be : add byte ptr [rax], al ; nop ; out dx, al ; call qword ptr [rax]
0x000000000002058d : add byte ptr [rax], al ; nop ; ret
0x000000000013bd29 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000013372a : add byte ptr [rax], al ; nop dword ptr [rax] ; ret
0x000000000013c2db : add byte ptr [rax], al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001aea02 : add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a4402 : add byte ptr [rax], al ; or al, 0x89 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x00000000001a6402 : add byte ptr [rax], al ; or al, 0xa9 ; add byte ptr [rax], al ; js 0x1a6461 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a8202 : add byte ptr [rax], al ; or al, 0xc7 ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001ab102 : add byte ptr [rax], al ; or al, 0xf6 ; add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001bbf02 : add byte ptr [rax], al ; or al, 4 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001a9926 : add byte ptr [rax], al ; or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x000000000019d3ee : add byte ptr [rax], al ; or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x0000000000035d62 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00000000001ab0d6 : add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000000fc5b8 : add byte ptr [rax], al ; or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x0000000000107514 : add byte ptr [rax], al ; or eax, edi ; ret
0x00000000001bd1c6 : add byte ptr [rax], al ; out 1, eax ; add byte ptr [rax], al ; ret 4
0x0000000000197d66 : add byte ptr [rax], al ; out dx, al ; call rsp
0x0000000000034e6e : add byte ptr [rax], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000001a6ae6 : add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000001a6cc6 : add byte ptr [rax], al ; pop rax ; fucomp st(6) ; jmp qword ptr [rsi]
0x000000000019e3c6 : add byte ptr [rax], al ; pop rax ; jp 0x19e3b9 ; jmp qword ptr [rcx]
0x000000000019cf86 : add byte ptr [rax], al ; pop rax ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000001073d7 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000054ccd : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054d9d : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b70 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000001095ea : add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a163a : add byte ptr [rax], al ; pop rbx ; add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x00000000000aac3a : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x000000000003a89c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000047a0f : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000116d55 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000052c8c : add byte ptr [rax], al ; pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000006fc80 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000cd417 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000029daa : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001fb0e : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000358d7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002a6d6 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000000943e4 : add byte ptr [rax], al ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001942ee : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001a3c52 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rax], 0xed46e800 ; jmp qword ptr [rsi]
0x00000000001b9552 : add byte ptr [rax], al ; pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001a0b52 : add byte ptr [rax], al ; pop rsp ; push rax ; add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b64
0x00000000001b1152 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001a8652 : add byte ptr [rax], al ; pop rsp ; retf ; add byte ptr [rax], al ; call 0x131a76ba
0x000000000019d552 : add byte ptr [rax], al ; pop rsp ; sbb al, byte ptr [rax] ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019e552 : add byte ptr [rax], al ; pop rsp ; sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54d ; jmp rsp
0x00000000001aef52 : add byte ptr [rax], al ; pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000194674 : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001a94be : add byte ptr [rax], al ; push rax ; xor cl, dh ; jmp qword ptr [rcx]
0x000000000011598e : add byte ptr [rax], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001b0c3a : add byte ptr [rax], al ; push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x000000000019716e : add byte ptr [rax], al ; push rsp ; adc al, 0xeb ; call rsp
0x00000000001b074a : add byte ptr [rax], al ; push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001af40f : add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001bb8af : add byte ptr [rax], al ; push rsp ; clc ; call qword ptr [rax]
0x00000000001bb54a : add byte ptr [rax], al ; push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a244a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xecf56000 ; call qword ptr [rsi]
0x00000000001a2c4a : add byte ptr [rax], al ; push rsp ; jno 0x1a2c58 ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x00000000001a754a : add byte ptr [rax], al ; push rsp ; mov edx, 0x73600000 ; out dx, eax ; call rax
0x00000000001b294a : add byte ptr [rax], al ; push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b0b4a : add byte ptr [rax], al ; push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b51 ; jmp qword ptr [rcx]
0x0000000000197626 : add byte ptr [rax], al ; push rsp ; pushfq ; in eax, dx ; call rsp
0x00000000001a8c4a : add byte ptr [rax], al ; push rsp ; rol dword ptr [rax], 1 ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001acd92 : add byte ptr [rax], al ; pushfq ; adc al, byte ptr [rcx] ; add al, bh ; fpatan ; jmp qword ptr [rcx]
0x00000000001abf92 : add byte ptr [rax], al ; pushfq ; add al, 1 ; add byte ptr [rax], cl ; call rcx
0x00000000001b3b92 : add byte ptr [rax], al ; pushfq ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001af992 : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b9592 : add byte ptr [rax], al ; pushfq ; fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001b5f92 : add byte ptr [rax], al ; pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001a7e92 : add byte ptr [rax], al ; pushfq ; ret
0x00000000001a0a1e : add byte ptr [rax], al ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001aac2e : add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x00000000001765a6 : add byte ptr [rax], al ; ret 0
0x000000000017d51e : add byte ptr [rax], al ; ret 0x10
0x000000000000e45e : add byte ptr [rax], al ; ret 0x16
0x000000000001e716 : add byte ptr [rax], al ; ret 0x18c7
0x00000000000189b6 : add byte ptr [rax], al ; ret 0x18c9
0x000000000001926e : add byte ptr [rax], al ; ret 0x18ca
0x000000000001a366 : add byte ptr [rax], al ; ret 0x18d2
0x000000000017f1ee : add byte ptr [rax], al ; ret 0x1d4
0x000000000017f986 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000003fee : add byte ptr [rax], al ; ret 0x23
0x000000000017e1f6 : add byte ptr [rax], al ; ret 0x24
0x0000000000005ec6 : add byte ptr [rax], al ; ret 0x26
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000010e8e : add byte ptr [rax], al ; ret 0x30
0x000000000000d7b6 : add byte ptr [rax], al ; ret 0x31
0x000000000017e6e6 : add byte ptr [rax], al ; ret 0x33
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x000000000000b326 : add byte ptr [rax], al ; ret 0x4f
0x0000000000008656 : add byte ptr [rax], al ; ret 0x53
0x000000000000b536 : add byte ptr [rax], al ; ret 0x56
0x000000000017cd1e : add byte ptr [rax], al ; ret 0xa
0x000000000000bbcf : add byte ptr [rax], al ; ret 0xc
0x000000000017d11e : add byte ptr [rax], al ; ret 0xd
0x000000000001f6ba : add byte ptr [rax], al ; ret 1
0x00000000001807c2 : add byte ptr [rax], al ; ret 2
0x00000000000011c6 : add byte ptr [rax], al ; ret 3
0x0000000000007606 : add byte ptr [rax], al ; ret 4
0x000000000000156e : add byte ptr [rax], al ; ret 5
0x000000000000dd9e : add byte ptr [rax], al ; ret 6
0x00000000001811c2 : add byte ptr [rax], al ; ret 7
0x0000000000001a8a : add byte ptr [rax], al ; ret 8
0x00000000001815c2 : add byte ptr [rax], al ; ret 9
0x000000000019f13e : add byte ptr [rax], al ; rol al, 0xe9 ; call qword ptr [rsi]
0x000000000000138e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret
0x0000000000180bbe : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001a738e : add byte ptr [rax], al ; rol byte ptr [rcx], 1 ; out dx, eax ; jmp rsi
0x000000000018803e : add byte ptr [rax], al ; rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x000000000019f1fe : add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000001a7c3a : add byte ptr [rax], al ; rol dword ptr [rax], 0 ; shl bl, 0xef ; call rsp
0x000000000017cfc6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x000000000019d4ae : add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x000000000019d50e : add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x00000000001a381e : add byte ptr [rax], al ; sar byte ptr [rdi], 1 ; in eax, dx ; jmp qword ptr [rax]
0x00000000001b0a12 : add byte ptr [rax], al ; sbb al, 0x4f ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0d12 : add byte ptr [rax], al ; sbb al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1e12 : add byte ptr [rax], al ; sbb al, 0x63 ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b2b12 : add byte ptr [rax], al ; sbb al, 0x70 ; add dword ptr [rax], eax ; call 0x271b243e
0x00000000001b6612 : add byte ptr [rax], al ; sbb al, 0xab ; add dword ptr [rax], eax ; call 0xffffffffd21b5d55
0x00000000001a7d12 : add byte ptr [rax], al ; sbb al, 0xc2 ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000001ab312 : add byte ptr [rax], al ; sbb al, 0xf8 ; add byte ptr [rax], al ; call 0x111aa55b
0x00000000001aa2b6 : add byte ptr [rax], al ; sbb bh, ch ; int1 ; jmp rcx
0x00000000001a4406 : add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x000000000019d53a : add byte ptr [rax], al ; sbb r8b, byte ptr [rax] ; add al, dl ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001a7c3e : add byte ptr [rax], al ; shl bl, 0xef ; call rsp
0x00000000000f5dc6 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000194dd0 : add byte ptr [rax], al ; sti ; call rax
0x000000000019d122 : add byte ptr [rax], al ; sub al, 0x16 ; add byte ptr [rax], al ; call 0x1819ba3e
0x000000000019e522 : add byte ptr [rax], al ; sub al, 0x2a ; add byte ptr [rax], al ; cwde ; jl 0x19e51d ; jmp qword ptr [rsi]
0x00000000001b0922 : add byte ptr [rax], al ; sub al, 0x4e ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b1122 : add byte ptr [rax], al ; sub al, 0x56 ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a22 : add byte ptr [rax], al ; sub al, 0x6f ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a7c22 : add byte ptr [rax], al ; sub al, 0xc1 ; add byte ptr [rax], al ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a8622 : add byte ptr [rax], al ; sub al, 0xcb ; add byte ptr [rax], al ; call 0x131a768a
0x00000000001a9922 : add byte ptr [rax], al ; sub al, 0xde ; add byte ptr [rax], al ; or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x000000000019bc22 : add byte ptr [rax], al ; sub al, 1 ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001bc022 : add byte ptr [rax], al ; sub al, 5 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x00000000001aa1ee : add byte ptr [rax], al ; sub bl, 0xf1 ; call rdi
0x000000000019bc26 : add byte ptr [rax], al ; sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001a8206 : add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001ab1c6 : add byte ptr [rax], al ; sub byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x000000000019d946 : add byte ptr [rax], al ; sub byte ptr [rsi - 0x17], al ; call qword ptr [rdx]
0x000000000016f15c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000000fccf0 : add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000034efd : add byte ptr [rax], al ; sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x000000000007c016 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000008b341 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000fdae5 : add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x00000000000f68db : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000115085 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000bc373 : add byte ptr [rax], al ; syscall ; ret
0x00000000001a91b6 : add byte ptr [rax], al ; test al, 0x1f ; int1 ; call qword ptr [rsi]
0x00000000001a3db6 : add byte ptr [rax], al ; test al, 0x4d ; in eax, dx ; call qword ptr [rax]
0x00000000001a4566 : add byte ptr [rax], al ; test al, 0x71 ; in eax, dx ; call qword ptr [rsi]
0x00000000001a9a86 : add byte ptr [rax], al ; test al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000001a7c26 : add byte ptr [rax], al ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a4c6e : add byte ptr [rax], al ; test bpl, bpl ; call qword ptr [rdx]
0x00000000001af37a : add byte ptr [rax], al ; test byte ptr [rax], bh ; add dword ptr [rax], eax ; loopne 0x1af388 ; hlt ; jmp qword ptr [rcx]
0x00000000001a587a : add byte ptr [rax], al ; test byte ptr [rbp + 0x1800000], bl ; out dx, al ; call qword ptr [rsi]
0x0000000000197476 : add byte ptr [rax], al ; test byte ptr [rbp - 0x13], cl ; jmp rsp
0x0000000000197f6e : add byte ptr [rax], al ; test byte ptr [rdi], bl ; out dx, eax ; jmp rsp
0x00000000001b057a : add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001abd7a : add byte ptr [rax], al ; test byte ptr [rdx], al ; add dword ptr [rax], eax ; xor ch, ah ; call qword ptr [rsi]
0x00000000001acd7a : add byte ptr [rax], al ; test byte ptr [rdx], dl ; add dword ptr [rax], eax ; loopne 0x1acd64 ; jmp qword ptr [rcx]
0x0000000000197cae : add byte ptr [rax], al ; test byte ptr [rsi - 0x12], bl ; jmp rsp
0x00000000001af97a : add byte ptr [rax], al ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a643a : add byte ptr [rax], al ; test eax, 0x4f100000 ; out dx, al ; call qword ptr [rdx]
0x000000000012d7ef : add byte ptr [rax], al ; test eax, eax ; je 0x12d808 ; xor eax, eax ; ret
0x00000000000aebd3 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xaebf1
0x00000000000b14f4 : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb1511
0x00000000000b3cab : add byte ptr [rax], al ; test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3cd1
0x000000000006b456 : add byte ptr [rax], al ; test ecx, ecx ; je 0x6b467 ; ret
0x00000000001ab242 : add byte ptr [rax], al ; test qword ptr [rax], -0xdd3c800 ; jmp rcx
0x000000000011582d : add byte ptr [rax], al ; test rax, rax ; je 0x115867 ; call rax
0x0000000000138ee2 : add byte ptr [rax], al ; test rax, rax ; jne 0x138ed8 ; pop rbx ; ret
0x00000000001ade9f : add byte ptr [rax], al ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001bb13f : add byte ptr [rax], al ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001a4d3a : add byte ptr [rax], al ; xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000019cc8a : add byte ptr [rax], al ; xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19cc99 ; jmp qword ptr [rdi]
0x00000000001b0a8a : add byte ptr [rax], al ; xchg eax, esp ; add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000019680e : add byte ptr [rax], al ; xchg eax, esp ; and ecx, ebp ; call rsp
0x0000000000196b56 : add byte ptr [rax], al ; xchg eax, esp ; loope 0x196b49 ; call rsp
0x00000000001a738a : add byte ptr [rax], al ; xchg eax, esp ; mov eax, 0x1d00000 ; out dx, eax ; jmp rsi
0x00000000001b0d8a : add byte ptr [rax], al ; xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e0e ; cmc ; jmp qword ptr [rcx]
0x00000000001a7d8a : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x000000000019df2a : add byte ptr [rax], al ; xor al, 0x24 ; add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x000000000019f22a : add byte ptr [rax], al ; xor al, 0x37 ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000001a90a2 : add byte ptr [rax], al ; xor al, 0x80 ; add byte ptr [rax], al ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000001b712a : add byte ptr [rax], al ; xor al, 0xb6 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001a832a : add byte ptr [rax], al ; xor al, 0xc8 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x00000000001a942a : add byte ptr [rax], al ; xor al, 0xd9 ; add byte ptr [rax], al ; adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x00000000001aac2a : add byte ptr [rax], al ; xor al, 0xf1 ; add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x00000000001ab42a : add byte ptr [rax], al ; xor al, 0xf9 ; add byte ptr [rax], al ; nop ; call rbx
0x00000000001a521e : add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a386e : add byte ptr [rax], al ; xor byte ptr [rax - 0x13], al ; jmp rsi
0x000000000019bbde : add byte ptr [rax], al ; xor byte ptr [rbp - 0x18], cl ; call qword ptr [rsi]
0x00000000000fc38a : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000001a832e : add byte ptr [rax], al ; xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x00000000000a9bae : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000011eaa6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000143dc6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000000000bb80c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012e0fe : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e0b6 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000003a26b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c80c5 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000039ee3 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000039f06 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000007a38e : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x7a3a9 ; ret
0x000000000003afbc : add byte ptr [rax], al ; xor eax, ecx ; ret
0x000000000008d7b1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000004d39b : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000001035c6 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000001035eb : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x000000000010360f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000010362f : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000019800e : add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x00000000001aee42 : add byte ptr [rax], al ; xor r8, qword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000029a70 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000008eadd : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001ab107 : add byte ptr [rax], bh ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001a8c37 : add byte ptr [rax], bh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001a9a07 : add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x000000000019e557 : add byte ptr [rax], bh ; jge 0x19e548 ; jmp rsp
0x00000000001b0bc7 : add byte ptr [rax], bh ; jno 0x1b0bc4 ; jmp qword ptr [rcx]
0x00000000001b11b7 : add byte ptr [rax], bh ; jnp 0x1b11b4 ; jmp qword ptr [rcx]
0x00000000001aebc7 : add byte ptr [rax], bh ; jrcxz 0x1aebc3 ; jmp qword ptr [rcx]
0x00000000001ae107 : add byte ptr [rax], bh ; movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x00000000001bb8e7 : add byte ptr [rax], bh ; push rsp ; clc ; jmp qword ptr [rcx]
0x00000000001af827 : add byte ptr [rax], bh ; sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001ab247 : add byte ptr [rax], bh ; sub al, 0xf2 ; jmp rcx
0x00000000001a4c37 : add byte ptr [rax], bh ; test ch, ch ; call qword ptr [rdx]
0x00000000001b2c07 : add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b0d17 : add byte ptr [rax], bl ; jae 0x1b0d14 ; call qword ptr [rsi]
0x00000000001b0ad7 : add byte ptr [rax], bl ; jo 0x1b0ad4 ; jmp qword ptr [rcx]
0x00000000001a7b67 : add byte ptr [rax], bl ; mov ch, 0xfb ; call qword ptr [rax]
0x00000000001aa2b7 : add byte ptr [rax], bl ; out dx, eax ; int1 ; jmp rcx
0x00000000001a4407 : add byte ptr [rax], bl ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rcx]
0x0000000000194e3c : add byte ptr [rax], bl ; sti ; push rax ; sbb bl, bh ; jmp rax
0x00000000001adeb7 : add byte ptr [rax], bl ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001b1407 : add byte ptr [rax], bl ; xchg ebp, esi ; jmp rax
0x00000000001b29f7 : add byte ptr [rax], ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b9557 : add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000001aef57 : add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b07f7 : add byte ptr [rax], ch ; insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001a45d7 : add byte ptr [rax], ch ; je 0x1a45cc ; call qword ptr [rcx]
0x00000000001aeaf7 : add byte ptr [rax], ch ; loop 0x1aeaf3 ; jmp qword ptr [rcx]
0x00000000001aed67 : add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001b08f7 : add byte ptr [rax], ch ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0a17 : add byte ptr [rax], ch ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001ab1c7 : add byte ptr [rax], ch ; sub dh, dl ; jmp qword ptr [rdi]
0x0000000000094424 : add byte ptr [rax], cl ; add byte ptr [rax], al ; je 0x94431 ; ret
0x00000000001af4d7 : add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x00000000001ab0d7 : add byte ptr [rax], cl ; and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001abf97 : add byte ptr [rax], cl ; call rcx
0x00000000001b07c7 : add byte ptr [rax], cl ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001a6a27 : add byte ptr [rax], cl ; mov gs, esi ; call qword ptr [rcx]
0x000000000002dd74 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001a9927 : add byte ptr [rax], cl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x00000000001a6ba7 : add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001b2197 : add byte ptr [rax], cl ; ret 0xfff5
0x00000000001ae1b7 : add byte ptr [rax], cl ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001adaa7 : add byte ptr [rax], cl ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a91e7 : add byte ptr [rax], cl ; xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001b2c1f : add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019f9af : add byte ptr [rax], dh ; cli ; jmp qword ptr [rcx]
0x00000000001ae9ef : add byte ptr [rax], dh ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001a8c4f : add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001abd7f : add byte ptr [rax], dh ; in eax, -0xe ; call qword ptr [rsi]
0x00000000001a386f : add byte ptr [rax], dh ; in eax, dx ; jmp rsi
0x00000000000a9baf : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001b0aef : add byte ptr [rax], dh ; jo 0x1b0aec ; jmp qword ptr [rcx]
0x00000000001aebaf : add byte ptr [rax], dh ; jrcxz 0x1aebab ; call qword ptr [rsi]
0x000000000001bd5f : add byte ptr [rax], dh ; ret
0x000000000000ea7f : add byte ptr [rax], dh ; ret 0xc
0x00000000001a116f : add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x00000000001156f0 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ad25 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006ad33 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001b29df : add byte ptr [rax], dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001ae7cf : add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x00000000001af1ef : add byte ptr [rax], dl ; hlt ; hlt ; jmp qword ptr [rsi]
0x00000000001b06bf : add byte ptr [rax], dl ; insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c3f : add byte ptr [rax], dl ; jb 0x1b0c3c ; jmp qword ptr [rcx]
0x00000000001b0dbf : add byte ptr [rax], dl ; je 0x1b0dbc ; jmp qword ptr [rcx]
0x00000000001a790f : add byte ptr [rax], dl ; jg 0x1a7906 ; call qword ptr [rdi]
0x00000000001a163f : add byte ptr [rax], dl ; leave ; in al, dx ; call rsp
0x000000000002de54 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001a643f : add byte ptr [rax], dl ; out dx, al ; call qword ptr [rdx]
0x00000000001b09ff : add byte ptr [rax], dl ; outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b057f : add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000001824f : add byte ptr [rax], dl ; ret
0x00000000000091b7 : add byte ptr [rax], dl ; ret 0x13
0x00000000001acbe8 : add byte ptr [rax], r8b ; add ah, dh ; adc byte ptr [rcx], al ; add al, dh ; ret
0x00000000001abac8 : add byte ptr [rax], r8b ; add ah, dl ; inc dword ptr [rax] ; add al, dh ; ret
0x0000000000074696 : add byte ptr [rax], r8b ; cmp eax, 0xff ; jne 0x746a9 ; pop rbx ; ret
0x00000000000350d5 : add byte ptr [rax], r8b ; fstp st(1) ; ret
0x00000000000d58dd : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000009e9bd : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000009e9ed : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000008779d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000000886ad : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000cea35 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000138eed : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000007302d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x0000000000070155 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00000000000a5d5d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076530 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d3
0x0000000000094ccd : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000011931d : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000114995 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000106225 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033ead : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000a6fcd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000a5d9d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000012c54d : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000045a35 : add byte ptr [rax], r8b ; ret
0x0000000000143dc5 : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 0x38 ; ret
0x000000000003a7fd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x0000000000039f05 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000abc6d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x0000000000143767 : add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x000000000004a59f : add byte ptr [rbp + 0x29], cl ; ret 0xc149
0x000000000014362c : add byte ptr [rbp + 0x29], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000b9e17 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x0000000000112ced : add byte ptr [rbp + 0x2f], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000053993 : add byte ptr [rbp + 0x310c75c0], al ; div dh ; ret 0x4050
0x0000000000029a71 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000c311d : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000094f33 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000011598f : add byte ptr [rbp + 0x31], dl ; ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000000b9e6b : add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000010263a : add byte ptr [rbp + 0x395374c0], al ; ret
0x000000000008167e : add byte ptr [rbp + 0x39], cl ; ret 0x8948
0x00000000000817f6 : add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000203df : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000054d9e : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000070b71 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000008d82e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000006acbe : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000123da3 : add byte ptr [rbp + 0x49], dh ; mov eax, r8d ; ret
0x000000000011fe2a : add byte ptr [rbp + 0xa], dh ; jmp 0x11fe58
0x0000000000083b62 : add byte ptr [rbp + 0xa], dh ; jmp 0x83b91
0x000000000011ab21 : add byte ptr [rbp + 0xb], dh ; jmp 0x11ab51
0x000000000011cbb9 : add byte ptr [rbp + 0xb], dh ; jmp 0x11cbe9
0x000000000007ef51 : add byte ptr [rbp + 0xb], dh ; jmp 0x7ef81
0x0000000000048aef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000489df : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000003a6ca : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x00000000001436f4 : add byte ptr [rbp + 9], dh ; xor eax, eax ; add rsp, 0x48 ; ret
0x000000000019917f : add byte ptr [rbp + rax - 0xa], ah ; call rsp
0x0000000000198bd7 : add byte ptr [rbp + rbp*2 - 0xd], dl ; call rsp
0x0000000000199447 : add byte ptr [rbp + rbx*2 - 0xa], dh ; call rsp
0x00000000001a587b : add byte ptr [rbp + rbx*4 + 0x1800000], al ; out dx, al ; call qword ptr [rsi]
0x000000000017d117 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x00000000000751a1 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012cb42 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x00000000000750be : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000012cf29 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x30 ; call qword ptr [rax]
0x000000000006d716 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x00000000001a386b : add byte ptr [rbp + rdi*2], dh ; add byte ptr [rax], dh ; in eax, dx ; jmp rsi
0x00000000001bb8ab : add byte ptr [rbp + rdi*8 + 0x54000001], dh ; clc ; call qword ptr [rax]
0x000000000019a28f : add byte ptr [rbp + rdi*8 - 9], al ; jmp rsp
0x0000000000199eef : add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x00000000001ab05b : add byte ptr [rbp + rsi*8], ah ; add al, dh ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001ab043 : add byte ptr [rbp + rsi*8], cl ; add al, bl ; and esi, edx ; jmp qword ptr [rcx]
0x00000000001968d7 : add byte ptr [rbp - 0x17], al ; jmp rsp
0x00000000001742e4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000aebd4 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xaebf0
0x00000000000b14f5 : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb1510
0x00000000000b3cac : add byte ptr [rbp - 0x276b213], al ; setne dl ; jmp 0xb3cd0
0x00000000000cdb9f : add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000cd990 : add byte ptr [rbp - 0x38], dh ; ret
0x000000000017d3c3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000cdb02 : add byte ptr [rbp - 0x46], dh ; mov eax, 0x40 ; ret
0x00000000000aa8e3 : add byte ptr [rbp - 0x6bf0be13], al ; ret 0xfe83
0x000000000006c36f : add byte ptr [rbp - 0x76bb7ffc], cl ; ret 0xf229
0x00000000000e393c : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c4392 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x84 ; ret
0x0000000000039957 : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000024ab0 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x000000000009ee0b : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x000000000005beff : add byte ptr [rbp - 0x7cb776f4], cl ; ret 0x8d01
0x00000000000db205 : add byte ptr [rbp - 0x7cb7fead], cl ; ret
0x00000000000d5cff : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000012294e : add byte ptr [rbp - 0x9f38b2e], al ; ret 0xc602
0x0000000000047057 : add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x0000000000085815 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000035305 : add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000006b457 : add byte ptr [rbp - 0xcfb8b37], al ; ret
0x000000000019ab5f : add byte ptr [rbp - 7], ah ; call rsp
0x000000000019a647 : add byte ptr [rbp - 8], dl ; jmp rsp
0x0000000000146ca9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000130c79 : add byte ptr [rbx + 0x149fce0], al ; ret 0x8b41
0x000000000007742f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000aac3b : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000074698 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000943e5 : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000817e7 : add byte ptr [rbx + 0x34333615], cl ; add dh, dh ; ret 0xf02
0x000000000007cba7 : add byte ptr [rbx + 0x349bb505], al ; add byte ptr [rcx], al ; ret
0x00000000000cd418 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000052c8d : add byte ptr [rbx + 0x44], bl ; mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000a5d6f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000016afef : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000016e39f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000a818f : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x000000000009ee6c : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000006fc81 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000086837 : add byte ptr [rbx + 0x4c], bl ; mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000015b0bf : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000d5bf0 : add byte ptr [rbx + 0x5b010443], al ; pop rbp ; pop r12 ; ret
0x0000000000084ca7 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; jmp rax
0x00000000000202e0 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029dab : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000001fb0f : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000358d8 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000077f0f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00000000000a6459 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001ad80b : add byte ptr [rbx + 0x66a00001], dl ; stc ; call qword ptr [rax]
0x00000000000f5f2f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x00000000000773ff : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000acc18 : add byte ptr [rbx + 0xa777fff], al ; mov eax, edi ; ret
0x00000000001a5e50 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000000e5ccc : add byte ptr [rbx + 0xf4801e1], al ; ret
0x000000000003a9ff : add byte ptr [rbx + 0xf48fffa], al ; ret
0x00000000001bd05b : add byte ptr [rbx + 1], al ; add byte ptr [rax], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000017084a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x000000000019873f : add byte ptr [rbx + rax*2 - 0xe], ah ; call rsp
0x000000000019b61f : add byte ptr [rbx + rax*8], dl ; cli ; jmp rsp
0x000000000019af9f : add byte ptr [rbx + rax], dh ; cli ; call rsp
0x00000000001974df : add byte ptr [rbx + rbp*2 - 0x13], al ; jmp rsp
0x00000000001a661b : add byte ptr [rbx + rbp*4], ah ; add byte ptr [rax], al ; loopne 0x1a6697 ; out dx, al ; jmp rdx
0x00000000001b6613 : add byte ptr [rbx + rbp*4], bl ; add dword ptr [rax], eax ; call 0xffffffffd21b5d54
0x00000000001a163b : add byte ptr [rbx + rbx*2], al ; add byte ptr [rax], dl ; leave ; in al, dx ; call rsp
0x000000000019a8c7 : add byte ptr [rbx + rbx*8], ah ; clc ; call rsp
0x000000000010c95a : add byte ptr [rbx + rcx + 0x5b], dh ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006fdc2 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001ac683 : add byte ptr [rbx + rcx - 0x7857ffff], cl ; call qword ptr [rsi]
0x0000000000114a0a : add byte ptr [rbx + rcx - 0xd], dh ; ret
0x00000000001a067b : add byte ptr [rbx + rcx*2 + 0x26800000], al ; jmp 0x1a068b
0x00000000001b06a3 : add byte ptr [rbx + rcx*2 + 0x6bf80001], ch ; cmc ; jmp qword ptr [rcx]
0x000000000004a007 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000048427 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001a8623 : add byte ptr [rbx + rcx*8], ch ; add byte ptr [rax], al ; call 0x131a7689
0x00000000001b360b : add byte ptr [rbx + rdi*2], dl ; add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x000000000019af87 : add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000198287 : add byte ptr [rbx + rdi*8], ah ; out dx, eax ; call rsp
0x0000000000194de4 : add byte ptr [rbx + rdi*8], al ; call rax
0x00000000001ace83 : add byte ptr [rbx + rdx - 0x2507ffff], cl ; call qword ptr [rdi]
0x000000000019b29f : add byte ptr [rbx + rdx*2], dh ; cli ; call rsp
0x00000000001ace0b : add byte ptr [rbx + rdx], dl ; add dword ptr [rax], eax ; jo 0x1acdf4 ; jmp qword ptr [rcx]
0x00000000001aee43 : add byte ptr [rbx + rsi + 1], cl ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aee8b : add byte ptr [rbx + rsi - 0x170fffff], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019b887 : add byte ptr [rbx + rsi*2], ah ; sti ; call rsp
0x00000000001bae73 : add byte ptr [rbx + rsi*8 + 1], bh ; add byte ptr [rax + 0x16], cl ; clc ; jmp qword ptr [rcx]
0x000000000005a37e : add byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x00000000000cd1f7 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xcd211 ; ret
0x000000000007462f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000aacbf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000aacb8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000aacb1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000aacaa : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000aaca3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000aac9c : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000105f8b : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000128736 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x128748 ; ret
0x000000000011514f : add byte ptr [rbx - 0x3f7aefb9], cl ; jne 0x115169 ; ret
0x000000000005721e : add byte ptr [rbx - 0x4e343], al ; call qword ptr [rax]
0x00000000000aa9f9 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x00000000000aa9e4 : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xaf0f
0x0000000000196130 : add byte ptr [rbx - 0x556f0004], ch ; cld ; jmp qword ptr [rax]
0x00000000001adeb3 : add byte ptr [rbx - 0x64e7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ade9b : add byte ptr [rbx - 0x64ffffff], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001ade83 : add byte ptr [rbx - 0x6517ffff], cl ; hlt ; jmp qword ptr [rcx]
0x000000000003a724 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000010f66d : add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000000b9a9b : add byte ptr [rbx - 0x76b6f020], al ; ret
0x00000000000b9671 : add byte ptr [rbx - 0x76b6f020], al ; ret 0xc149
0x000000000002b769 : add byte ptr [rbx - 0x76be0008], al ; ret
0x00000000000e75d5 : add byte ptr [rbx - 0x76f72cac], cl ; push rsp ; ret
0x0000000000047a10 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000002076f : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000057d38 : add byte ptr [rbx - 0x7af00008], al ; ret
0x00000000000e13cf : add byte ptr [rbx - 0x7af0f71a], al ; ret
0x0000000000073e94 : add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x0000000000171f06 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000006ce34 : add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x000000000013c5cf : add byte ptr [rbx - 0x7cb703b6], cl ; ret 0x4808
0x00000000000d17e7 : add byte ptr [rbx - 0x7cb7f3b5], cl ; ret
0x00000000000d6d37 : add byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x00000000000e17bf : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0x4404
0x00000000000d8210 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x00000000000e978f : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x4108
0x00000000001019ff : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000115b2f : add byte ptr [rbx - 0xd8a0008], al ; xor eax, eax ; leave ; ret
0x0000000000072fd6 : add byte ptr [rbx - 0xd], bl ; ret
0x0000000000195b80 : add byte ptr [rbx - 4], dl ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000194eb4 : add byte ptr [rbx - 5], cl ; jmp rax
0x0000000000199f27 : add byte ptr [rbx - 9], dh ; jmp rsp
0x0000000000125584 : add byte ptr [rbx], 0 ; add byte ptr [rcx], bh ; ret
0x000000000019a097 : add byte ptr [rbx], ah ; idiv edi ; ret 1
0x0000000000187fec : add byte ptr [rbx], al ; jmp qword ptr [rax]
0x00000000001bd1c3 : add byte ptr [rbx], bh ; add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001b1e13 : add byte ptr [rbx], bl ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x0000000000055766 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000b5778 : add byte ptr [rcx + 0x29], al ; ret 0x8341
0x000000000002c2bf : add byte ptr [rcx + 0x29], cl ; ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x00000000000bd758 : add byte ptr [rcx + 0x3093590d], cl ; add byte ptr [rcx + 1], cl ; ret
0x0000000000168caf : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000008ba2f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000012fb0b : add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000003ce6a : add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046078 : add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000008f526 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000005b773 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f746e : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000006f7d9 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x00000000000701e2 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000001169d0 : add byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; ret
0x0000000000168c8f : add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000a6d3f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007ba06 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x00000000000ea666 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x0000000000101efa : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x0000000000075512 : add byte ptr [rcx + 0x5bd089c2], cl ; ret
0x0000000000072b7c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000001510ae : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000009e8c6 : add byte ptr [rcx + 0x63], cl ; add al, 0x82 ; add r10, rax ; jmp r10
0x0000000000047c90 : add byte ptr [rcx + 0x63], cl ; or al, 0x8b ; add rcx, r11 ; jmp rcx
0x000000000016e40c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a5be8 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002df1f : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x0000000000034c57 : add byte ptr [rcx + 0x7fffff], ch ; je 0x34c52 ; ret
0x00000000000ffaef : add byte ptr [rcx + 0x800008], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c4992 : add byte ptr [rcx + 0xf], al ; fiadd word ptr [r9] ; ret
0x0000000000102e65 : add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000e3a67 : add byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x00000000000d45c8 : add byte ptr [rcx + 0xf], al ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000056804 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0x83 ; ret
0x0000000000056787 : add byte ptr [rcx + 0xf], al ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x000000000005e59b : add byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000812c4 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000362c9 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000aa902 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000004dc20 : add byte ptr [rcx + 0xf], cl ; ret
0x00000000000e4bd7 : add byte ptr [rcx + 1], al ; ret
0x00000000000aa38f : add byte ptr [rcx + 1], cl ; ret
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000001bccf3 : add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000085548 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000019811f : add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x00000000001a3c53 : add byte ptr [rcx + rax*4], bl ; add al, ch ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001a7c3b : add byte ptr [rcx + rax*8], al ; add al, al ; jrcxz 0x1a7c3a ; call rsp
0x00000000001a7c23 : add byte ptr [rcx + rax*8], ch ; add byte ptr [rax], al ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x000000000019bc23 : add byte ptr [rcx + rax], ch ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x000000000019a66f : add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x00000000001a244b : add byte ptr [rcx + rbp*2], dl ; add byte ptr [rax - 0xb], ah ; in al, dx ; call qword ptr [rsi]
0x00000000001b6463 : add byte ptr [rcx + rbp*4 + 1], ch ; add al, bh ; loope 0x1b646e ; call rsi
0x00000000001a643b : add byte ptr [rcx + rbp*4], al ; add byte ptr [rax], dl ; out dx, al ; call qword ptr [rdx]
0x00000000001a6403 : add byte ptr [rcx + rbp*4], cl ; add byte ptr [rax], al ; js 0x1a6460 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019b117 : add byte ptr [rcx + rbp], al ; cli ; jmp rsp
0x000000000019b037 : add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000197c87 : add byte ptr [rcx + rbx*2], dl ; out dx, al ; call rsp
0x00000000001b5433 : add byte ptr [rcx + rbx*4], bh ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001a942b : add byte ptr [rcx + rbx*8], dh ; add byte ptr [rax], al ; adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x000000000019a88f : add byte ptr [rcx + rbx*8], dh ; clc ; call rsp
0x000000000019d41b : add byte ptr [rcx + rbx], ah ; add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d433 : add byte ptr [rcx + rbx], bh ; add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000070fec : add byte ptr [rcx + rcx + 0x44], dh ; mov eax, eax ; pop rbx ; ret
0x000000000019a5a7 : add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x0000000000138391 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x00000000000c9dd1 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000c9e9b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x00000000000e4753 : add byte ptr [rcx + rcx*4 + 0x34], cl ; ret 0x3944
0x000000000008194f : add byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000094ccf : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000002f6d7 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000103713 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000005ae24 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call 0x117126
0x0000000000103847 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000088cff : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call rax
0x0000000000087e61 : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087bf1 : add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000d97da : add byte ptr [rcx + rcx*4 - 0x3e], cl ; jmp 0xd97ed
0x000000000009ed32 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x0000000000071036 : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000007df35 : add byte ptr [rcx + rcx*4 - 0x40], cl ; ret
0x00000000000879d3 : add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x000000000010367c : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x000000000013805d : add byte ptr [rcx + rcx*4 - 1], cl ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x0000000000081865 : add byte ptr [rcx + rcx*4 - 9], cl ; call qword ptr [rax]
0x000000000010368b : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000012c991 : add byte ptr [rcx + rcx*4 - 9], cl ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x000000000012d4d8 : add byte ptr [rcx + rcx*4 - 9], cl ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000001a4403 : add byte ptr [rcx + rcx*4], cl ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x000000000019b69f : add byte ptr [rcx + rcx*8 - 6], dh ; jmp rsp
0x0000000000083f88 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x83f57 ; ret
0x00000000001ab42b : add byte ptr [rcx + rdi*8], dh ; add byte ptr [rax], al ; nop ; call rbx
0x00000000001af40b : add byte ptr [rcx + rdi], dl ; add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x000000000019cc8b : add byte ptr [rcx + rdx + 0x71000000], dl ; std ; jmp qword ptr [rdi]
0x0000000000199ab7 : add byte ptr [rcx + rdx - 9], al ; jmp rsp
0x00000000001b0c83 : add byte ptr [rcx + rdx*2 + 0x72580001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c3b : add byte ptr [rcx + rdx*2 + 1], al ; add byte ptr [rax], dl ; jb 0x1b0c40 ; jmp qword ptr [rcx]
0x00000000001b0c6b : add byte ptr [rcx + rdx*2 + 1], dh ; add byte ptr [rax + 0x72], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c0b : add byte ptr [rcx + rdx*2], dl ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x0000000000198e3f : add byte ptr [rcx + rdx*4], ah ; hlt ; jmp rsp
0x00000000001a4c6b : add byte ptr [rcx + rdx*4], dh ; add byte ptr [rax - 0x7c], al ; in eax, dx ; call qword ptr [rdx]
0x00000000001a8c4b : add byte ptr [rcx + rdx*8], dl ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001b2c33 : add byte ptr [rcx + rsi*2], bh ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001a2c4b : add byte ptr [rcx + rsi*2], dl ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x0000000000197dd7 : add byte ptr [rcx + rsi*2], dl ; out dx, al ; jmp rsp
0x00000000001aac9b : add byte ptr [rcx + rsi*8 + 0x15600000], ah ; jmp qword ptr [rcx]
0x00000000001aac2b : add byte ptr [rcx + rsi*8], dh ; add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x000000000000247b : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x000000000004242b : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000003f4d3 : add byte ptr [rcx - 0x39], cl ; ret 0xfc01
0x000000000003c213 : add byte ptr [rcx - 0x39], cl ; ret 0xff81
0x00000000000ad5c9 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000ff2f8 : add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x00000000000f5f3f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x0000000000040f7f : add byte ptr [rcx - 0x43], al ; add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b2c4a : add byte ptr [rcx - 0x44], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000032964 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000026e53 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x0000000000026e70 : add byte ptr [rcx - 0x73], cl ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8d : add byte ptr [rcx - 0x73], cl ; add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000005e790 : add byte ptr [rcx - 0x73], cl ; dec dword ptr [r8 + 0x39] ; ret
0x000000000010317f : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000f244a : add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000045f94 : add byte ptr [rcx - 0x75], cl ; ret
0x0000000000118ca7 : add byte ptr [rcx - 0x76f3dba4], cl ; ret 0x6ae9
0x000000000009e9ef : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000d21d3 : add byte ptr [rcx - 0x77], al ; ret
0x00000000000dddc4 : add byte ptr [rcx - 0x77], al ; ret 0x3945
0x0000000000047d69 : add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000ddd79 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000cf508 : add byte ptr [rcx - 0x77], cl ; cld ; je 0xcf52b ; call 0x8b728
0x0000000000059781 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000000662b7 : add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x000000000005aef6 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000011985b : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000006f777 : add byte ptr [rcx - 0x77], dh ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000074f13 : add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000000e32b6 : add byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x0000000000064326 : add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000b5c16 : add byte ptr [rcx - 0x7d], al ; ret
0x00000000000d1ac7 : add byte ptr [rcx - 0x7d], al ; ret 0x4901
0x000000000005133e : add byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000022d7e : add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000094fa1 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000ee1a5 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x000000000006657b : add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x00000000000e1a56 : add byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x0000000000022cf7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x00000000000d5352 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000001100ef : add byte ptr [rcx - 0x7d], cl ; ret 0x4d30
0x0000000000144e1f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000086390 : add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x0000000000089e9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000000822ce : add byte ptr [rcx - 0x7d], cl ; sub rax, 0x39480108 ; ret
0x000000000003af9c : add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x00000000000bd86f : add byte ptr [rcx - 0x7f], cl ; ret
0x00000000000f4860 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x00000000000f47df : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000012abbf : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026556 : add byte ptr [rcx - 0xa], al ; ret
0x0000000000121687 : add byte ptr [rcx - 0xa], al ; ret 0x7502
0x0000000000080509 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080513 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000110303 : add byte ptr [rcx - 0xa], al ; ret 0xf10
0x00000000000cd1fa : add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000001942ef : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000019cc90 : add byte ptr [rcx - 3], dh ; jmp qword ptr [rdi]
0x000000000008ec12 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000008ec38 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000001b3b95 : add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b3bc5 : add byte ptr [rcx], 0 ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b3bad : add byte ptr [rcx], 0 ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001a5880 : add byte ptr [rcx], 0xee ; call qword ptr [rsi]
0x000000000018ab8b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000bd0a4 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0xf7c6
0x0000000000088483 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000002e0e9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000137631 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e741 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008b33f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000195454 : add byte ptr [rcx], al ; cld ; jmp rax
0x000000000011a390 : add byte ptr [rcx], al ; jmp 0x11a15b
0x000000000011a750 : add byte ptr [rcx], al ; jmp 0x11a52b
0x000000000002de34 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000013c10f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007cbad : add byte ptr [rcx], al ; ret
0x00000000000daa27 : add byte ptr [rcx], al ; ret 0x8b48
0x00000000000dc1ba : add byte ptr [rcx], al ; ret 0xc083
0x00000000000de8be : add byte ptr [rcx], al ; ret 0xda39
0x00000000000d5b67 : add byte ptr [rcx], al ; setg dl ; jmp 0xd5af4
0x00000000000b9df7 : add byte ptr [rcx], bh ; ret
0x00000000000368a0 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000d45cd : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000db214 : add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e0797 : add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000000db0ad : add byte ptr [rcx], bh ; ret 0x947c
0x00000000001bcd2b : add byte ptr [rcx], ch ; add byte ptr [rax], al ; ret
0x0000000000110bc7 : add byte ptr [rcx], ch ; clc ; ret
0x000000000008d9f6 : add byte ptr [rcx], ch ; ret
0x00000000000c2871 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000bd6d6 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000c5fe3 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000c41ff : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000c2834 : add byte ptr [rcx], ch ; ret 0xbe0f
0x000000000014a7ed : add byte ptr [rcx], ch ; ret 0xca39
0x0000000000034efe : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000c672f : add byte ptr [rcx], ch ; ret 0xd129
0x00000000000c2460 : add byte ptr [rcx], ch ; ret 0xd629
0x00000000000c5f53 : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000fccf1 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000001193e1 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x0000000000107515 : add byte ptr [rcx], cl ; clc ; ret
0x0000000000079d2a : add byte ptr [rcx], cl ; ret 0x8948
0x00000000000e06ff : add byte ptr [rcx], cl ; ret 0xb60f
0x000000000019a467 : add byte ptr [rcx], dh ; clc ; jmp rsp
0x0000000000064122 : add byte ptr [rcx], dh ; div dh ; ret
0x0000000000034a6f : add byte ptr [rcx], dh ; leave ; mov dword ptr [rdi], ecx ; ret
0x0000000000137a88 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb567 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000002df2f : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000003bf27 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000007a38f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a8 ; ret
0x000000000003a08b : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000008d7b2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000024c26 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc3 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x000000000002426e : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000fac83 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00000000001af823 : add byte ptr [rdi + 0x1c380001], ch ; cmc ; call qword ptr [rdx]
0x0000000000158f0a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x00000000000abc64 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001728f4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000019ac8f : add byte ptr [rdi + rax*4], dh ; stc ; call rsp
0x00000000001a8203 : add byte ptr [rdi + rax*8], cl ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x00000000001b2ab3 : add byte ptr [rdi + rbp*2 + 0x18e80001], bh ; stc ; jmp qword ptr [rsi]
0x00000000001b2a83 : add byte ptr [rdi + rbp*2 + 0x18e80001], cl ; stc ; jmp qword ptr [rsi]
0x00000000001b2a23 : add byte ptr [rdi + rbp*2], ch ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2a0b : add byte ptr [rdi + rbp*2], dl ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001a6ab3 : add byte ptr [rdi + rbp*4 - 0x880000], bh ; stc ; call qword ptr [rax]
0x00000000001aea33 : add byte ptr [rdi + rbp], bh ; add dword ptr [rax], eax ; js 0x1aea21 ; hlt ; call qword ptr [rbx]
0x00000000001aea03 : add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001adaa3 : add byte ptr [rdi + rbx - 0x6cf7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a9a83 : add byte ptr [rdi + rbx*8 - 0x6a580000], cl ; int1 ; call qword ptr [rax]
0x00000000001a9a9b : add byte ptr [rdi + rbx*8 - 0x6a600000], ah ; int1 ; call qword ptr [rax]
0x000000000019ba6f : add byte ptr [rdi + rbx*8], dh ; std ; call rsp
0x0000000000053f6a : add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x0000000000052ef3 : add byte ptr [rdi + rcx + 0x45], cl ; ret 0xf4c
0x0000000000119557 : add byte ptr [rdi + rcx - 0x42], cl ; ret 0xf643
0x000000000019a33f : add byte ptr [rdi + rcx - 8], ah ; jmp rsp
0x00000000001b0a8b : add byte ptr [rdi + rcx*2 + 0x6fd00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0aa3 : add byte ptr [rdi + rcx*2 + 0x6fe80001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a1b : add byte ptr [rdi + rcx*2], ah ; add byte ptr [rax], al ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001b09fb : add byte ptr [rdi + rcx*2], al ; add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0a13 : add byte ptr [rdi + rcx*2], bl ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x000000000002dd34 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000019b5ff : add byte ptr [rdi + rdi*4 - 6], al ; jmp rsp
0x00000000001afa0b : add byte ptr [rdi + rdi], dl ; add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001a521b : add byte ptr [rdi + rdx*4], ah ; add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x000000000019b967 : add byte ptr [rdi + rsi*2], dh ; std ; call rsp
0x000000000019ad97 : add byte ptr [rdi + rsi*4], dh ; stc ; call rsp
0x000000000019996f : add byte ptr [rdi + rsi*8 - 0xa], al ; call rsp
0x00000000001ab243 : add byte ptr [rdi + rsi*8], cl ; add byte ptr [rax], bh ; sub al, 0xf2 ; jmp rcx
0x000000000019f1fb : add byte ptr [rdi + rsi], al ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x000000000019f22b : add byte ptr [rdi + rsi], dh ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x00000000001aa2b3 : add byte ptr [rdi - 0x10e80000], bh ; int1 ; jmp rcx
0x00000000000cdb78 : add byte ptr [rdi - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000196540 : add byte ptr [rdi - 0x618f0004], bl ; cld ; jmp rax
0x00000000000e81fa : add byte ptr [rdi - 0xa], dh ; ret
0x000000000019865f : add byte ptr [rdi - 0xf], al ; jmp rsp
0x0000000000187bb8 : add byte ptr [rdi - 0xf], ch ; call qword ptr [rax]
0x00000000001a381b : add byte ptr [rdi*2 + 0x3fd00000], ah ; in eax, dx ; jmp qword ptr [rax]
0x00000000001bd5f4 : add byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000001ae1fb : add byte ptr [rdi], al ; add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000034dd0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001af980 : add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000115977 : add byte ptr [rdi], cl ; add eax, 0x89c78944 ; ret
0x000000000015a886 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000aab97 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000015b8bf : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000108a31 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010a584 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x10a515 ; loopne 0x10a595 ; ret
0x000000000002decd : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2de5e ; loopne 0x2dede ; ret
0x000000000015b92f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000ceb87 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x0000000000128dcf : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000025c57 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d18ef : add byte ptr [rdi], cl ; mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006ce27 : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000008b13f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000acb00 : add byte ptr [rdi], cl ; mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000007a61f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000016e41f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecbf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000009f0ef : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f0ff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f0df : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009ec3f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009eaff : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000009670f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008eb4f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb3f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008eb2f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000034bc7 : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000034df6 : add byte ptr [rdi], cl ; push rsp ; ret 0x2e0f
0x00000000000c52e6 : add byte ptr [rdi], cl ; ret
0x00000000000c5600 : add byte ptr [rdi], cl ; ret 0x144
0x000000000013d40d : add byte ptr [rdi], cl ; ret 0x3145
0x00000000000bc6a7 : add byte ptr [rdi], cl ; ret 0x3bba
0x000000000002a850 : add byte ptr [rdi], cl ; ret 0x4389
0x00000000000df12c : add byte ptr [rdi], cl ; ret 0x833b
0x00000000000456ae : add byte ptr [rdi], cl ; ret 0x8539
0x0000000000142b1e : add byte ptr [rdi], cl ; ret 0x8941
0x0000000000133ba1 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000030316 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000fb84a : add byte ptr [rdi], cl ; ret 0x90c3
0x00000000000eaf0a : add byte ptr [rdi], cl ; ret 0xa6e9
0x00000000000b64ee : add byte ptr [rdi], cl ; ret 0xc3f3
0x00000000000d7870 : add byte ptr [rdi], cl ; ret 0xc689
0x00000000000c3551 : add byte ptr [rdi], cl ; ret 0xd801
0x00000000001238cb : add byte ptr [rdi], cl ; ret 0xf3c3
0x0000000000123870 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238ab : add byte ptr [rdi], cl ; ret 0xff83
0x0000000000034e5f : add byte ptr [rdi], cl ; sub cl, al ; add rsp, 0x28 ; ret
0x0000000000026550 : add byte ptr [rdi], cl ; test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4f9 : add byte ptr [rdi], cl ; test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b9c9 : add byte ptr [rdi], cl ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000005744b : add byte ptr [rdi], cl ; xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e06ed : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x00000000000bcea1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000bce0d : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x0000000000136e1b : add byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136e88 ; ret
0x000000000014a737 : add byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf40
0x0000000000061a3f : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000d8e7e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x4422
0x000000000014199c : add byte ptr [rdx + 0x159], bh ; call 0x2dc48
0x000000000012c46b : add byte ptr [rdx + 0x19], ch ; call qword ptr [rax]
0x0000000000080fdb : add byte ptr [rdx + 0x234], bh ; call 0x7d288
0x000000000008105c : add byte ptr [rdx + 0x237], bh ; call 0x7d288
0x000000000008103d : add byte ptr [rdx + 0x23a], bh ; call 0x7d288
0x0000000000021971 : add byte ptr [rdx + 0x2c], bh ; call 0x2dc48
0x00000000000b1944 : add byte ptr [rdx + 0x3e1], bh ; call 0x2dc48
0x000000000016afaf : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x0000000000166c7f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000a814f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x0000000000021952 : add byte ptr [rdx + 0x4a], bh ; call 0x2dc48
0x00000000000d1bad : add byte ptr [rdx + 0x63], cl ; adc al, 0xb0 ; add rax, rdx ; jmp rax
0x00000000001ad00b : add byte ptr [rdx + 0xd400001], dl ; hlt ; jmp rcx
0x0000000000009207 : add byte ptr [rdx + 1], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bd8ef : add byte ptr [rdx + 4], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002189f : add byte ptr [rdx + 8], bh ; mov eax, edx ; ret
0x0000000000109573 : add byte ptr [rdx + rax + 0x5d], dh ; ret
0x00000000001abd7b : add byte ptr [rdx + rax - 0x1acfffff], al ; call qword ptr [rsi]
0x0000000000198f97 : add byte ptr [rdx + rax*2 - 0xb], dh ; jmp rsp
0x00000000001a3db3 : add byte ptr [rdx + rax*4 + 0x4da80000], bh ; in eax, dx ; call qword ptr [rax]
0x00000000001a7d13 : add byte ptr [rdx + rax*8], bl ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x0000000000034c5c : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x00000000001aa543 : add byte ptr [rdx + rbp*8], cl ; add byte ptr [rax - 7], ch ; int1 ; call rsi
0x000000000019e553 : add byte ptr [rdx + rbp], bl ; add byte ptr [rax], bh ; jge 0x19e54c ; jmp rsp
0x000000000019e523 : add byte ptr [rdx + rbp], ch ; add byte ptr [rax], al ; cwde ; jl 0x19e51c ; jmp qword ptr [rsi]
0x00000000001972df : add byte ptr [rdx + rbx*4 - 0x15], al ; jmp rsp
0x00000000001b9553 : add byte ptr [rdx + rbx*8 + 1], bl ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x000000000019d53b : add byte ptr [rdx + rbx], al ; add al, dl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019d553 : add byte ptr [rdx + rbx], bl ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019d50b : add byte ptr [rdx + rbx], dl ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x0000000000116d0b : add byte ptr [rdx + rcx + 0x5b], dh ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000096c73 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000017cd17 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000199217 : add byte ptr [rdx + rcx - 0xa], dl ; jmp rsp
0x00000000001b057b : add byte ptr [rdx + rcx*2 + 0x5b100001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b05ab : add byte ptr [rdx + rcx*2 + 0x5b400001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b051b : add byte ptr [rdx + rcx*2], ah ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a754b : add byte ptr [rdx + rdi*4], dl ; add byte ptr [rax + 0x73], ah ; out dx, eax ; call rax
0x00000000001bb54b : add byte ptr [rdx + rdi*8 + 1], dl ; add byte ptr [rax + 0x47], dl ; clc ; call qword ptr [rbx]
0x00000000001acd63 : add byte ptr [rdx + rdx + 1], ch ; add al, cl ; fpatan ; jmp qword ptr [rcx]
0x00000000001acdab : add byte ptr [rdx + rdx - 0x25efffff], dh ; jmp qword ptr [rcx]
0x00000000001acd93 : add byte ptr [rdx + rdx - 0x2607ffff], bl ; jmp qword ptr [rcx]
0x00000000001acd7b : add byte ptr [rdx + rdx - 0x261fffff], al ; jmp qword ptr [rcx]
0x00000000001b0d8b : add byte ptr [rdx + rdx*2 + 0x73e00001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d73 : add byte ptr [rdx + rdx*2 + 1], bh ; add al, cl ; jae 0x1b0d78 ; jmp qword ptr [rcx]
0x00000000001b0d43 : add byte ptr [rdx + rdx*2 + 1], cl ; add byte ptr [rax + 0x73], ch ; cmc ; jmp qword ptr [rcx]
0x000000000019879f : add byte ptr [rdx + rdx*2], al ; call rsp
0x00000000001b0d13 : add byte ptr [rdx + rdx*2], bl ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x000000000019aacf : add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x00000000001aed63 : add byte ptr [rdx + rsi + 1], ch ; add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x000000000019800f : add byte ptr [rdx + rsi - 0x11], al ; call rsp
0x00000000001aedb3 : add byte ptr [rdx + rsi - 0x1887ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aad83 : add byte ptr [rdx + rsi*8 + 0x19e80000], cl ; jmp qword ptr [rcx]
0x0000000000197cdf : add byte ptr [rdx - 0x12], ah ; call rsp
0x00000000000beb62 : add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbeb77
0x000000000010cf87 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x000000000010cf86 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x000000000003c2c5 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000019a9fd : add byte ptr [rdx], al ; add ah, ah ; cmp edi, ecx ; jmp rsp
0x000000000002de86 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000001adcfb : add byte ptr [rdx], al ; add dword ptr [rax], eax ; loopne 0x1adc9f ; hlt ; jmp qword ptr [rcx]
0x0000000000128316 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000010eea7 : add byte ptr [rdx], al ; call rax
0x00000000001954b8 : add byte ptr [rdx], al ; cld ; jmp rax
0x0000000000187fc8 : add byte ptr [rdx], al ; jmp qword ptr [rax]
0x000000000002dd94 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x00000000001ae748 : add byte ptr [rdx], al ; or dword ptr [rsi], 0x54028310 ; ret
0x00000000000025af : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001bccef : add byte ptr [rdx], bh ; add byte ptr [rax], al ; add byte ptr [rcx + 6], dl ; add byte ptr [rax], al ; ret 2
0x0000000000195554 : add byte ptr [rdx], ch ; cld ; jmp rax
0x0000000000104bef : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019b0b7 : add byte ptr [rdx], dl ; cli ; call rsp
0x0000000000194e4c : add byte ptr [rip + 0x1e70fffb], cl ; sti ; call qword ptr [rax]
0x0000000000194e8c : add byte ptr [rip + 0x3a30fffb], bl ; sti ; call qword ptr [rax]
0x0000000000188050 : add byte ptr [rip + 0x510fff2], al ; jmp qword ptr [rax]
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x000000000012faaa : add byte ptr [rip - 0x76b40000], al ; ret
0x00000000000cc6f1 : add byte ptr [rip - 0xfff], bh ; jae 0xcc702 ; ret
0x0000000000137c87 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014a5f5 : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000016e714 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000e0cdf : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x00000000000e0cc2 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000034ab7 : add byte ptr [rsi + 0xf], ah ; push rsp ; ret 0xf66
0x0000000000034b2f : add byte ptr [rsi + 0xf], ah ; sub cl, al ; add rsp, 0x28 ; ret
0x000000000009effc : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008ea44 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000008fc7 : add byte ptr [rsi + 1], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000103655 : add byte ptr [rsi + 1], bh ; call rbx
0x0000000000103842 : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x000000000010370e : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000103686 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000001ba163 : add byte ptr [rsi + 1], ch ; add al, ch ; push rdi ; call qword ptr [rdx]
0x000000000000699f : add byte ptr [rsi + 1], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001ae16b : add byte ptr [rsi + 1], dh ; add al, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x0000000000103ac0 : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x0000000000103833 : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00000000001036ff : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000103677 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000000f68a7 : add byte ptr [rsi + 6], dh ; ret
0x00000000001024af : add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000001bc173 : add byte ptr [rsi + rax + 2], bh ; add byte ptr [rax - 0x79], bl ; sti ; call rcx
0x00000000000cdabc : add byte ptr [rsi + rax*2 - 0x48], dh ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b291b : add byte ptr [rsi + rbp*2], ah ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001a693b : add byte ptr [rsi + rbp*4], al ; add al, dl ; mov dh, ch ; call qword ptr [rsi]
0x00000000001a696b : add byte ptr [rsi + rbp*4], dh ; add al, dl ; mov dh, ch ; jmp rbx
0x00000000001aa99b : add byte ptr [rsi + rbp*8 + 0xa200000], ah ; call rsi
0x000000000019d993 : add byte ptr [rsi + rbx + 0x4ab80000], bl ; jmp 0x1b9ca7
0x00000000001ad97b : add byte ptr [rsi + rbx - 0x6f2fffff], al ; hlt ; call qword ptr [rcx]
0x00000000001b199b : add byte ptr [rsi + rbx*2 - 0x5fdfffff], ah ; cmc ; call rdi
0x00000000001a9923 : add byte ptr [rsi + rbx*8], ch ; add byte ptr [rax], al ; or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x00000000001bace8 : add byte ptr [rsi + rcx + 0x10], bl ; add dword ptr [rdx], 0x51 ; ret
0x00000000001b0983 : add byte ptr [rsi + rcx*2 + 0x6e980001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b099b : add byte ptr [rsi + rcx*2 + 0x6eb00001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b09b3 : add byte ptr [rsi + rcx*2 + 0x6ec80001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0923 : add byte ptr [rsi + rcx*2], ch ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b090b : add byte ptr [rsi + rcx*2], dl ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001af97b : add byte ptr [rsi + rdi + 0x1f000001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001af993 : add byte ptr [rsi + rdi + 0x1f180001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9ab : add byte ptr [rsi + rdi + 0x1f300001], dh ; cmc ; jmp qword ptr [rcx]
0x000000000019f9ab : add byte ptr [rsi + rdi + 0x44300000], dh ; cli ; jmp qword ptr [rcx]
0x000000000019b1bf : add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x00000000001a790b : add byte ptr [rsi + rdi*4], dl ; add byte ptr [rax], al ; adc byte ptr [rdi - 0x11], bh ; call qword ptr [rdi]
0x000000000019792f : add byte ptr [rsi + rdi*8], dl ; in eax, dx ; call rsp
0x00000000001b119b : add byte ptr [rsi + rdx*2 + 0x7b200001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001b11b3 : add byte ptr [rsi + rdx*2 + 0x7b380001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b113b : add byte ptr [rsi + rdx*2 + 1], al ; add al, al ; jp 0x1b1140 ; jmp qword ptr [rcx]
0x00000000001b1153 : add byte ptr [rsi + rdx*2 + 1], bl ; add al, bl ; jp 0x1b1158 ; jmp qword ptr [rcx]
0x00000000001b1123 : add byte ptr [rsi + rdx*2], ch ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b110b : add byte ptr [rsi + rdx*2], dl ; add dword ptr [rax], eax ; nop ; jp 0x1b1110 ; jmp qword ptr [rcx]
0x000000000019b2cf : add byte ptr [rsi + rdx*2], dl ; cli ; jmp rsp
0x00000000001a91b3 : add byte ptr [rsi + rdx*8 + 0x1fa80000], bh ; int1 ; call qword ptr [rsi]
0x000000000019d123 : add byte ptr [rsi + rdx], ch ; add byte ptr [rax], al ; call 0x1819ba3d
0x0000000000199617 : add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x00000000001b712b : add byte ptr [rsi + rsi*4], dh ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001bb13b : add byte ptr [rsi + rsi*8 + 1], al ; add byte ptr [rax], al ; xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001ab103 : add byte ptr [rsi + rsi*8], cl ; add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x0000000000197d67 : add byte ptr [rsi - 0x12], al ; call rsp
0x00000000001ae1b3 : add byte ptr [rsi - 0x57f7ffff], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae19b : add byte ptr [rsi - 0x580fffff], ah ; hlt ; jmp qword ptr [rcx]
0x0000000000195074 : add byte ptr [rsi - 0x596f0003], ah ; std ; jmp qword ptr [rax]
0x0000000000021a2d : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003686d : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x38d816] ; ret
0x000000000019a117 : add byte ptr [rsi - 9], al ; jmp rsp
0x000000000019b417 : add byte ptr [rsi], ah ; cli ; call rsp
0x000000000001fb0c : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a37b7 : add byte ptr [rsi], cl ; ret 0xffe7
0x00000000000fc9f2 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001b1f5b : add byte ptr [rsp + 1], ah ; add byte ptr [rax - 0x46], al ; cmc ; call rsi
0x00000000000f5f19 : add byte ptr [rsp + rax - 0xd], dh ; ret
0x00000000001abf93 : add byte ptr [rsp + rax - 0xff7ffff], bl ; call rcx
0x00000000001972b7 : add byte ptr [rsp + rax*2 - 0x15], ah ; call rsp
0x00000000001befcf : add byte ptr [rsp + rax], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001bbf33 : add byte ptr [rsp + rax], bh ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001bbf03 : add byte ptr [rsp + rax], cl ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x0000000000197db7 : add byte ptr [rsp + rbp*2 - 0x12], al ; call rsp
0x00000000001970df : add byte ptr [rsp + rbp*8 - 0x16], dh ; jmp rsp
0x00000000001aa773 : add byte ptr [rsp + rbp*8], bh ; add al, bh ; add dh, dl ; call rdi
0x00000000001ad7ab : add byte ptr [rsp + rbx - 0x785fffff], dh ; hlt ; call qword ptr [rax]
0x0000000000197627 : add byte ptr [rsp + rbx*4 - 0x13], dl ; call rsp
0x0000000000101183 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001b077b : add byte ptr [rsp + rcx*2 + 0x6cc00001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001b0793 : add byte ptr [rsp + rcx*2 + 0x6cd80001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b07ab : add byte ptr [rsp + rcx*2 + 0x6cf00001], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0733 : add byte ptr [rsp + rcx*2], bh ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001977ff : add byte ptr [rsp + rcx*8 - 0x13], dl ; jmp rsp
0x00000000001977f7 : add byte ptr [rsp + rcx*8], dl ; in eax, dx ; inc esp ; ret 0
0x00000000001a7743 : add byte ptr [rsp + rdi*4], cl ; add al, bl ; frndint ; call qword ptr [rax]
0x0000000000195c38 : add byte ptr [rsp + rdi*8 - 0x37c6f01], al ; jmp qword ptr [rax]
0x00000000001ab79b : add byte ptr [rsp + rdi*8 - 0x59700000], ah ; call rdi
0x00000000001956cc : add byte ptr [rsp + rdi*8], ah ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019cf83 : add byte ptr [rsp + rdx + 0x6f580000], cl ; std ; call qword ptr [rcx]
0x000000000019716f : add byte ptr [rsp + rdx - 0x15], dl ; call rsp
0x00000000001b0fa3 : add byte ptr [rsp + rdx*2 + 0x78480001], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001981d7 : add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x00000000001aef53 : add byte ptr [rsp + rsi + 1], bl ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001aef6b : add byte ptr [rsp + rsi + 1], dh ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aef83 : add byte ptr [rsp + rsi - 0x13a7ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001baf63 : add byte ptr [rsp + rsi*8 + 1], ch ; add byte ptr [rax - 0x68], bh ; sti ; jmp qword ptr [rdx]
0x000000000019934f : add byte ptr [rsp - 0xa], al ; call rsp
0x00000000001989df : add byte ptr [rsp - 0xd], al ; jmp rsp
0x00000000001b5f93 : add byte ptr [rsp - 0xe67ffff], bl ; sti ; call rcx
0x000000000019a0c7 : add byte ptr [rsp - 9], ah ; push rsp ; ret 1
0x00000000001adefb : add byte ptr [rsp], al ; add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000019df2b : add byte ptr [rsp], dh ; add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x0000000000055ce8 : add byte ptr cs:[rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001024ae : add byte ptr ds:[rsi + rax + 0x5b], dh ; ret
0x000000000003613a : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000007a360 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070983 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000005c4f8 : add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x0000000000137344 : add byte ptr ss:[rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000019f13d : add byte ptr ss:[rax], al ; rol al, 0xe9 ; call qword ptr [rsi]
0x00000000000de2ba : add ch, al ; loopne 0xde2db ; hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x0000000000187f34 : add ch, bh ; int1 ; jmp qword ptr [rax]
0x00000000000350d7 : add ch, bl ; fpatan ; ret
0x0000000000185ddc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000185ddd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000001961dc : add ch, byte ptr [rbp - 0x536d0004] ; cld ; jmp qword ptr [rdx]
0x00000000000bd40c : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000072e8a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000056840 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000187e08 : add ch, ch ; int1 ; call qword ptr [rax]
0x0000000000035f96 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000195314 : add cl, 0xfb ; call rax
0x00000000000e4c67 : add cl, al ; call 0x66d0d57b
0x0000000000052fc1 : add cl, bl ; in eax, -0x21 ; loopne 0x52f56 ; ret 0xe680
0x0000000000054f3a : add cl, bl ; in eax, -0x21 ; loopne 0x54ecf ; ret 0xe680
0x0000000000105de5 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000a2aac : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x000000000005715e : add cl, byte ptr [rax + 0x29] ; ret
0x00000000000ac9c9 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c964 : add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98d : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000026b13 : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000123486 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x0000000000123494 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x0000000000105de6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x0000000000074079 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002a293 : add cl, byte ptr [rax + 1] ; ret 0x394c
0x0000000000105f6b : add cl, byte ptr [rax - 0x39] ; ret 0xffff
0x00000000000c0240 : add cl, byte ptr [rax - 0x46] ; ret
0x00000000000a2aad : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000009e927 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000070caf : add cl, byte ptr [rax - 0x77] ; ret
0x000000000007c842 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000ffa12 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000004945c : add cl, byte ptr [rax - 0x7d] ; ret 0x4101
0x00000000000899f0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000025654 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000cf267 : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x0000000000089a53 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000013be65 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000724b1 : add cl, byte ptr [rax - 9] ; fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x00000000001a4218 : add cl, byte ptr [rbp + 0xa] ; ret
0x00000000001246df : add cl, byte ptr [rbp + 0xf] ; ret
0x000000000003d35d : add cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000e7e1e : add cl, byte ptr [rbp - 0x73] ; std ; add byte ptr [rcx], bh ; ret
0x00000000000894c5 : add cl, byte ptr [rbp - 0x77] ; ret
0x000000000015b702 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000d64b6 : add cl, byte ptr [rcx + 0x39488a0c] ; ret
0x000000000006bcf2 : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x0000000000082498 : add cl, byte ptr [rcx + 0x548d48d0] ; ret
0x000000000012ed37 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00000000000c9f7e : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x00000000000e0cce : add cl, byte ptr [rcx - 0x7d] ; ret 0x4810
0x00000000000b853b : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c01
0x000000000002dd54 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000f76ef : add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f7647 : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000111405 : add cl, byte ptr [rdi] ; test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000065898 : add cl, byte ptr [rdi] ; test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x00000000000817f0 : add cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000006d005 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000014a5fb : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000000aa963 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001b69c0 : add cl, byte ptr [rsi + rcx + 0x28] ; ret
0x0000000000106e01 : add cl, ch ; int 0xf4
0x0000000000187d6c : add cl, ch ; int1 ; jmp qword ptr [rax]
0x0000000000067497 : add cl, ch ; pop rdi ; ret 0xffff
0x00000000000ef6d0 : add cl, ch ; push rdx ; idiv edi ; dec dword ptr [rbp + rcx*4 + 0x25] ; ret
0x000000000002d2c7 : add cl, ch ; ret
0x0000000000060228 : add cl, ch ; ret 0xffb8
0x0000000000067734 : add cl, ch ; ret 0xffbf
0x000000000009e7e7 : add cl, ch ; ret 0xffd3
0x0000000000040f85 : add cl, ch ; ret 0xffec
0x0000000000031d06 : add cl, ch ; ret 0xfff1
0x000000000009e6b3 : add cl, ch ; ret 0xfff5
0x000000000002b0b1 : add cl, ch ; ret 0xfffb
0x00000000000f0c03 : add cl, ch ; ret 0xfffd
0x000000000011577f : add cl, ch ; ret 0xfffe
0x0000000000060851 : add cl, ch ; ret 0xffff
0x0000000000115b26 : add cl, cl ; ret
0x00000000001bc53f : add cl, dh ; or byte ptr [rbx], al ; ret
0x00000000001a4010 : add dh, ah ; ret
0x0000000000045af8 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000d58df : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000018a4bb : add dh, bh ; jmp rdi
0x0000000000180217 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000015b8b3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fbaed : add dh, bl ; ret
0x00000000000a9beb : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001a3fb6 : add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x0000000000099b7d : add dh, byte ptr [rbp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00000000000d7c78 : add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7c44
0x00000000001341d2 : add dh, byte ptr [rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a0ea5 : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000001b6985 : add dh, byte ptr [rdx + 0xa] ; ret
0x0000000000099563 : add dh, byte ptr [rdx + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009dac4 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x000000000009bb80 : add dh, byte ptr [rsp + rbp + 0xf] ; mov dh, 0x55 ; ret
0x000000000009dac3 : add dh, byte ptr cs:[rsp + rbp + 0xf] ; mov dh, 0x45 ; ret
0x00000000001341d1 : add dh, byte ptr ds:[rbx + rcx - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000187e34 : add dh, ch ; int1 ; jmp qword ptr [rax]
0x0000000000064136 : add dh, dh ; ret
0x00000000000ec0e3 : add dh, dh ; ret 0x4002
0x0000000000023ff6 : add dh, dh ; ret 0x4801
0x000000000008f3d8 : add dh, dh ; ret 0x7404
0x00000000000e45b9 : add dh, dh ; ret 0x7408
0x000000000006db9f : add dh, dh ; ret 0x7420
0x0000000000170937 : add dh, dh ; ret 0x7501
0x0000000000170944 : add dh, dh ; ret 0x7502
0x0000000000061ba4 : add dh, dh ; ret 0x7504
0x0000000000170909 : add dh, dh ; ret 0x7510
0x0000000000170916 : add dh, dh ; ret 0x7520
0x0000000000170923 : add dh, dh ; ret 0x7540
0x00000000000f8cd7 : add dh, dh ; ret 0xf01
0x00000000000817ed : add dh, dh ; ret 0xf02
0x0000000000122945 : add dh, dh ; ret 0xf04
0x000000000005421f : add dh, dh ; ret 0xf08
0x00000000000a12b2 : add dh, dh ; ret 0xf20
0x00000000000a12bb : add dh, dh ; ret 0xf40
0x00000000001aa779 : add dh, dl ; call rdi
0x0000000000187fe9 : add dh, dl ; inc dword ptr [rax] ; add esi, edx ; jmp qword ptr [rax]
0x0000000000187fe1 : add dh, dl ; inc eax ; add dh, dl ; jmp rax
0x0000000000187fc9 : add dh, dl ; jmp qword ptr [rax]
0x0000000000187fe5 : add dh, dl ; jmp rax
0x0000000000109e5e : add dil, byte ptr [rcx] ; ret
0x00000000000bb1e9 : add dil, r15b ; ret
0x0000000000187d8c : add dl, ch ; int1 ; jmp qword ptr [rax]
0x00000000001a5ea5 : add dl, ch ; ret
0x0000000000187f99 : add dl, dh ; jmp qword ptr [rax]
0x000000000003494f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000187f95 : add dl, dh ; push rax ; add dl, dh ; jmp qword ptr [rax]
0x00000000001bc470 : add dword ptr [0xfffffffff501c501], ecx ; add al, byte ptr [rax] ; ret
0x0000000000198f95 : add dword ptr [eax], eax ; je 0x198fe2 ; cmc ; jmp rsp
0x00000000001a6c84 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000026e56 : add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000c01fc : add dword ptr [r8 - 0x73], ecx ; jl 0xc025b ; ror byte ptr [rax - 0x46], 1 ; ret
0x0000000000046274 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000006c70e : add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce92 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x00000000001afcd5 : add dword ptr [r8], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001b00c5 : add dword ptr [r8], r8d ; cmc ; jmp rax
0x00000000001b02ed : add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x0000000000026486 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000000000077ccc : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000d5988 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000016afb1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000000d959f : add dword ptr [rax + 0x29], ecx ; ret 0x8348
0x0000000000026af7 : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000d8fb3 : add dword ptr [rax + 0x39], ecx ; ret 0x1176
0x00000000000b7957 : add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000000f95d3 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x00000000000e1686 : add dword ptr [rax + 0x39], ecx ; ret 0x820f
0x00000000000495f0 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x0000000000051fec : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x00000000000f95c7 : add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000000d9083 : add dword ptr [rax + 0x39], ecx ; ret 0xe775
0x00000000000d3645 : add dword ptr [rax + 0x39], ecx ; ret 0xe777
0x00000000000b8dd2 : add dword ptr [rax + 0x39], ecx ; ret 0xec77
0x000000000009f9c0 : add dword ptr [rax + 0x39], ecx ; ret 0xf077
0x0000000000048083 : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000004821b : add dword ptr [rax + 0x39], ecx ; salc ; jne 0x48218 ; xor eax, eax ; ret
0x000000000010de35 : add dword ptr [rax + 0x3c63af9], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010de0f : add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x00000000000c59d5 : add dword ptr [rax + 0x63], ecx ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000101ca1 : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000ff923 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00000000000e5ccf : add dword ptr [rax + 0xf], ecx ; ret
0x000000000006432a : add dword ptr [rax + 1], ecx ; ret
0x0000000000020622 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d5903 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000123eec : add dword ptr [rax + rax*8 + 0x38414f74], eax ; ret 0x5a74
0x00000000001a26fe : add dword ptr [rax + rbp*2], 0xa ; ret
0x0000000000099555 : add dword ptr [rax + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8349
0x00000000001ac0b6 : add dword ptr [rax + rsi*2], 0xa ; ret
0x000000000011b426 : add dword ptr [rax - 0x18], edx ; ret
0x00000000000d39b7 : add dword ptr [rax - 0x6bf0a206], eax ; ret 0xb60f
0x00000000000d39b6 : add dword ptr [rax - 0x6bf0a206], r8d ; ret 0xb60f
0x000000000002f453 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000105de2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000c01fd : add dword ptr [rax - 0x73], ecx ; jl 0xc025a ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000f0005 : add dword ptr [rax - 0x75], ecx ; and al, 0x18 ; mov rdx, rax ; jmp 0xf004b
0x00000000000a2a86 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000166c12 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000009e916 : add dword ptr [rax - 0x77], ecx ; clc ; ret
0x00000000000af761 : add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x000000000007eac9 : add dword ptr [rax - 0x77], ecx ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007b428 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f5d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000008b4d1 : add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad94 : add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000000f0d1c : add dword ptr [rax - 0x77], ecx ; ret 0x349
0x00000000000cf890 : add dword ptr [rax - 0x77], ecx ; ret 0x57e9
0x00000000000e1cb2 : add dword ptr [rax - 0x77], ecx ; ret 0x75e8
0x00000000000793ef : add dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000d0440 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x000000000010e708 : add dword ptr [rax - 0x77], ecx ; sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e6de
0x0000000000123bd0 : add dword ptr [rax - 0x78], eax ; ja 0x123bdb ; ret
0x000000000016cbca : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000097428 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000000221f6 : add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000122608 : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000d8213 : add dword ptr [rax - 0x7d], ecx ; ret 0x3d01
0x00000000000463dc : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000de2ff : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000e9792 : add dword ptr [rax - 0x7d], ecx ; ret 0x4108
0x00000000000e17c2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4404
0x000000000006c70f : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000037e49 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000d37d3 : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000002146c : add dword ptr [rax - 0x7d], ecx ; ret 0x4830
0x00000000000c7856 : add dword ptr [rax - 0x7d], ecx ; ret 0x4948
0x0000000000023c9e : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x000000000003d24e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x0000000000122938 : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x00000000000ceb8b : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000b710c : add dword ptr [rax - 0x7d], ecx ; ret 0x8504
0x000000000006ce93 : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x00000000000fb131 : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000005cb5a : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000e754a : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x00000000000d9244 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000d7a3e : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x000000000007b5da : add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x00000000001a3c55 : add dword ptr [rax], 0xed46e800 ; jmp qword ptr [rsi]
0x0000000000109994 : add dword ptr [rax], 1 ; ret
0x00000000001af1ee : add dword ptr [rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001ae7ce : add dword ptr [rax], eax ; adc bl, bl ; hlt ; call qword ptr [rbx]
0x00000000001b057e : add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b09fe : add dword ptr [rax], eax ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0c3e : add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001acdae : add dword ptr [rax], eax ; adc dl, bl ; jmp qword ptr [rcx]
0x0000000000199ab6 : add dword ptr [rax], eax ; adc edi, r14d ; jmp rsp
0x000000000019879e : add dword ptr [rax], eax ; add al, 0x52 ; call rsp
0x000000000014199f : add dword ptr [rax], eax ; add al, ch ; cdq ; ret 0xffee
0x0000000000141f76 : add dword ptr [rax], eax ; add al, ch ; ret 0xeebc
0x00000000001af40e : add dword ptr [rax], eax ; add bh, bh ; hlt ; call rsi
0x000000000009e40a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00000000001238dc : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x100 ; ret
0x00000000001238e2 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0x102 ; ret
0x00000000001238d4 : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000006dcba : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000029448 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000028550 : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret 0xe183
0x000000000006f0bd : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x000000000006bd68 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000013c956 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000008767c : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x0000000000081568 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000001437dd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000066504 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e3608 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000970ae : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002c535 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000072b08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x0000000000084ab9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000084be0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000002b95f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122e02 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x0000000000082bd7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x00000000000b69ca : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001458bd : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000343b7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002691d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x000000000008de7e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014bd6f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145811 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000297fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000007186a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001b0abe : add dword ptr [rax], eax ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000072090 : add dword ptr [rax], eax ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000021901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000018021a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000017f3ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000017f1f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000017f1ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x000000000017f982 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000005981e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rcx ; jmp rax
0x000000000004da4c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rax, rsi ; jmp rax
0x000000000012eb13 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000fde60 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000103657 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x00000000001728f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x172908 ; neg eax ; ret
0x00000000000abc61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xabc71 ; neg eax ; ret
0x0000000000170847 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x170858 ; neg eax ; ret
0x00000000000bf1e7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbf1b4
0x00000000000cdbf3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xcdc07 ; ret
0x0000000000132393 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000132fe8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebp, eax ; call 0x12f2c8
0x000000000004a09e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000012d8ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000103844 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000103710 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000103688 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000103ace : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006cb44 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006c431 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000d97d7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdx, r8 ; jmp 0xd97f0
0x0000000000054d9b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070b6e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000007ba63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ea21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000008870a : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000048064 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000006b46e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000817f4 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x00000000000e393a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000f8566 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000045097 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010f66b : add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x0000000000073e92 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fd03], al ; ret 0
0x000000000006ce32 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000087e5f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call rax
0x0000000000087bef : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x1e], cl ; mov rdi, r15 ; call rax
0x00000000000879d1 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x0000000000066558 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret 0x34c
0x0000000000022d7c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ee1a3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000066579 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x000000000008638e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x000000000012abbd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000026554 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000835d5 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000080511 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000110301 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000110caf : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000c2233 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000079d28 : add dword ptr [rax], eax ; add byte ptr [rcx], cl ; ret 0x8948
0x0000000000023dc1 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x00000000001af97e : add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000000ceb85 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000001238c9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xf3c3
0x000000000012386e : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000001238a9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xff83
0x000000000009effa : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000dc59c : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000170935 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000170942 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000017094f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000170907 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000170914 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000170921 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000012de31 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000000ffdad : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000559c5 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x000000000019a66e : add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x000000000019b886 : add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019811e : add dword ptr [rax], eax ; and al, 0x81 ; out dx, eax ; jmp rsp
0x0000000000198e3e : add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x00000000001981d6 : add dword ptr [rax], eax ; and al, 0x94 ; out dx, eax ; call rsp
0x000000000019a8c6 : add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x000000000019a096 : add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; ret 1
0x000000000019a0e6 : add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x00000000001989de : add dword ptr [rax], eax ; and al, 0xf3 ; jmp rsp
0x000000000019934e : add dword ptr [rax], eax ; and al, 0xf6 ; call rsp
0x0000000000198286 : add dword ptr [rax], eax ; and al, 0xfb ; out dx, eax ; call rsp
0x00000000001b119e : add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b294e : add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b2c36 : add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b2a0e : add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001aced6 : add dword ptr [rax], eax ; call 0x131ac2bc
0x00000000001ba166 : add dword ptr [rax], eax ; call 0x131b9971
0x00000000001ade86 : add dword ptr [rax], eax ; call 0x221ad32c
0x00000000001af966 : add dword ptr [rax], eax ; call 0x221aee90
0x00000000001b0aa6 : add dword ptr [rax], eax ; call 0x221b0021
0x00000000001b2bd6 : add dword ptr [rax], eax ; call 0x271b2204
0x00000000001b2a86 : add dword ptr [rax], eax ; call 0x271b23aa
0x00000000001b2ab6 : add dword ptr [rax], eax ; call 0x271b23da
0x00000000001b2ae6 : add dword ptr [rax], eax ; call 0x271b240a
0x00000000001b2b16 : add dword ptr [rax], eax ; call 0x271b243a
0x00000000001b2b46 : add dword ptr [rax], eax ; call 0x271b246a
0x00000000001b2b76 : add dword ptr [rax], eax ; call 0x271b249a
0x00000000001acb96 : add dword ptr [rax], eax ; call 0x281abf5e
0x00000000001b6616 : add dword ptr [rax], eax ; call 0xffffffffd21b5d51
0x000000000019873e : add dword ptr [rax], eax ; call rsp
0x00000000001b29c6 : add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001acd96 : add dword ptr [rax], eax ; clc ; fpatan ; jmp qword ptr [rcx]
0x000000000019a5a6 : add dword ptr [rax], eax ; clc ; jmp rsp
0x00000000001b6466 : add dword ptr [rax], eax ; clc ; loope 0x1b646b ; call rsi
0x00000000001b09e6 : add dword ptr [rax], eax ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b9086 : add dword ptr [rax], eax ; clc ; ret
0x00000000001adbd6 : add dword ptr [rax], eax ; clc ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001b00c6 : add dword ptr [rax], eax ; cmc ; jmp rax
0x000000000008e64a : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x00000000001b34ce : add dword ptr [rax], eax ; cmp al, 0xf6 ; call qword ptr [rax]
0x00000000001aebc6 : add dword ptr [rax], eax ; cmp bl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b3b96 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b11b6 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b0bc6 : add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b360e : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x000000000019865e : add dword ptr [rax], eax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00000000001b2966 : add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5f96 : add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001b0bf6 : add dword ptr [rax], eax ; cwde ; jno 0x1b0bf5 ; jmp qword ptr [rcx]
0x00000000001b5436 : add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x00000000001b0986 : add dword ptr [rax], eax ; cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019996e : add dword ptr [rax], eax ; div esi ; call rsp
0x00000000001aea06 : add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x00000000001b1156 : add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001afcd6 : add dword ptr [rax], eax ; fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x0000000000198eee : add dword ptr [rax], eax ; hlt ; and ch, dh ; jmp rsp
0x000000000019a0b6 : add dword ptr [rax], eax ; hlt ; jrcxz 0x19a0b9 ; inc esp ; ret 1
0x000000000019b99e : add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x0000000000199c06 : add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x00000000001981a6 : add dword ptr [rax], eax ; hlt ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x000000000019a0c6 : add dword ptr [rax], eax ; in al, -9 ; push rsp ; ret 1
0x000000000019849e : add dword ptr [rax], eax ; in al, 0x46 ; int1 ; call rsp
0x00000000001aef6e : add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c6e : add dword ptr [rax], eax ; jb 0x1b0c6d ; jmp qword ptr [rcx]
0x0000000000199616 : add dword ptr [rax], eax ; jbe 0x199616 ; jmp rsp
0x0000000000198f96 : add dword ptr [rax], eax ; je 0x198fe1 ; cmc ; jmp rsp
0x000000000019a11e : add dword ptr [rax], eax ; je 0x19a10f ; idiv edi ; cld ; ret
0x0000000000047056 : add dword ptr [rax], eax ; jne 0x47058 ; mov rax, rbx ; pop rbx ; ret
0x00000000001ace0e : add dword ptr [rax], eax ; jo 0x1acdf1 ; jmp qword ptr [rcx]
0x00000000001ad7ee : add dword ptr [rax], eax ; jo 0x1ad77e ; hlt ; call qword ptr [rax]
0x00000000001ae5ce : add dword ptr [rax], eax ; jo 0x1ae5a8 ; hlt ; jmp rcx
0x00000000001bb2fe : add dword ptr [rax], eax ; jo 0x1bb29c ; sti ; jmp qword ptr [rdx]
0x00000000001adee6 : add dword ptr [rax], eax ; js 0x1ade8a ; hlt ; jmp qword ptr [rcx]
0x00000000001aea36 : add dword ptr [rax], eax ; js 0x1aea1e ; hlt ; call qword ptr [rbx]
0x00000000001aedb6 : add dword ptr [rax], eax ; js 0x1aeda6 ; hlt ; jmp qword ptr [rcx]
0x00000000001aee46 : add dword ptr [rax], eax ; js 0x1aee37 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0b36 : add dword ptr [rax], eax ; js 0x1b0baf ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fa6 : add dword ptr [rax], eax ; js 0x1b0fa5 ; jmp qword ptr [rbx]
0x00000000001baf66 : add dword ptr [rax], eax ; js 0x1baf07 ; sti ; jmp qword ptr [rdx]
0x00000000001b0736 : add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001acd7e : add dword ptr [rax], eax ; loopne 0x1acd60 ; jmp qword ptr [rcx]
0x00000000001adbbe : add dword ptr [rax], eax ; loopne 0x1adb5a ; hlt ; jmp qword ptr [rcx]
0x00000000001adcfe : add dword ptr [rax], eax ; loopne 0x1adc9c ; hlt ; jmp qword ptr [rcx]
0x00000000001af37e : add dword ptr [rax], eax ; loopne 0x1af384 ; hlt ; jmp qword ptr [rcx]
0x00000000001b09ce : add dword ptr [rax], eax ; loopne 0x1b0a45 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d8e : add dword ptr [rax], eax ; loopne 0x1b0e0a ; cmc ; jmp qword ptr [rcx]
0x0000000000198d7e : add dword ptr [rax], eax ; mov ah, 0x20 ; hlt ; call rsp
0x0000000000198f46 : add dword ptr [rax], eax ; mov ah, 0x40 ; cmc ; jmp rsp
0x000000000019b856 : add dword ptr [rax], eax ; mov ah, 0x40 ; sti ; call rsp
0x000000000019a0fe : add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x00000000001baade : add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x00000000001b051e : add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001b074e : add dword ptr [rax], eax ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b099e : add dword ptr [rax], eax ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c0e : add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b05f6 : add dword ptr [rax], eax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000009edec : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ed31 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000000000198a2e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor dh, bl ; jmp rsp
0x00000000001b2c7e : add dword ptr [rax], eax ; nop ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b9f8e : add dword ptr [rax], eax ; nop ; div bh ; call qword ptr [rdx]
0x00000000001b0b4e : add dword ptr [rax], eax ; nop ; jo 0x1b0b4d ; jmp qword ptr [rcx]
0x00000000001b110e : add dword ptr [rax], eax ; nop ; jp 0x1b110d ; jmp qword ptr [rcx]
0x00000000001adefe : add dword ptr [rax], eax ; nop ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001abf96 : add dword ptr [rax], eax ; or al, dh ; call rcx
0x00000000001b07c6 : add dword ptr [rax], eax ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af4d6 : add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001b2d46 : add dword ptr [rax], eax ; or byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x000000000019a116 : add dword ptr [rax], eax ; out 0xf7, al ; jmp rsp
0x00000000001b090e : add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a26 : add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b5966 : add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000001aef86 : add dword ptr [rax], eax ; pop rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c86 : add dword ptr [rax], eax ; pop rax ; jb 0x1b0c85 ; jmp qword ptr [rcx]
0x00000000001b1e16 : add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x00000000001b0926 : add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b05c6 : add dword ptr [rax], eax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001ad9e6 : add dword ptr [rax], eax ; pop rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x00000000001b05ae : add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000009ee6b : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001b291e : add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001bb54e : add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001b1ace : add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001b0ede : add dword ptr [rax], eax ; push rax ; jbe 0x1b0edd ; jmp qword ptr [rcx]
0x00000000001b11ce : add dword ptr [rax], eax ; push rax ; jnp 0x1b11cd ; jmp qword ptr [rcx]
0x00000000001ae1fe : add dword ptr [rax], eax ; push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001adb5e : add dword ptr [rax], eax ; push rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x000000000019a646 : add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x0000000000198bd6 : add dword ptr [rax], eax ; push rsp ; insd dword ptr [rdi], dx ; call rsp
0x0000000000199216 : add dword ptr [rax], eax ; push rsp ; or dh, dh ; jmp rsp
0x00000000001bad4e : add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b02ee : add dword ptr [rax], eax ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001afa0e : add dword ptr [rax], eax ; rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000000898b2 : add dword ptr [rax], eax ; ret
0x00000000001b0cce : add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b0ad6 : add dword ptr [rax], eax ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0d16 : add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001af996 : add dword ptr [rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001ad7ce : add dword ptr [rax], eax ; shl byte ptr [rsi - 7], 1 ; call qword ptr [rax]
0x00000000001b0a8e : add dword ptr [rax], eax ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001aef56 : add dword ptr [rax], eax ; sub ah, ch ; hlt ; jmp qword ptr [rcx]
0x00000000001aed66 : add dword ptr [rax], eax ; sub bh, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001b07f6 : add dword ptr [rax], eax ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b3bc6 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b0a16 : add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b08f6 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af8d6 : add dword ptr [rax], eax ; sub byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af3f6 : add dword ptr [rax], eax ; sub dh, bh ; hlt ; jmp rdi
0x00000000001aeaf6 : add dword ptr [rax], eax ; sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x00000000001acdc6 : add dword ptr [rax], eax ; sub dl, bl ; jmp qword ptr [rcx]
0x000000000019a0a6 : add dword ptr [rax], eax ; test ah, bl ; idiv edi ; xchg eax, esp ; ret 1
0x00000000001b1126 : add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001ac686 : add dword ptr [rax], eax ; test al, 0x87 ; call qword ptr [rsi]
0x00000000001ad766 : add dword ptr [rax], eax ; test al, 0x87 ; hlt ; call qword ptr [rsi]
0x00000000001bb066 : add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x000000000019b756 : add dword ptr [rax], eax ; test bl, al ; cli ; jmp rsp
0x000000000019a49e : add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000001992c6 : add dword ptr [rax], eax ; test byte ptr [rsi + rsi*8], dl ; call rsp
0x00000000001ad9ce : add dword ptr [rax], eax ; xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x000000000019a3ae : add dword ptr [rax], eax ; xchg eax, esp ; adc edi, eax ; call rsp
0x00000000001989b6 : add dword ptr [rax], eax ; xchg eax, esp ; and dh, bl ; jmp rsp
0x000000000019850e : add dword ptr [rax], eax ; xchg eax, esp ; pop rsp ; int1 ; call rsp
0x000000000019a466 : add dword ptr [rax], eax ; xor al, 0x21 ; clc ; jmp rsp
0x000000000019b966 : add dword ptr [rax], eax ; xor al, 0x77 ; std ; call rsp
0x000000000019a88e : add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x000000000019ba6e : add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x00000000001ae9ee : add dword ptr [rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aebae : add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001b0aee : add dword ptr [rax], eax ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b3bae : add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b712e : add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000001af9ae : add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001b405e : add dword ptr [rax], eax ; xor byte ptr [rsi - 0xa], dl ; call qword ptr [rcx]
0x00000000001abd7e : add dword ptr [rax], eax ; xor ch, ah ; call qword ptr [rsi]
0x00000000001af15e : add dword ptr [rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x000000000008e4a1 : add dword ptr [rax], edi ; ret
0x0000000000020ccc : add dword ptr [rax], edi ; ret 0xaf72
0x0000000000099aa7 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x0000000000097c9a : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x00000000000aa99c : add dword ptr [rbp + 0x41], ebx ; pop rsp ; pop r13 ; ret
0x0000000000117baf : add dword ptr [rbp + 0x741189d2], eax ; ret 0x3949
0x00000000000c40bb : add dword ptr [rbp + 1], ecx ; ret
0x0000000000048060 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x000000000003d33d : add dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000095c20 : add dword ptr [rbp - 0x77], ecx ; ret 0xc149
0x000000000004c5b1 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000000e467b : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x0000000000105cf9 : add dword ptr [rbp - 0xc], esi ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000009751c : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x0000000000097384 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000009742c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000015b772 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000d5372 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x000000000000271e : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000011cfa8 : add dword ptr [rbx + 0x460f09fb], eax ; ret
0x00000000000d5bf4 : add dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000012fa58 : add dword ptr [rbx + 0x94806e3], eax ; ret
0x00000000000d5bf1 : add dword ptr [rbx + 4], 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009dab5 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x000000000009bb71 : add dword ptr [rbx + rdi + 0xf], esi ; mov dh, 0x55 ; ret 0x8348
0x00000000000d72ba : add dword ptr [rbx - 0x3d], ebx ; nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000123bf2 : add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000033391 : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000b7109 : add dword ptr [rbx - 0x7cb7fe15], eax ; ret 0x8504
0x00000000000d6d6f : add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x00000000000d8984 : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x00000000001bc444 : add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000001a529a : add dword ptr [rbx], eax ; or eax, 0x380e0a03 ; ret
0x000000000019c8d3 : add dword ptr [rbx], eax ; ret 0xe01
0x00000000001bc441 : add dword ptr [rbx], ecx ; fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x0000000000132381 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x0000000000099d44 : add dword ptr [rcx + 0x29], ecx ; ret
0x00000000000ac72f : add dword ptr [rcx + 0x39], eax ; ret
0x0000000000094f80 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000bf2f9 : add dword ptr [rcx + 0x39], ecx ; ret 0x850f
0x0000000000023dea : add dword ptr [rcx + 0x39], ecx ; ret 0xe077
0x0000000000024298 : add dword ptr [rcx + 0x39], ecx ; ret 0xe277
0x00000000000e3e70 : add dword ptr [rcx + 0x63], ecx ; ret
0x00000000000ea663 : add dword ptr [rcx + 0xa89002d], ebx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000b1e71 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x000000000002d712 : add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000013aafc : add dword ptr [rcx + rdx*2 + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000046987 : add dword ptr [rcx - 0x3a], eax ; add al, 0x24 ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000194f94 : add dword ptr [rcx - 0x5e2e0003], esp ; std ; call rcx
0x0000000000081e62 : add dword ptr [rcx - 0x75], ecx ; push rax ; or dh, dh ; ret 0xf04
0x00000000000a2ac6 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000006c208 : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000004bccc : add dword ptr [rcx - 0x77], ecx ; push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000c30f5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000022d2d : add dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x0000000000123ebf : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009b314 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4201
0x000000000009a977 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4301
0x0000000000031491 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4804
0x0000000000123cc4 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000010de25 : add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x00000000000c2719 : add dword ptr [rcx - 0x7f], eax ; ret
0x000000000008de97 : add dword ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000012ab3b : add dword ptr [rcx], 0xbe0f0000 ; ret 0xe883
0x0000000000199445 : add dword ptr [rcx], 0xf65d7400 ; call rsp
0x00000000000ac49b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000001238db : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x000000000019811d : add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x0000000000082179 : add dword ptr [rcx], eax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000000d71b5 : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000000d71ff : add dword ptr [rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000109cd3 : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e80fb : add dword ptr [rcx], edi ; ret
0x00000000000d9569 : add dword ptr [rcx], edi ; ret 0xe875
0x00000000000e5df3 : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret 0x3941
0x000000000013c150 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000013c110 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013c19f : add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000017457a : add dword ptr [rdi + 3], esi ; ret
0x00000000000959b7 : add dword ptr [rdi - 0x1a], edi ; ret
0x00000000001b0053 : add dword ptr [rdi], 2 ; cwde ; ret
0x00000000001aaf13 : add dword ptr [rdi], 2 ; ret
0x00000000001bb823 : add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001ae33b : add dword ptr [rdi], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x0000000000125130 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d5b68 : add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x000000000002de35 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000025942 : add dword ptr [rdi], ecx ; mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x00000000000c23b1 : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000aa9fc : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000aa9e7 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000000000343b3 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000168a8e : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000e45c2 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000007e5fe : add dword ptr [rdi], ecx ; test dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000005d530 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000835db : add dword ptr [rdi], ecx ; test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000ebeb9 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000011f9c3 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc085
0x0000000000046dbc : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000ec6cb : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00000000000aa8c5 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000aadc0 : add dword ptr [rdx + 0x2b], 0xd9748104 ; ret
0x00000000000a2a84 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x000000000019c8cf : add dword ptr [rdx + 0xe], eax ; rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000000aa60c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000006b417 : add dword ptr [rdx + 4], 1 ; ret
0x000000000006b478 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x000000000009fbbd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001096db : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001a400e : add dword ptr [rdx + rax], -0xc ; ret
0x00000000001a536d : add dword ptr [rdx], 0x43 ; ret
0x00000000001a76ce : add dword ptr [rdx], 0x4b ; ret
0x00000000001bacec : add dword ptr [rdx], 0x51 ; ret
0x00000000001afcc4 : add dword ptr [rdx], 0x53 ; ret
0x00000000001ae74d : add dword ptr [rdx], 0x54 ; ret
0x00000000001b2d9b : add dword ptr [rdx], 0x5b ; ret
0x000000000019fb74 : add dword ptr [rdx], 0x63 ; ret
0x00000000001a02b4 : add dword ptr [rdx], 0x6f ; ret
0x00000000001a2fd4 : add dword ptr [rdx], 0x77 ; ret
0x000000000019fddd : add dword ptr [rdx], 2 ; outsd dx, dword ptr [rsi] ; ret
0x00000000001a284c : add dword ptr [rdx], 2 ; pop rsi ; ret
0x00000000001a2624 : add dword ptr [rdx], 2 ; push rsi ; ret
0x00000000001a76c4 : add dword ptr [rdx], 2 ; ret
0x00000000001b5bac : add dword ptr [rdx], 2 ; xchg eax, ecx ; ret
0x0000000000123ccf : add dword ptr [rdx], eax ; pop rbx ; ret
0x000000000019e569 : add dword ptr [rdx], ecx ; ret
0x0000000000123cce : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000007cba8 : add dword ptr [rip + 0x349bb5], 1 ; ret
0x00000000000a2a15 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001a71af : add dword ptr [rsi + rax*4], 3 ; mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a141e : add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a1434 ; ret
0x00000000001a142c : add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000000a2a97 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000001a8e20 : add dword ptr [rsi], 0x77 ; ret
0x00000000001a44be : add dword ptr [rsi], 0xa ; ret
0x00000000001ac2c0 : add dword ptr [rsi], 2 ; ret
0x00000000001a4530 : add dword ptr [rsi], 2 ; xchg eax, ebp ; ret
0x00000000001a6c85 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001afe5e : add dword ptr [rsp + rbp*2], 0xa ; ret
0x0000000000099b6e : add dword ptr [rsp + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8349
0x00000000000d72fc : add dword ptr [rsp + rdi*4 - 0x7d], esi ; jrcxz 0xd7313 ; je 0xd72a3 ; pop rbx ; ret
0x00000000001ae9ed : add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x000000000009dab4 : add dword ptr cs:[rbx + rdi + 0xf], esi ; mov dh, 0x45 ; ret 0x8348
0x00000000000343b6 : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af97d : add dword ptr ds:[rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af965 : add dword ptr ds:[rax], eax ; call 0x221aee91
0x00000000001af995 : add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001af9ad : add dword ptr ds:[rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000014d807 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000198eed : add dword ptr fs:[rax], eax ; hlt ; and ch, dh ; jmp rsp
0x00000000000d71fe : add dword ptr gs:[rcx], ebx ; sal bh, 0xd0 ; and eax, 2 ; ret
0x00000000001af1ed : add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001af15d : add dword ptr ss:[rax], eax ; xor dl, 0xf4 ; jmp qword ptr [rsi]
0x000000000008bb5b : add eax, 0x10 ; ret
0x000000000008f351 : add eax, 0x10e4a ; ret
0x0000000000134a02 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x000000000002cb3a : add eax, 0x15ffa6 ; ret
0x0000000000020932 : add eax, 0x16bcf4 ; ret
0x0000000000020942 : add eax, 0x16dc23 ; ret
0x00000000000bf6f0 : add eax, 0x16e ; ret
0x000000000008bb0f : add eax, 0x1713c ; ret
0x00000000000898af : add eax, 0x1777c ; ret
0x000000000008f1eb : add eax, 0x1b330 ; ret
0x000000000008e647 : add eax, 0x1ba24 ; cmove rax, rdx ; ret
0x00000000001bd1c5 : add eax, 0x1e70000 ; add byte ptr [rax], al ; ret 4
0x00000000001a9cb4 : add eax, 0x2300e44 ; ret 0xe0a
0x00000000001a5c14 : add eax, 0x2300e4a ; ret
0x00000000001a7dc4 : add eax, 0x2300e55 ; ret
0x000000000008ebc5 : add eax, 0x26 ; ret
0x0000000000140ee5 : add eax, 0x284526 ; call qword ptr [rax]
0x00000000001408d2 : add eax, 0x284b39 ; call qword ptr [rax]
0x0000000000138342 : add eax, 0x28bb51 ; add rsp, 8 ; ret
0x0000000000138312 : add eax, 0x28bbe9 ; add rsp, 8 ; ret
0x00000000001382b2 : add eax, 0x28bcd1 ; add rsp, 8 ; ret
0x00000000001382e2 : add eax, 0x28bcf9 ; add rsp, 8 ; ret
0x000000000008d9f3 : add eax, 0x29000000 ; ret
0x00000000000c276a : add eax, 0x2907fec1 ; ret 0x8944
0x00000000000c28aa : add eax, 0x2941c229 ; ret 0x6b45
0x00000000001289b2 : add eax, 0x29b631 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012c57a : add eax, 0x29c83d ; add rsp, 8 ; ret
0x000000000012c561 : add eax, 0x29c856 ; test eax, eax ; je 0x12c579 ; ret
0x000000000012b97a : add eax, 0x29d3c1 ; pop rbx ; ret
0x000000000012b942 : add eax, 0x29d3f9 ; pop rbx ; ret
0x000000000012b883 : add eax, 0x29d4b8 ; pop rbx ; ret
0x00000000001282fb : add eax, 0x2a0764 ; test eax, eax ; je 0x128311 ; ret
0x0000000000120f92 : add eax, 0x2a48e1 ; ret
0x0000000000120650 : add eax, 0x2a520b ; add rsp, 8 ; ret
0x0000000000115aa9 : add eax, 0x2b2672 ; pop rbp ; ret
0x000000000010a302 : add eax, 0x2b9b69 ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000101f80 : add eax, 0x2c529b ; add rsp, 0x18 ; ret
0x0000000000101f2c : add eax, 0x2c532f ; pop rbp ; pop r12 ; ret
0x00000000001019e8 : add eax, 0x2c57e3 ; add rsp, 8 ; ret
0x0000000000168b14 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000101989 : add eax, 0x2c5862 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe4b6 : add eax, 0x2c72e5 ; mov rdx, rax ; jmp 0xfe456
0x00000000000fe420 : add eax, 0x2c737b ; add rsp, 8 ; ret
0x00000000000ffaab : add eax, 0x2c7640 ; add rsp, 8 ; ret
0x00000000000ff579 : add eax, 0x2c7aa2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe2ef : add eax, 0x2c8ca4 ; ret
0x00000000000fe12f : add eax, 0x2c8e64 ; ret
0x00000000000fdf5c : add eax, 0x2c9037 ; add rsp, 8 ; ret
0x00000000001a6c83 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000bb7de : add eax, 0x30b1dd ; add rsp, 8 ; ret
0x000000000008d7d7 : add eax, 0x3390ac ; add rsp, 8 ; ret
0x0000000000084110 : add eax, 0x33fdcb ; mov qword ptr [rax], rdi ; ret
0x0000000000081a86 : add eax, 0x342345 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081861 : add eax, 0x34256a ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000084121 : add eax, 0x34269e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cb12 : add eax, 0x348a09 ; ret
0x000000000007cc16 : add eax, 0x349b49 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000013361d : add eax, 0x358d4800 ; ret
0x000000000006ac85 : add eax, 0x35ba76 ; pop rbx ; pop rbp ; ret
0x0000000000116232 : add eax, 0x37c19 ; ret
0x0000000000116322 : add eax, 0x37ec9 ; ret
0x00000000001b2619 : add eax, 0x38d048c ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x00000000000368bc : add eax, 0x38d7cb ; mov eax, edx ; ret
0x0000000000036881 : add eax, 0x38d802 ; ret
0x0000000000036871 : add eax, 0x38d816 ; ret
0x000000000003b0e2 : add eax, 0x38e36f ; add rsp, 8 ; ret
0x000000000002d9cd : add eax, 0x39641e ; mov qword ptr [rax], rdx ; ret
0x0000000000029c92 : add eax, 0x39bc59 ; ret
0x0000000000021a52 : add eax, 0x3a78b9 ; ret
0x0000000000021a42 : add eax, 0x3a78d9 ; ret
0x00000000001390b4 : add eax, 0x3d8d4800 ; ret
0x0000000000134eb5 : add eax, 0x3d8d4800 ; ret 0x57c
0x00000000000f5f67 : add eax, 0x48000000 ; add esp, 0x18 ; ret
0x000000000016b048 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000166cf8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000a5df6 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000125132 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000009e95a : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x0000000000188051 : add eax, 0x510fff2 ; jmp qword ptr [rax]
0x000000000018997d : add eax, 0x528fff5 ; cmc ; jmp rax
0x000000000016b0c9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000166d39 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x0000000000189a01 : add eax, 0x590fff5 ; cmc ; jmp rax
0x00000000001063a0 : add eax, 0x5b000000 ; pop rbp ; ret
0x000000000006e576 : add eax, 0x5b000000 ; ret
0x0000000000001569 : add eax, 0x5be0000 ; add byte ptr [rax], al ; ret 5
0x0000000000180dbd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000007eed8 : add eax, 0x5c415d5b ; ret
0x00000000000efc8d : add eax, 0x5d000000 ; pop r12 ; ret
0x000000000012b0b2 : add eax, 0x61a2e ; ret
0x0000000000189a0d : add eax, 0x638fff5 ; cmc ; jmp qword ptr [rcx]
0x00000000001bcd29 : add eax, 0x690000 ; add byte ptr [rax], al ; ret
0x00000000001bc025 : add eax, 0x6f880002 ; clc ; call rcx
0x000000000019b885 : add eax, 0x73240001 ; sti ; call rsp
0x00000000001bc0dd : add eax, 0x73f00002 ; clc ; call qword ptr [rdi]
0x00000000000d3227 : add eax, 0x740e3941 ; ret
0x00000000001953fd : add eax, 0x740fffc ; cld ; jmp qword ptr [rax]
0x00000000000b9e6a : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000b9e16 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000002e50f : add eax, 0x788d4800 ; sbb dword ptr [rax - 0x77], ecx ; ret
0x000000000008f9eb : add eax, 0x80 ; ret
0x000000000003d3bd : add eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000a65fe : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000d9563 : add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000aa8bf : add eax, 0x8307e083 ; clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x00000000000e32b4 : add eax, 0x83410000 ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000f842b : add eax, 0x83480000 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001454ad : add eax, 0x83480000 ; ret 0x4910
0x0000000000148001 : add eax, 0x83480000 ; ret 0xe910
0x0000000000145401 : add eax, 0x83480000 ; ret 0xeb10
0x00000000000d540d : add eax, 0x83480f75 ; ret
0x000000000016b04b : add eax, 0x8428d48 ; ret
0x000000000012faab : add eax, 0x894c0000 ; ret
0x000000000006f34e : add eax, 0x89c08500 ; ret 0x8389
0x0000000000115979 : add eax, 0x89c78944 ; ret
0x0000000000026b0d : add eax, 0x8d480000 ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000026af1 : add eax, 0x8d480000 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000026b29 : add eax, 0x8d480000 ; add ecx, dword ptr [rax + 0x39] ; ret
0x0000000000026e6e : add eax, 0x8d490000 ; add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000026e8b : add eax, 0x8d490000 ; add r9d, dword ptr [r8 + 0x39] ; ret
0x00000000000a7ca2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x0000000000138306 : add eax, 0xa0 ; add rsp, 8 ; ret
0x0000000000138336 : add eax, 0xa8 ; add rsp, 8 ; ret
0x0000000000094440 : add eax, 0xb3db ; ret
0x0000000000094411 : add eax, 0xb63a ; ret
0x0000000000094454 : add eax, 0xbcb07 ; ret
0x000000000008da9c : add eax, 0xbcd7f ; ret
0x000000000008d70c : add eax, 0xbcfdf ; ret
0x000000000008f392 : add eax, 0xbee69 ; ret
0x000000000008b29c : add eax, 0xbf30f ; ret
0x0000000000089cff : add eax, 0xc ; ret
0x00000000001407de : add eax, 0xc0310000 ; pop rbx ; ret
0x000000000016f44a : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x00000000000abc9d : add eax, 0xc20ce ; ret
0x00000000000ac879 : add eax, 0xc31b2 ; ret
0x000000000016b0cd : add eax, 0xc428d48 ; ret
0x00000000000a743d : add eax, 0xc478d48 ; ret
0x00000000000ac881 : add eax, 0xc5a6a ; ret
0x00000000000310d7 : add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000008fa4e : add eax, 0xd ; ret
0x00000000000a827d : add eax, 0xd478d48 ; ret
0x000000000008d3ef : add eax, 0xd999c ; ret
0x000000000008f87f : add eax, 0xda08c ; ret
0x000000000008b18f : add eax, 0xda44c ; ret
0x000000000008f99f : add eax, 0xdb77c ; ret
0x000000000008ebd9 : add eax, 0xdf812 ; ret
0x000000000008ebe1 : add eax, 0xe1f9a ; ret
0x0000000000089a9c : add eax, 0xe6dbf ; ret
0x0000000000112387 : add eax, 0xe8000000 ; nop ; ret 0xfff1
0x000000000009e3ae : add eax, 0xe9000000 ; ret
0x00000000000ac865 : add eax, 0xe916 ; ret
0x00000000000d45c6 : add eax, 0xf410000 ; mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000abc95 : add eax, 0xf596 ; ret
0x0000000000103af2 : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x0000000000103b17 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000103c60 : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000103cf9 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x0000000000080507 : add eax, 0xf6410000 ; ret 0xf01
0x000000000015b763 : add eax, 0xf7f0ff3 ; ret
0x000000000004d6d0 : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed8c : add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000001161f1 : add eax, 0xfff8984a ; ret
0x00000000001162e1 : add eax, 0xfff89eaa ; ret
0x000000000011636b : add eax, 0xfff941a0 ; ret
0x0000000000136dbe : add eax, 0xffff97fd ; mov rdi, rax ; call qword ptr [r10]
0x00000000000569f7 : add eax, 0xfffffd06 ; add rax, rdx ; jmp rax
0x00000000000f6a37 : add eax, 0xffffffb4 ; cmove rax, rdx ; ret
0x0000000000109bcb : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000010997c : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000aa99a : add eax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f82b : add eax, 1 ; ret
0x00000000000218e5 : add eax, 2 ; push rax ; call rbx
0x00000000000abf38 : add eax, 2 ; ret
0x00000000000abf51 : add eax, 3 ; ret
0x00000000000d71bb : add eax, 8 ; ret
0x0000000000020be9 : add eax, dword ptr [0] ; ret
0x0000000000040f82 : add eax, dword ptr [rax + rax] ; add cl, ch ; ret 0xffec
0x00000000000b1947 : add eax, dword ptr [rax] ; add al, ch ; int1 ; ret 0xfff7
0x00000000000b6075 : add eax, dword ptr [rax] ; add al, ch ; ret
0x000000000007f083 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000007dabb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000e0bcd : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xe283
0x0000000000020c2a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f1db8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000122678 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000014564d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001481a1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145671 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013305e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012f7db : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001092d6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001157c7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000010285c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000010403d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000104094 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000104114 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000104214 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000000abf93 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000fdae3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; mov eax, edx ; ret
0x0000000000122154 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000aa9f7 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0x74e9
0x000000000013838f : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8e0f
0x0000000000115095 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000dddc2 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0x3945
0x000000000003af9a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7e37763a], cl ; ret 0x3039
0x000000000007e602 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000080a39 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000125585 : add eax, dword ptr [rax] ; add byte ptr [rcx], bh ; ret
0x0000000000054f38 : add eax, dword ptr [rax] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed1 ; ret 0xe680
0x00000000000fdc27 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000aac20 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac40 : add eax, dword ptr [rax] ; ret
0x00000000001aa803 : add eax, dword ptr [rbx + 0xa810204] ; ret
0x00000000001a4212 : add eax, dword ptr [rbx + 0xe] ; and byte ptr [rbx + 0xa4d0204], al ; ret
0x0000000000123bcd : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x123bde ; ret
0x0000000000168ad9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000074d14 : add eax, dword ptr [rcx + 0x39] ; fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000019d0ca : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a1fca : add eax, dword ptr [rcx + 0xe] ; and byte ptr [rbx + 0xa470204], al ; ret
0x000000000010ad6a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000001266bd : add eax, dword ptr [rcx - 0x7d] ; ret 0x4401
0x00000000001981a5 : add eax, dword ptr [rcx] ; add ah, dh ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x0000000000033e90 : add eax, dword ptr [rdi + 0x20] ; ret
0x00000000000663b5 : add eax, dword ptr [rdi + rcx] ; test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x0000000000143dba : add eax, dword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000001436de : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x000000000010ab46 : add eax, dword ptr [rdx + rcx] ; ret
0x0000000000168bd9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001ab9b0 : add eax, dword ptr [rsi + 0x180e4702] ; ret
0x00000000001a2c12 : add eax, dword ptr [rsi + 0x180e6e02] ; ret
0x00000000001ba6ba : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000001a0732 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000001a400a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rdx + rax], -0xc ; ret
0x00000000001afe5a : add eax, dword ptr [rsi + rcx + 0x20] ; add dword ptr [rsp + rbp*2], 0xa ; ret
0x00000000000aacf1 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000504c8 : add eax, eax ; ret
0x000000000013efc6 : add eax, ebp ; hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008554a : add eax, ebp ; jmp rax
0x0000000000095750 : add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x00000000001163b7 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059823 : add eax, ecx ; jmp rax
0x000000000008e8fa : add eax, ecx ; ret
0x000000000009f215 : add eax, edi ; add rax, r8 ; ret
0x000000000008e8f7 : add eax, edi ; add rax, rcx ; ret
0x00000000000c00b4 : add eax, edi ; jmp rax
0x000000000008d45b : add eax, edi ; ret
0x000000000014a60b : add eax, edi ; sub rax, r8 ; ret
0x000000000014a860 : add eax, edi ; sub rax, rdx ; ret
0x00000000000f6a0d : add eax, edx ; cmp rdi, rsi ; ja 0xf6a08 ; ret
0x000000000002ec9a : add eax, edx ; jmp rax
0x000000000012e83e : add eax, edx ; ret
0x000000000008b8b6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000fdc25 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000002ebbc : add eax, esi ; jmp rax
0x00000000000bc6c7 : add eax, esi ; ret
0x00000000000504c7 : add eax, r8d ; ret
0x0000000000050198 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000001bb825 : add ebp, dword ptr [rcx + rax + 0xa] ; ret
0x00000000000bbabb : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000012bbc4 : add ebp, dword ptr [rcx] ; ret 0x828d
0x00000000001bc473 : add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001bc475 : add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001bc465 : add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000003182 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000000d043e : add ebx, 1 ; mov rdx, rax ; jmp 0xd03e5
0x00000000001437e2 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000001240fd : add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x00000000001a4228 : add ebx, dword ptr [rdi] ; add dword ptr [rdx], ecx ; ret
0x00000000001149ec : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000048471 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000fea0b : add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x0000000000003792 : add ebx, ebp ; in al, -0x12 ; jne 0x3778 ; ret 0x975
0x0000000000101e21 : add ebx, ebp ; ret
0x000000000006045d : add ebx, ebp ; ret 0x894c
0x000000000018c5b1 : add ebx, edi ; jmp rax
0x000000000015b923 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000010a43f : add ebx, esi ; ret
0x000000000013a74e : add ebx, esp ; call r14
0x000000000008f2e4 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x8f2d9 ; ret
0x00000000000f5b4f : add ecx, 0x50 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000123f5d : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000a2b1a : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000011e148 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007e469 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000d5375 : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000001118d4 : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x000000000011f6c9 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x0000000000096e31 : add ecx, dword ptr [rax + 0x29] ; ret 0x8348
0x000000000011ee29 : add ecx, dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000096c5f : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x0000000000026b2f : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000724b7 : add ecx, dword ptr [rax + 0x39] ; ret 0xf48
0x000000000010931d : add ecx, dword ptr [rax - 0x42] ; ret
0x000000000012411c : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000ff214 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x000000000009e93a : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000008392e : add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ef98 : add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x0000000000111dc7 : add ecx, dword ptr [rax - 0x77] ; ret 0xe883
0x0000000000024205 : add ecx, dword ptr [rax - 0x7d] ; mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000038f4d : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000039027 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775b : add ecx, dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000003d37d : add ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000143aa1 : add ecx, dword ptr [rbp - 0x88] ; call rax
0x000000000015b692 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5d94 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000fa399 : add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x0000000000113254 : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000a2b1b : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000b9269 : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000000b7f28 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4201
0x00000000000539a3 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4c05
0x00000000001a7e72 : add ecx, dword ptr [rdi + 0x380e4402] ; ret
0x00000000001a6f78 : add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb5dd : add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x00000000000a65c0 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000001ae33f : add ecx, dword ptr [rdx] ; ret
0x00000000001a529b : add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x000000000002be48 : add ecx, eax ; jmp rcx
0x0000000000150f7b : add ecx, ebx ; jmp r9
0x0000000000047c96 : add ecx, ebx ; jmp rcx
0x0000000000102414 : add ecx, ebx ; ret
0x0000000000102128 : add ecx, ebx ; ret 0x3944
0x000000000003329c : add ecx, edi ; jmp rcx
0x0000000000063e4a : add ecx, edx ; jmp rcx
0x00000000000aac94 : add ecx, esi ; jmp rcx
0x0000000000132d8d : add edi, 0x10 ; jmp rcx
0x000000000012bf1f : add edi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012e0fa : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000135834 : add edi, 0x58 ; jmp rcx
0x0000000000134f94 : add edi, 0x68 ; jmp rcx
0x0000000000132217 : add edi, 0xc8 ; jmp rcx
0x000000000009e914 : add edi, 1 ; mov rax, rdi ; ret
0x00000000000d15cb : add edi, 1 ; test dl, dl ; jne 0xd15b9 ; ret
0x000000000009e925 : add edi, 2 ; mov rax, rdi ; ret
0x000000000009e938 : add edi, 3 ; mov rax, rdi ; ret
0x000000000009e945 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009e958 : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009e8e2 : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000172b2f : add edi, dword ptr [rbp + 0x10] ; call r12
0x00000000000208f4 : add edi, ebp ; call rax
0x00000000001a7391 : add edi, ebp ; jmp rsi
0x0000000000194de1 : add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000000e1a4d : add edi, ebx ; jmp rdi
0x0000000000150f78 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000019afa1 : add edi, edx ; call rsp
0x0000000000123f35 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000006caa2 : add edi, esi ; jmp rdi
0x00000000001954bd : add edi, esp ; call rax
0x0000000000123ec1 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x000000000009f118 : add edx, eax ; jl 0x9f187 ; add rax, rdi ; ret
0x000000000009f128 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f148 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f168 : add edx, eax ; jl 0x9f189 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009e8cc : add edx, eax ; jmp r10
0x00000000000210b8 : add edx, eax ; jmp rdx
0x00000000000490b2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000e1267 : add edx, ecx ; jmp rdx
0x00000000000f6584 : add edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187fc5 : add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x0000000000187fb9 : add edx, esi ; inc eax ; add edx, esi ; jmp rax
0x0000000000187fa9 : add edx, esi ; jmp rax
0x00000000000c5265 : add edx, esi ; jmp rdx
0x00000000000bb885 : add edx, esi ; mov rax, rdx ; add rsp, 0x18 ; ret
0x0000000000133fe5 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a9c49 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001a2d82 : add esi, dword ptr [rbx + 0x47380e01] ; ret
0x0000000000137094 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000137546 : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001aff52 : add esi, dword ptr [rsi + 0x44380e04] ; ret
0x000000000012dd62 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000002a697 : add esi, dword ptr [rsi + rax + 0x5b] ; ret
0x000000000009edea : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee69 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004606b : add esi, eax ; jmp qword ptr [rax]
0x000000000002e8f2 : add esi, eax ; jmp rsi
0x000000000013bda3 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000001bc445 : add esi, ebp ; add al, byte ptr [rax] ; ret
0x00000000001af4d9 : add esi, ebp ; call qword ptr [rdi]
0x00000000001a5881 : add esi, ebp ; call qword ptr [rsi]
0x000000000015b843 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000142fa3 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000f6bbc : add esi, ebx ; ret
0x0000000000035f99 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000017084c : add esi, edi ; fadd st(3) ; ret
0x00000000000aacd9 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000033413 : add esi, edi ; jmp rsi
0x0000000000150f75 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000018800d : add esi, edx ; call qword ptr [rax]
0x0000000000188005 : add esi, edx ; call rax
0x0000000000187fed : add esi, edx ; jmp qword ptr [rax]
0x0000000000188009 : add esi, edx ; push rax ; add esi, edx ; call qword ptr [rax]
0x00000000000d728b : add esi, esi ; ret
0x000000000006e948 : add esi, esi ; ret 0x7420
0x000000000012eb38 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000088504 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013c3a6 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c7 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000003adae : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583e : add esp, 0x10 ; pop rbx ; ret
0x0000000000086a77 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b9ff1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e73f : add esp, 0x100 ; ret
0x000000000008b33d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000006ad23 : add esp, 0x1000 ; pop rbx ; ret
0x000000000006ad31 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x00000000000359dd : add esp, 0x108 ; ret
0x00000000000f826e : add esp, 0x120 ; pop rbx ; ret
0x0000000000035d8b : add esp, 0x140 ; pop rbx ; ret
0x00000000000353ab : add esp, 0x148 ; ret
0x0000000000120170 : add esp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fd3ed : add esp, 0x18 ; mov eax, edx ; ret
0x000000000006b316 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013ab46 : add esp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013c31c : add esp, 0x18 ; movzx eax, al ; ret
0x000000000009f44b : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012cac2 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000003b175 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab50 : add esp, 0x18 ; ret
0x00000000000cc262 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f7867 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000004a803 : add esp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b4 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc8 : add esp, 0x20 ; pop rbx ; ret
0x0000000000133b29 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7814 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8e : add esp, 0x28 ; jmp rax
0x00000000000206bd : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044c95 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad3 : add esp, 0x28 ; ret
0x000000000006ac51 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fc6c5 : add esp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000001219fa : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b84b : add esp, 0x30 ; pop rbx ; ret
0x0000000000121a29 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ce098 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c96a7 : add esp, 0x38 ; ret
0x0000000000035e0c : add esp, 0x40 ; pop rbx ; ret
0x000000000010a3c8 : add esp, 0x40 ; ret
0x00000000001338b5 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000105128 : add esp, 0x408 ; ret
0x000000000004a67c : add esp, 0x440 ; pop rbx ; ret
0x00000000000f8922 : add esp, 0x48 ; movzx eax, al ; ret
0x000000000012f6c7 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000125134 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9f82 : add esp, 0x48 ; ret
0x00000000000acb0c : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001407db : add esp, 0x510 ; xor eax, eax ; pop rbx ; ret
0x00000000000fc9ff : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7107 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76c0 : add esp, 0x60 ; pop rbx ; ret
0x00000000000e8a41 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013872c : add esp, 0x68 ; ret
0x0000000000136e20 : add esp, 0x70 ; pop rbx ; ret
0x0000000000105cfd : add esp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000054e4e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000759a0 : add esp, 0x80 ; mov eax, edx ; ret
0x000000000006ba61 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000007df30 : add esp, 0x80 ; mov rax, r8 ; ret
0x0000000000045383 : add esp, 0x80 ; pop rbx ; ret
0x000000000006b4b9 : add esp, 0x80 ; ret
0x0000000000039edf : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000358d3 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b99 : add esp, 0x90 ; pop rbx ; ret
0x0000000000036951 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209af : add esp, 0x98 ; ret
0x0000000000136b24 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfd : add esp, 0xa8 ; ret
0x00000000000bc606 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x000000000006b62d : add esp, 0xd0 ; mov eax, esi ; pop rbx ; ret
0x00000000000c7f3e : add esp, 0xd0 ; pop rbx ; ret
0x000000000003569a : add esp, 0xd0 ; ret
0x0000000000104f2e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf4 : add esp, 0xd8 ; ret
0x0000000000133023 : add esp, 8 ; add eax, 2 ; ret
0x000000000008d85d : add esp, 8 ; jmp rax
0x0000000000123e4d : add esp, 8 ; lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x00000000000500df : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043d : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021218 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c44 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77e : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009ed7d : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a7 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db28 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe34 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003a1d0 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859bf : add esp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a8cc : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc9 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f5a7 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b6 : add esp, 8 ; movzx eax, al ; ret
0x000000000012759a : add esp, 8 ; movzx eax, ax ; ret
0x000000000012e839 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fc0 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000032dc1 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021a31 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079158 : add esp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035133 : add esp, 8 ; ret
0x0000000000140621 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000013c414 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d51 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ea8fb : add esp, 8 ; xor eax, eax ; ret
0x00000000001b2e6c : add esp, dword ptr [rax + 0x200e0a01] ; ret
0x0000000000189e8c : add esp, dword ptr [rdi - 0xb] ; jmp qword ptr [rbx]
0x0000000000195395 : add esp, edi ; call rax
0x0000000000195435 : add esp, edi ; jmp qword ptr [rax]
0x0000000000195455 : add esp, edi ; jmp rax
0x000000000011cfa7 : add qword ptr [r11 + 0x460f09fb], r8 ; ret
0x00000000001ae33a : add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001b09fd : add qword ptr [r8], r8 ; adc byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0abd : add qword ptr [r8], r8 ; add byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0aa5 : add qword ptr [r8], r8 ; call 0x221b0022
0x00000000001b0ad5 : add qword ptr [r8], r8 ; sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0a8d : add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000001b0a15 : add qword ptr [r8], r8 ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b08f5 : add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0aed : add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000198bd5 : add qword ptr [r8], rax ; push rsp ; insd dword ptr [rdi], dx ; call rsp
0x000000000010de24 : add qword ptr [r9 - 0x7d], r9 ; ret 0x8408
0x0000000000023c9d : add qword ptr [rax - 0x7d], r9 ; ret 0x4d02
0x00000000001b09e5 : add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0985 : add qword ptr [rax], r8 ; cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0735 : add qword ptr [rax], r8 ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b09cd : add qword ptr [rax], r8 ; loopne 0x1b0a46 ; cmc ; jmp qword ptr [rcx]
0x00000000001b074d : add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b099d : add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b07c5 : add qword ptr [rax], r8 ; or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b090d : add qword ptr [rax], r8 ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b0925 : add qword ptr [rax], r8 ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b07f5 : add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b057d : add qword ptr [rax], rax ; adc byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x000000000011f1cc : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001b051d : add qword ptr [rax], rax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001b05f5 : add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000001b05c5 : add qword ptr [rax], rax ; pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001b05ad : add qword ptr [rax], rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000082178 : add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x00000000001b0052 : add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000168a8d : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x000000000009e8cb : add r10, rax ; jmp r10
0x000000000015b922 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b8b2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b842 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000014a230 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001466c4 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000d820d : add r8b, byte ptr [r8] ; add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3d01
0x0000000000123da1 : add r8b, byte ptr [r8] ; jne 0x123df7 ; mov eax, r8d ; ret
0x000000000009ea74 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e9e4 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000019b30d : add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x0000000000054f37 : add r8d, dword ptr [r8] ; add cl, bl ; in eax, -0x21 ; loopne 0x54ed2 ; ret 0xe680
0x0000000000143aa0 : add r9, qword ptr [rbp - 0x88] ; call rax
0x0000000000150f7a : add r9, r11 ; jmp r9
0x0000000000026e73 : add r9b, byte ptr [r8 + 0x39] ; ret
0x0000000000123485 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00000000000ed589 : add r9b, r13b ; ret
0x0000000000026e90 : add r9d, dword ptr [r8 + 0x39] ; ret
0x000000000014d3e2 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000168b13 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000aa999 : add rax, 1 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000abf40 : add rax, 1 ; ret
0x00000000000abf37 : add rax, 2 ; ret
0x00000000000abf50 : add rax, 3 ; ret
0x0000000000020be8 : add rax, qword ptr [0] ; ret
0x0000000000033e8f : add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000143db9 : add rax, qword ptr [rdx + 8] ; add rsp, 0x38 ; ret
0x00000000001436dd : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000020be7 : add rax, qword ptr fs:[0] ; ret
0x0000000000085549 : add rax, r13 ; jmp rax
0x000000000002ebbb : add rax, r14 ; jmp rax
0x000000000009f217 : add rax, r8 ; ret
0x000000000009ea34 : add rax, r9 ; jmp rax
0x00000000001163b6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000059822 : add rax, rcx ; jmp rax
0x000000000008e8f9 : add rax, rcx ; ret
0x000000000009f214 : add rax, rdi ; add rax, r8 ; ret
0x000000000008e8f6 : add rax, rdi ; add rax, rcx ; ret
0x00000000000c00b3 : add rax, rdi ; jmp rax
0x000000000008d45a : add rax, rdi ; ret
0x000000000014a60a : add rax, rdi ; sub rax, r8 ; ret
0x000000000014a85f : add rax, rdi ; sub rax, rdx ; ret
0x000000000002ec99 : add rax, rdx ; jmp rax
0x000000000008b8b5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000004da50 : add rax, rsi ; jmp rax
0x00000000000d043d : add rbx, 1 ; mov rdx, rax ; jmp 0xd03e6
0x000000000013a74d : add rbx, r12 ; call r14
0x00000000000d18f2 : add rcx, qword ptr [r8 - 0x7d] ; ret
0x0000000000047c95 : add rcx, r11 ; jmp rcx
0x000000000002be47 : add rcx, r8 ; jmp rcx
0x0000000000063888 : add rcx, rax ; jmp rcx
0x000000000003329b : add rcx, rdi ; jmp rcx
0x0000000000063e49 : add rcx, rdx ; jmp rcx
0x00000000000aac93 : add rcx, rsi ; jmp rcx
0x0000000000132d8c : add rdi, 0x10 ; jmp rcx
0x000000000012bf1e : add rdi, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012e0f9 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000135833 : add rdi, 0x58 ; jmp rcx
0x0000000000134f93 : add rdi, 0x68 ; jmp rcx
0x0000000000132216 : add rdi, 0xc8 ; jmp rcx
0x000000000009e913 : add rdi, 1 ; mov rax, rdi ; ret
0x00000000000d15ca : add rdi, 1 ; test dl, dl ; jne 0xd15ba ; ret
0x000000000009e924 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000009e937 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000172b2e : add rdi, qword ptr [r13 + 0x10] ; call r12
0x00000000000e1a4c : add rdi, r11 ; jmp rdi
0x00000000000208f3 : add rdi, rbp ; call rax
0x0000000000150f77 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000123f34 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000006caa1 : add rdi, rsi ; jmp rdi
0x00000000000c325c : add rdx, r8 ; jmp rdx
0x00000000000490b1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000009f117 : add rdx, rax ; jl 0x9f188 ; add rax, rdi ; ret
0x000000000009f116 : add rdx, rax ; jl 0x9f189 ; add rax, rdi ; ret
0x00000000000210b7 : add rdx, rax ; jmp rdx
0x00000000000e1266 : add rdx, rcx ; jmp rdx
0x00000000000c5264 : add rdx, rsi ; jmp rdx
0x0000000000133fe4 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002e8f1 : add rsi, rax ; jmp rsi
0x000000000013bda2 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000033412 : add rsi, rdi ; jmp rsi
0x0000000000088503 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000013c3a5 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000006f8c6 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000003adad : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583d : add rsp, 0x10 ; pop rbx ; ret
0x00000000000b9ff0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008e73e : add rsp, 0x100 ; ret
0x000000000006ad22 : add rsp, 0x1000 ; pop rbx ; ret
0x00000000000359dc : add rsp, 0x108 ; ret
0x00000000000f826d : add rsp, 0x120 ; pop rbx ; ret
0x0000000000035d8a : add rsp, 0x140 ; pop rbx ; ret
0x00000000000353aa : add rsp, 0x148 ; ret
0x000000000012016f : add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000fd3ec : add rsp, 0x18 ; mov eax, edx ; ret
0x000000000006b315 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000013ab45 : add rsp, 0x18 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000013c31b : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003b174 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4f : add rsp, 0x18 ; ret
0x00000000000cc261 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000004a802 : add rsp, 0x20 ; mov rax, r8 ; pop rbx ; ret
0x000000000006f1b3 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071cc7 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000f7813 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x0000000000020b8d : add rsp, 0x28 ; jmp rax
0x0000000000044c94 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000034ad2 : add rsp, 0x28 ; ret
0x000000000006ac50 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000fc6c4 : add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x00000000001219f9 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b84a : add rsp, 0x30 ; pop rbx ; ret
0x00000000000ce097 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c96a6 : add rsp, 0x38 ; ret
0x0000000000035e0b : add rsp, 0x40 ; pop rbx ; ret
0x000000000010a3c7 : add rsp, 0x40 ; ret
0x0000000000105127 : add rsp, 0x408 ; ret
0x000000000004a67b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000f8921 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000125133 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000c9f81 : add rsp, 0x48 ; ret
0x00000000000acb0b : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fc9fe : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000f7106 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76bf : add rsp, 0x60 ; pop rbx ; ret
0x000000000013872b : add rsp, 0x68 ; ret
0x0000000000136e1f : add rsp, 0x70 ; pop rbx ; ret
0x0000000000105cfc : add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x000000000007599f : add rsp, 0x80 ; mov eax, edx ; ret
0x0000000000045382 : add rsp, 0x80 ; pop rbx ; ret
0x000000000006b4b8 : add rsp, 0x80 ; ret
0x00000000000358d2 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000035b98 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000036950 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000000209ae : add rsp, 0x98 ; ret
0x0000000000136b23 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000036cfc : add rsp, 0xa8 ; ret
0x00000000000c7f3d : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000035699 : add rsp, 0xd0 ; ret
0x0000000000104f2d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000045cf3 : add rsp, 0xd8 ; ret
0x0000000000133022 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008d85c : add rsp, 8 ; jmp rax
0x00000000000500de : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000007043c : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000021217 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x0000000000045c43 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006b77d : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000009ed7c : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000326a6 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007db27 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bfe33 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003a1cf : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000859be : add rsp, 8 ; mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000013a8cb : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000077fc8 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000012f5a6 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000453b5 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000127599 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000012e838 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fbf : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000021a30 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079157 : add rsp, 8 ; pop rbx ; pop rbp ; sub rax, rdx ; ret
0x0000000000035132 : add rsp, 8 ; ret
0x0000000000140620 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000013c413 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000077d50 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ea8fa : add rsp, 8 ; xor eax, eax ; ret
0x000000000009449e : add sil, sil ; ret 0x7404
0x0000000000109993 : add word ptr [rax], 1 ; ret
0x0000000000198f45 : add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x00000000001096da : add word ptr [rdx + rax*2], 1 ; ret
0x00000000001a5e70 : and ah, 0xfc ; call qword ptr [rdx]
0x0000000000195701 : and ah, bh ; call rax
0x00000000001952dc : and ah, bl ; sti ; call qword ptr [rax]
0x0000000000198d81 : and ah, dh ; call rsp
0x000000000019df85 : and al, 0 ; add al, bh ; jno 0x19df7a ; call qword ptr [rax]
0x00000000000a32d1 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000019df2d : and al, 0 ; add byte ptr [rax], ah ; jno 0x19df22 ; call qword ptr [rcx]
0x0000000000096ce1 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000096c72 : and al, 0 ; je 0x96c89 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f76ed : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0x8348
0x00000000000f26d0 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000136ebb : and al, 0x10 ; call qword ptr [r10]
0x00000000000c8b10 : and al, 0x10 ; call rax
0x0000000000135b7f : and al, 0x10 ; call rcx
0x0000000000081a6a : and al, 0x10 ; call rdi
0x0000000000034f37 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x000000000010eea2 : and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x0000000000102df1 : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000074fe6 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000012bfea : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000010ed9e : and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000081953 : and al, 0x10 ; xor edi, edi ; call qword ptr [rax]
0x0000000000026a19 : and al, 0x14 ; jmp 0x26830
0x0000000000026a18 : and al, 0x14 ; jmp 0x26831
0x000000000007ef09 : and al, 0x14 ; pop r12 ; ret
0x000000000004305c : and al, 0x18 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x0000000000046dba : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x000000000008429b : and al, 0x18 ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000014365b : and al, 0x18 ; call 0x1f8ac
0x000000000003dfe4 : and al, 0x18 ; call 0x3c0a8
0x000000000012ca8a : and al, 0x18 ; call qword ptr [rax]
0x0000000000024073 : and al, 0x18 ; call r12
0x000000000002082c : and al, 0x18 ; call rax
0x0000000000132747 : and al, 0x18 ; call rcx
0x000000000012c7b9 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000137e20 : and al, 0x18 ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000009e8fd : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000081a65 : and al, 0x18 ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000021858 : and al, 0x18 ; mov r9, r14 ; call rbx
0x00000000000c92b1 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024367 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d02 : and al, 0x18 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000ad667 : and al, 0x18 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000038381 : and al, 0x18 ; mov rdi, r12 ; call r15
0x00000000000750c2 : and al, 0x18 ; mov rdi, r12 ; call rbx
0x00000000000ad917 : and al, 0x18 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x00000000000ad3af : and al, 0x18 ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000f0009 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0047
0x00000000000f0008 : and al, 0x18 ; mov rdx, rax ; jmp 0xf0048
0x000000000019d41c : and al, 0x19 ; add byte ptr [rax], al ; nop ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000136ccc : and al, 0x1c ; call qword ptr [r10]
0x000000000012c998 : and al, 0x1c ; call qword ptr [rax]
0x0000000000143765 : and al, 0x1f ; add byte ptr [rbp + 0x16], dh ; add rsp, 0x38 ; ret
0x00000000000e5c87 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000e3606 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f35e0 : and al, 0x20 ; call 0x1f8ac
0x0000000000081631 : and al, 0x20 ; call qword ptr [rax]
0x0000000000028abc : and al, 0x20 ; call r14
0x0000000000023e53 : and al, 0x20 ; call r15
0x00000000000819ad : and al, 0x20 ; call rax
0x00000000000ad07b : and al, 0x20 ; call rbx
0x000000000013254f : and al, 0x20 ; call rcx
0x00000000000accdb : and al, 0x20 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000012bf6a : and al, 0x20 ; mov qword ptr [rsp + 0x28], r9 ; call 0x1381f9
0x0000000000025110 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000002406e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000ba6ef : and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000001742e2 : and al, 0x25 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000183f24 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000003ce68 : and al, 0x28 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012bf6f : and al, 0x28 ; call 0x1381f4
0x000000000012bf6e : and al, 0x28 ; call 0x1381f5
0x00000000000335db : and al, 0x28 ; call 0x1f8a4
0x00000000000335da : and al, 0x28 ; call 0x1f8a5
0x000000000002436c : and al, 0x28 ; call rax
0x00000000000acbb0 : and al, 0x28 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000819a8 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000000000028ab7 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e4e : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000084fb3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000138064 : and al, 0x2a ; call qword ptr [rax]
0x000000000012c7be : and al, 0x2c ; call qword ptr [rax]
0x000000000004015f : and al, 0x30 ; add byte ptr [rcx + 0x39], cl ; ret 0x87e
0x000000000012cf2d : and al, 0x30 ; call qword ptr [rax]
0x0000000000024807 : and al, 0x30 ; call r12
0x0000000000025592 : and al, 0x30 ; call r14
0x0000000000025352 : and al, 0x30 ; call r15
0x0000000000024d07 : and al, 0x30 ; call rax
0x00000000000248bb : and al, 0x30 ; call rbx
0x0000000000038fe9 : and al, 0x30 ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000013c2a9 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000bb01e : and al, 0x30 ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad55c : and al, 0x30 ; mov rdi, rbp ; call rbx
0x000000000005d9df : and al, 0x31 ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000d5271 : and al, 0x31 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000282b1 : and al, 0x38 ; call r14
0x0000000000025b5a : and al, 0x38 ; call r15
0x000000000002804a : and al, 0x38 ; call rbx
0x0000000000112b57 : and al, 0x38 ; jmp 0x112b21
0x0000000000112b56 : and al, 0x38 ; jmp 0x112b22
0x0000000000143649 : and al, 0x38 ; jne 0x143630 ; add rsp, 0x48 ; ret
0x0000000000143648 : and al, 0x38 ; jne 0x143631 ; add rsp, 0x48 ; ret
0x00000000000fdd15 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000335d6 : and al, 0x38 ; mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a9
0x0000000000025f31 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000024802 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534d : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b6 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000102684 : and al, 0x39 ; ret
0x000000000009ec46 : and al, 0x39 ; ret 0x2574
0x0000000000137e25 : and al, 0x3a ; call qword ptr [rax]
0x00000000000e1c6a : and al, 0x40 ; add rax, rdx ; jmp rax
0x000000000002686a : and al, 0x40 ; call rbx
0x0000000000026caa : and al, 0x40 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000127a71 : and al, 0x40 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000282ac : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b55 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028045 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000012a4d5 : and al, 0x41 ; call rsp
0x00000000000fd3eb : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cc272 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f690e : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000006f1b2 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a365 : and al, 0x48 ; add esp, 0x38 ; ret
0x000000000010a3c6 : and al, 0x48 ; add esp, 0x40 ; ret
0x00000000000845e3 : and al, 0x48 ; call rax
0x00000000001434dd : and al, 0x48 ; mov eax, dword ptr [rax + 0x128] ; jmp rax
0x00000000000ac674 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026865 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000bbdad : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x0000000000096aec : and al, 0x48 ; test esi, esi ; jne 0x96b03 ; jmp 0x96abd
0x00000000001b051c : and al, 0x4a ; add dword ptr [rax], eax ; mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x00000000001a0a1c : and al, 0x4f ; add byte ptr [rax], al ; rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000000819e5 : and al, 0x50 ; add al, ch ; ret
0x000000000007ef04 : and al, 0x5d ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x000000000012d4fb : and al, 0x60 ; call rax
0x000000000019b418 : and al, 0x66 ; cli ; call rsp
0x00000000000fa397 : and al, 0x68 ; add ecx, dword ptr [rcx + 0xf30244c] ; xchg eax, esp ; ret 0x8445
0x00000000000bbdb2 : and al, 0x68 ; call r12
0x00000000000848eb : and al, 0x68 ; call rax
0x0000000000085c7b : and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000019a670 : and al, 0x69 ; clc ; call rsp
0x00000000000e3530 : and al, 0x6c ; shl rsi, 2 ; call 0x1f7f8
0x00000000000e352f : and al, 0x6c ; shl rsi, 2 ; call 0x1f7f9
0x00000000001b291c : and al, 0x6e ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001439ed : and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000ad81d : and al, 0x70 ; mov rdi, r12 ; call rbx
0x00000000000ad293 : and al, 0x70 ; mov rdi, rbp ; call rbx
0x00000000000c1ceb : and al, 0x71 ; jmp 0xbff1f
0x000000000019b888 : and al, 0x73 ; sti ; call rsp
0x00000000000f5cbd : and al, 0x74 ; xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x00000000001a381c : and al, 0x7d ; add byte ptr [rax], al ; sar byte ptr [rdi], 1 ; in eax, dx ; jmp qword ptr [rax]
0x000000000003ea8c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5c12 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000198120 : and al, 0x81 ; out dx, eax ; jmp rsp
0x00000000000df11f : and al, 0x83 ; ret 0x4801
0x00000000000b67c3 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b6f6b : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000821f6 : and al, 0x89 ; ret 0xb48b
0x00000000000f1f2f : and al, 0x89 ; ret 0xe883
0x0000000000082176 : and al, 0x8d ; add qword ptr [rcx], rax ; ror byte ptr [rax - 0x73], 0x54 ; ret
0x0000000000023ff2 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000198e40 : and al, 0x91 ; hlt ; jmp rsp
0x00000000000e0793 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x000000000018888c : and al, 0x94 ; call rdx
0x00000000001981d8 : and al, 0x94 ; out dx, eax ; call rsp
0x00000000001a521c : and al, 0x97 ; add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x0000000000029a6d : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000000b5774 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000db0a9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000db210 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000e06fb : and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000000db36c : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000000f7645 : and al, 0xa8 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000001a661c : and al, 0xab ; add byte ptr [rax], al ; loopne 0x1a6696 ; out dx, al ; jmp rdx
0x00000000000fde12 : and al, 0xb0 ; ret
0x000000000012fb07 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000008e648 : and al, 0xba ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000003583b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003ab4d : and al, 0xc ; add rsp, 0x18 ; ret
0x0000000000143790 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000f6aa7 : and al, 0xc ; call rax
0x00000000000021d5 : and al, 0xc7 ; jno 0x2226 ; ret 0x1dd4
0x00000000000e06e9 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000013c80b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000019a8c8 : and al, 0xdb ; clc ; call rsp
0x0000000000071868 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000019a098 : and al, 0xe3 ; idiv edi ; ret 1
0x000000000019a0e8 : and al, 0xe5 ; idiv edi ; push rsp ; ret
0x00000000000fb511 : and al, 0xe8 ; cdq ; ret
0x0000000000034f9c : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x00000000000369eb : and al, 0xe8 ; jmp rsi
0x0000000000035009 : and al, 0xe8 ; ret
0x000000000004a218 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000035027 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035005 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000350c7 : and al, 0xf0 ; mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bb8f6 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000bb8fc : and al, 0xf0 ; ret
0x00000000001a92e1 : and al, 0xf1 ; jmp rcx
0x00000000001ab0d9 : and al, 0xf2 ; jmp qword ptr [rcx]
0x00000000001989e1 : and al, 0xf3 ; jmp rsp
0x00000000000cda9a : and al, 0xf3 ; ret
0x0000000000199351 : and al, 0xf6 ; call rsp
0x000000000019a4a1 : and al, 0xf8 ; jmp rsp
0x00000000000945a6 : and al, 0xf8 ; jne 0x94482 ; ret
0x000000000004a1d1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a1d7 : and al, 0xf8 ; ret
0x0000000000198288 : and al, 0xfb ; out dx, eax ; call rsp
0x00000000001956cd : and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000004a18b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000004a191 : and al, 0xfc ; ret
0x00000000000351a7 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x00000000000351ab : and al, 0xfe ; ret
0x00000000000bf1e6 : and al, 1 ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000019ae65 : and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x00000000001befd0 : and al, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000037304 : and al, 6 ; mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000000a6708 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000ba006 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003afec : and al, 8 ; add rsp, 0x18 ; ret
0x000000000012e667 : and al, 8 ; call qword ptr [rax]
0x0000000000089222 : and al, 8 ; call qword ptr [rdx]
0x000000000010eda3 : and al, 8 ; call rax
0x0000000000102d08 : and al, 8 ; call rbx
0x000000000012d4df : and al, 8 ; call rcx
0x000000000003505a : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000013b46f : and al, 8 ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000001fc01 : and al, 8 ; mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006de25 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000013b5ac : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x000000000011ff1b : and al, 8 ; mov rdi, r13 ; call r12
0x000000000013ab6f : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000037d66 : and al, 8 ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x00000000000391a6 : and al, 8 ; mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000034f3b : and al, 8 ; ret
0x00000000000cc39c : and al, 8 ; test rax, rax ; je 0xcc3ac ; call rax
0x00000000000cc39b : and al, 8 ; test rax, rax ; je 0xcc3ad ; call rax
0x000000000013c2ae : and al, 8 ; xor eax, eax ; call rdx
0x00000000001952c4 : and al, ah ; sti ; jmp qword ptr [rax]
0x00000000001952f4 : and al, bl ; sti ; push rax ; fsincos ; call rax
0x0000000000034b1e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000000000035176 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000daf2d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00000000001adcfd : and al, byte ptr [rcx] ; add al, ah ; xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x000000000019865d : and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], al ; jmp rsp
0x0000000000104a8a : and al, byte ptr [rdi + 0x3948fffa] ; ret
0x0000000000089a6a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000013e1a3 : and al, ch ; call qword ptr [rsi]
0x000000000002de32 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002de52 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002dd92 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002de12 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002dd32 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ddd2 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002dd72 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ddb2 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000005683e : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x0000000000002f98 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000195ed8 : and bh, byte ptr [rsi - 4] ; call qword ptr [rdx + 0x12fffc7d]
0x000000000019b0b9 : and bh, dl ; call rsp
0x00000000000a6ce7 : and bl, al ; nop dword ptr [rax] ; ret
0x000000000010e70f : and bl, ch ; ret
0x000000000003542f : and bl, dh ; ret
0x00000000001108c0 : and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000076b8a : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000a9f66 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000007b1a4 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x0000000000110a3d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000087a3b : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000010f42d : and byte ptr [rax + 0x38], al ; cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10f44d
0x00000000001108c1 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000080249 : and byte ptr [rax + 0x39], cl ; ret 0x820f
0x000000000004ae2c : and byte ptr [rax + 1], cl ; ret
0x000000000009f146 : and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000abc9f : and byte ptr [rax + rax], cl ; ret
0x0000000000194f80 : and byte ptr [rax - 0x5ecf0003], 0xfd ; jmp qword ptr [rax]
0x0000000000108a5b : and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x0000000000025111 : and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000bbe72 : and byte ptr [rax - 0x75], cl ; je 0xbbea3 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000081f03 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000076b8b : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000f3246 : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000003a68a : and byte ptr [rax - 0x77], cl ; enter 0x948, -0x30 ; ret
0x000000000006dfe8 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008964b : and byte ptr [rax - 0x77], cl ; jae 0x89661 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003b463 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000c0601 : and byte ptr [rax - 0x77], cl ; ret 0x1e74
0x0000000000141022 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000beb66 : and byte ptr [rax - 0x77], cl ; ret 0x4eb
0x000000000004698c : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000119605 : and byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000022d04 : and byte ptr [rax - 0x77], cl ; ret 0xee75
0x000000000002c374 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2c388 ; call rax
0x0000000000022b96 : and byte ptr [rax - 0x7d], cl ; ret
0x00000000000789d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000195b18 : and byte ptr [rax - 4], bl ; call qword ptr [rax + 0x10fffc57]
0x0000000000195700 : and byte ptr [rax], 0xfc ; call rax
0x00000000000ec980 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8949
0x00000000000ebae6 : and byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret 0x8b48
0x00000000000cdadb : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000230ac : and byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call 0x8f3b9
0x00000000000aacbc : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000cdac0 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001953b0 : and byte ptr [rax], al ; cld ; jmp rax
0x0000000000126a3a : and byte ptr [rax], al ; jmp 0x126a03
0x00000000000a7e1c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a9f67 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000f2adc : and byte ptr [rbp + 0x31], al ; in al, -0x18 ; ret
0x00000000001386ae : and byte ptr [rbp + 0x5b0d74c0], al ; pop rbp ; pop r12 ; ret
0x00000000000d6d6c : and byte ptr [rbp - 0x3a7cfeaf], cl ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d5dac : and byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000032fc8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006f1b6 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019d0cd : and byte ptr [rbx + 0xa410204], al ; ret
0x00000000001a1fcd : and byte ptr [rbx + 0xa470204], al ; ret
0x00000000001a4215 : and byte ptr [rbx + 0xa4d0204], al ; ret
0x00000000001ac9bd : and byte ptr [rbx + 0xa7e0204], al ; ret
0x000000000005a2af : and byte ptr [rbx - 0x109743], al ; call qword ptr [rax]
0x000000000004dc5a : and byte ptr [rbx - 0x4ef43], al ; call qword ptr [rax]
0x000000000006e0d9 : and byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001b11a0 : and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000195408 : and byte ptr [rbx], cl ; cld ; jmp qword ptr [rax]
0x000000000002981c : and byte ptr [rcx + 0x39], cl ; ret
0x000000000007b1a5 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x000000000019fca6 : and byte ptr [rcx + 0xa], al ; ret
0x000000000012bf6b : and byte ptr [rcx + rcx*4 + 0x4c], cl ; and al, 0x28 ; call 0x1381f8
0x000000000004a805 : and byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000000ba6f0 : and byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call rbx
0x000000000019df30 : and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x000000000004a215 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000013cf88 : and byte ptr [rcx - 0x75], cl ; push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000022c8c : and byte ptr [rcx - 0x77], cl ; ret 0xee75
0x0000000000195e10 : and byte ptr [rcx - 0x786f0004], al ; cld ; jmp qword ptr [rax]
0x0000000000194eb0 : and byte ptr [rcx - 5], cl ; inc dword ptr [rax] ; sti ; jmp rax
0x00000000001b2950 : and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001adbbd : and byte ptr [rcx], al ; add al, ah ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adbd5 : and byte ptr [rcx], al ; add al, bh ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001adb75 : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001adb5d : and byte ptr [rcx], al ; add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000f8270 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000195404 : and byte ptr [rcx], cl ; cld ; jmp qword ptr [rax]
0x0000000000133b2b : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c76e8 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000175824 : and byte ptr [rdi - 0x15], ah ; call qword ptr [rax]
0x000000000019bcc0 : and byte ptr [rdi - 0x18], cl ; call qword ptr [rcx]
0x000000000019608c : and byte ptr [rdi - 4], dh ; inc eax ; pop rcx ; cld ; jmp rax
0x000000000002de15 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000022c79 : and byte ptr [rdi], cl ; test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a69d9 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x0000000000022d78 : and byte ptr [rdi], cl ; test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000170910 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000126d00 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x93c
0x00000000000fea4d : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd108
0x00000000000fe9ec : and byte ptr [rdi], cl ; xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001ab0f0 : and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001aa9a0 : and byte ptr [rdx], cl ; call rsi
0x000000000016e4aa : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001ba6bd : and byte ptr [rsi + rcx + 0x18], ah ; ret
0x00000000001a0735 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000000d7cd9 : and byte ptr [rsi - 0x15], dh ; ret 0x9066
0x0000000000002c0e : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001a0680 : and byte ptr [rsi], 0xeb ; call qword ptr [rcx]
0x0000000000194e34 : and byte ptr [rsi], dl ; sti ; call qword ptr [rax]
0x00000000000ff2e1 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000001adb5c : and byte ptr fs:[rcx], al ; add byte ptr [rax - 0x6d], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000abf32 : and ch, 0xf ; je 0xabf59 ; add rax, 2 ; ret
0x00000000001951ec : and ch, 0xfb ; call qword ptr [rax]
0x0000000000198ef1 : and ch, dh ; jmp rsp
0x00000000000abf1d : and cl, 0xf ; je 0xabf45 ; ret
0x000000000000395a : and cl, ah ; ret
0x0000000000047254 : and cl, byte ptr [rax - 0x7d] ; ret
0x0000000000094f88 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008eccd : and cl, byte ptr [rcx - 0x77] ; ret
0x00000000001195c5 : and cl, byte ptr [rcx - 0x7d] ; ret 0x4104
0x0000000000051158 : and cl, ch ; ret 0xfffa
0x00000000001989b9 : and dh, bl ; jmp rsp
0x00000000001b29e1 : and dh, dh ; jmp qword ptr [rsi]
0x00000000000dc5af : and dh, dh ; ret
0x000000000008f2f7 : and dh, dh ; ret 0x7504
0x00000000001aafd1 : and dh, dl ; jmp qword ptr [rcx]
0x000000000005683d : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000001952c8 : and dl, ah ; sti ; jmp qword ptr [rax]
0x0000000000195a08 : and dl, byte ptr [rdx - 4] ; call qword ptr [rdx + 0x22fffc51]
0x00000000000d2f37 : and dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000004fff1 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000185a42 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000072cbf : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000006f779 : and dword ptr [rcx + 0x415d5bd8], ecx ; pop rsp ; ret
0x00000000001240d6 : and dword ptr [rcx - 0xa], eax ; ret
0x0000000000042203 : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000b0f2b : and dword ptr [rcx], esi ; ror byte ptr [rax + 1], cl ; ret 0x9e74
0x0000000000035f66 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000077ef0 : and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000360c8 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000104683 : and dword ptr [rdx - 0x74b6000f], esi ; cmp al, 0x24 ; call rbx
0x000000000012668a : and dword ptr [rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x000000000008167b : and dword ptr [rip + 0x394d0034], edi ; ret 0x8948
0x0000000000182af9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000a680b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000185a41 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000174566 : and eax, 0 ; add bl, dh ; ret
0x0000000000020beb : and eax, 0 ; ret
0x00000000000fc2d3 : and eax, 0x100f ; ret
0x000000000017431d : and eax, 0x1740025 ; ret
0x000000000003518a : and eax, 0x200 ; ret
0x0000000000140e8b : and eax, 0x281ab0 ; ret
0x00000000001073d4 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x00000000000cd226 : and eax, 0x2d0 ; ret
0x0000000000020b88 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000008d857 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x000000000002084d : and eax, 0x30 ; call rax
0x0000000000039fc9 : and eax, 0x30 ; call rdx
0x0000000000035322 : and eax, 0x30 ; jmp rax
0x000000000002f6d3 : and eax, 0x30 ; mov rdi, r13 ; call rax
0x000000000004d398 : and eax, 0x30 ; xor esi, esi ; call rax
0x00000000000aac1d : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000aac3d : and eax, 0x3fc00 ; ret
0x00000000000aabfc : and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000001a35ec : and eax, 0x4000001 ; ret 0x18f
0x00000000001742e3 : and eax, 0x5be17500 ; ret
0x000000000002df22 : and eax, 0x7f ; ret
0x00000000000aac70 : and eax, 0x7ff80000 ; ret
0x0000000000034b44 : and eax, 0x80 ; ret
0x0000000000034c07 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000077402 : and eax, 0x804 ; ret
0x00000000000fea0d : and eax, 0x83489066 ; ret 0x3c01
0x00000000000d95d9 : and eax, 0x8348d231 ; ret 0x4801
0x00000000000f0ecf : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000812c3 : and eax, 0x950f4100 ; ret
0x0000000000115117 : and eax, 0xc ; cmp eax, 4 ; je 0x115128 ; ret
0x00000000001152e8 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000006d360 : and eax, 0xe889fffb ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174575 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000107511 : and eax, 0xfff ; or eax, edi ; ret
0x00000000001193dd : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x0000000000119378 : and eax, 0xffffff ; ret
0x0000000000122fe3 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000101e1f : and eax, 1 ; jmp 0x101deb
0x00000000000d72b8 : and eax, 1 ; pop rbx ; ret
0x000000000002ded2 : and eax, 1 ; ret
0x00000000000d71b8 : and eax, 2 ; add eax, 8 ; ret
0x000000000002dd52 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d7204 : and eax, 2 ; ret
0x000000000004846c : and eax, 2 ; sub eax, 1 ; ret
0x000000000002ddf2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002dd12 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000034e74 : and eax, 8 ; ret
0x000000000013de52 : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000d99ca : and eax, dword ptr [rbx - 0x7cb7fe3f] ; ret
0x00000000001adee5 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ade9d : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001adeb5 : and eax, dword ptr [rcx] ; add byte ptr [rax], bl ; wait ; hlt ; jmp qword ptr [rcx]
0x0000000000168bb9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000036558 : and eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000002d17 : and eax, ebp ; clc ; ret
0x000000000019a469 : and eax, edi ; jmp rsp
0x0000000000034852 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000034792 : and eax, edx ; ret
0x00000000000347e0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000002e0ed : and eax, esi ; ret
0x0000000000072cc0 : and ebp, edi ; pop rbx ; ret
0x00000000001150b2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x1150c5 ; ret
0x00000000000d72ff : and ebx, 8 ; je 0xd72a0 ; pop rbx ; ret
0x000000000003afb8 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x000000000016fa25 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000016f158 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000758c0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000802cb : and ecx, dword ptr [rax + 0x39] ; ret
0x00000000000f07eb : and ecx, dword ptr [rax - 0x75] ; je 0xf081c ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012cc4e : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000008635c : and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000007ef55 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000007cc4c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x0000000000127806 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2c3c
0x00000000000ff929 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x00000000000ff982 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000012782d : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x0000000000196811 : and ecx, ebp ; call rsp
0x000000000002df32 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000759b3 : and edx, 1 ; mov eax, edx ; ret
0x0000000000002bf9 : and edx, esp ; bswap ebx ; clc ; ret
0x000000000004a1ee : and esi, 0xe0837fff ; jg 0x4a207 ; ret 0x5488
0x0000000000081a88 : and esi, dword ptr [rax + rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000001ab049 : and esi, edx ; jmp qword ptr [rcx]
0x00000000001b2921 : and esi, esi ; jmp qword ptr [rsi]
0x000000000018902c : and esp, eax ; call qword ptr [rsi]
0x0000000000195705 : and esp, edi ; jmp qword ptr [rax]
0x0000000000035f65 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000360c7 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000081a87 : and r14d, dword ptr [r8 + rax] ; xor edi, edi ; call qword ptr [rax]
0x0000000000036557 : and rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000034851 : and rax, rdx ; movq xmm0, rax ; ret
0x00000000001b2c38 : and rsi, rsi ; jmp qword ptr [rsi]
0x00000000001b2a10 : and sil, sil ; jmp qword ptr [rsi]
0x0000000000034bcb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x0000000000034bc8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000965aa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008eb30 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008eb40 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb50 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008eb20 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000008ea6f : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008f825 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000008b756 : bsf eax, edx ; ret
0x000000000008b8b2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000968c0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008b7a2 : bsf rax, rdx ; ret
0x000000000009f211 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008d457 : bsr eax, eax ; add rax, rdi ; ret
0x000000000009f0e0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000009f0f0 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f100 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008d6db : bsr eax, esi ; add rax, rdi ; ret
0x000000000008d5e9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d4e5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008d456 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008d6da : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008d5e8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008d4e4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000013595d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000119352 : bswap eax ; ret
0x0000000000002bfb : bswap ebx ; clc ; ret
0x0000000000064055 : call 0x11064057
0x0000000000064582 : call 0x11064584
0x0000000000064d3c : call 0x11064d3e
0x0000000000065126 : call 0x11065128
0x0000000000066b8b : call 0x11066b8d
0x000000000006903b : call 0x1106903d
0x000000000006a04f : call 0x1106a051
0x00000000001ab318 : call 0x111aa555
0x0000000000088e1e : call 0x115042
0x000000000005ae28 : call 0x117122
0x000000000011a9aa : call 0x12a4f8
0x0000000000132fee : call 0x12f2c2
0x00000000001a85f8 : call 0x131a7654
0x00000000001a8628 : call 0x131a7684
0x00000000001a8658 : call 0x131a76b4
0x00000000001a8688 : call 0x131a76e4
0x00000000001a86b8 : call 0x131a7714
0x00000000001aced8 : call 0x131ac2ba
0x00000000001ba168 : call 0x131b996f
0x000000000012befc : call 0x1381f2
0x0000000000035f40 : call 0x140ca753
0x00000000001205b6 : call 0x144aa7
0x000000000019d128 : call 0x1819ba38
0x00000000000283a9 : call 0x1c506f9
0x00000000000e3536 : call 0x1f7f2
0x0000000000023659 : call 0x1f8a2
0x00000000000f35e2 : call 0x1f8aa
0x00000000000346c0 : call 0x1f8ae
0x00000000000e094b : call 0x1f8b0
0x0000000000077b53 : call 0x1f8b1
0x00000000000f3fad : call 0x2027b
0x000000000004d5bc : call 0x2104d5be
0x000000000004dbeb : call 0x2104dbed
0x000000000004dc99 : call 0x2104dc9b
0x000000000004e0e1 : call 0x2104e0e3
0x000000000004e0f0 : call 0x2104e0f2
0x000000000004f9b4 : call 0x2104f9b6
0x000000000004fb2c : call 0x2104fb2e
0x00000000001a85c8 : call 0x211a7624
0x00000000001aad88 : call 0x221a9fa9
0x00000000001ade88 : call 0x221ad32a
0x00000000001af968 : call 0x221aee8e
0x00000000001b0aa8 : call 0x221b001f
0x00000000000947b4 : call 0x247dd30d
0x00000000001a3c58 : call 0x271a29a6
0x00000000001b2bd8 : call 0x271b2202
0x00000000001b2a88 : call 0x271b23a8
0x00000000001b2ab8 : call 0x271b23d8
0x00000000001b2ae8 : call 0x271b2408
0x00000000001b2b18 : call 0x271b2438
0x00000000001b2b48 : call 0x271b2468
0x00000000001b2b78 : call 0x271b2498
0x00000000001a36e8 : call 0x281a242c
0x00000000001acb98 : call 0x281abf5c
0x0000000000021958 : call 0x2dc42
0x000000000011238b : call 0x2e622
0x000000000005fabe : call 0x3bd42
0x000000000003dfe6 : call 0x3c0a6
0x00000000000dbd34 : call 0x42d0467d
0x00000000000dbeac : call 0x42d047f5
0x00000000000dbd84 : call 0x43d046cd
0x00000000000dbefc : call 0x43d04845
0x00000000000b05c3 : call 0x4ccd9ada
0x00000000000b2d8b : call 0x4ccdc1a2
0x00000000000b5a6b : call 0x4ccdef82
0x0000000000076a44 : call 0x4d177
0x000000000015aeaa : call 0x4f94bea8
0x000000000015aea9 : call 0x4f94bea9
0x000000000015d97a : call 0x4f94e978
0x000000000015d979 : call 0x4f94e979
0x000000000016049a : call 0x4f951498
0x0000000000160499 : call 0x4f951499
0x00000000000e45a9 : call 0x66d0ceb9
0x00000000000e4b07 : call 0x66d0d417
0x00000000000e4c69 : call 0x66d0d579
0x0000000000065d5f : call 0x71fd2
0x00000000000cd98d : call 0x750cda96
0x000000000004b517 : call 0x777f2
0x000000000005f111 : call 0x7b3a2
0x0000000000080fe1 : call 0x7d282
0x0000000000085893 : call 0x81b82
0x00000000000869a4 : call 0x82bd2
0x00000000000bda2d : call 0x89d12
0x000000000004f2b0 : call 0x8b5a2
0x000000000009f483 : call 0x8b722
0x00000000000e4fe0 : call 0x8f244
0x00000000000230b3 : call 0x8f3b2
0x00000000000ba29b : call 0x8f3b6
0x00000000000de474 : call 0x94476
0x00000000000202f6 : call 0xaaa66
0x00000000000203fa : call 0xaab86
0x00000000000bd136 : call 0xbdfa8
0x00000000000f63fe : call 0xcd247
0x00000000000f642b : call 0xcd267
0x00000000000f4007 : call 0xf0302
0x00000000001079ad : call 0xf1079b6
0x00000000001079cd : call 0xf1079d6
0x0000000000100063 : call 0xf17e0f1
0x0000000000100bfa : call 0xf17ec88
0x00000000000fb6a3 : call 0xf78b2
0x000000000011e489 : call 0xf78b6
0x00000000000bbf92 : call 0xfcdf7b9
0x0000000000100d7a : call 0xfcf92
0x000000000003508d : call 0xffffffff816a131d
0x000000000011eb69 : call 0xffffffff835aeb74
0x00000000001230a7 : call 0xffffffff895bf337
0x00000000000bbac9 : call 0xffffffff89cde3f0
0x00000000000bbc3a : call 0xffffffff89cde561
0x00000000000bbe33 : call 0xffffffff89cde75a
0x0000000000183563 : call 0xffffffffaedad3d9
0x00000000000bb46a : call 0xffffffffc234fcb2
0x0000000000051feb : call 0xffffffffc23e67f5
0x000000000008231b : call 0xffffffffc2416b2c
0x000000000012e965 : call 0xffffffffc287a9f3
0x0000000000047641 : call 0xffffffffc28db769
0x0000000000082c38 : call 0xffffffffc2917451
0x00000000000ce0bc : call 0xffffffffc295e0c7
0x00000000000f0d1b : call 0xffffffffc2985525
0x000000000010f66f : call 0xffffffffc29a4279
0x000000000012364e : call 0xffffffffc29b3cca
0x0000000000130204 : call 0xffffffffc29c4a15
0x00000000000d647d : call 0xffffffffc2e173ec
0x00000000000a6644 : call 0xffffffffc30a6654
0x00000000000aa836 : call 0xffffffffc30f358c
0x00000000000aa84f : call 0xffffffffc30f35a5
0x00000000000470a0 : call 0xffffffffc33db8aa
0x000000000010e520 : call 0xffffffffc34a2d2a
0x000000000010e7bc : call 0xffffffffc34a2fc6
0x00000000000ad15c : call 0xffffffffc36712c2
0x0000000000110138 : call 0xffffffffc39a4d42
0x000000000016b975 : call 0xffffffffc39cc88e
0x000000000016c9f5 : call 0xffffffffc39cd90e
0x00000000000372fd : call 0xffffffffc3b2824e
0x000000000008f967 : call 0xffffffffc3d982b8
0x0000000000089a77 : call 0xffffffffc40123c8
0x000000000008b277 : call 0xffffffffc4013bc8
0x00000000000b30ec : call 0xffffffffc74478f9
0x00000000001b6618 : call 0xffffffffd21b5d4f
0x00000000000c732d : call 0xffffffffde967337
0x0000000000034f57 : call 0xffffffffe28511e7
0x000000000005cba9 : call 0xfffffffffa0e517b
0x000000000010e751 : call 0xffffffffff962f5e
0x0000000000136cce : call qword ptr [r10]
0x000000000007d8af : call qword ptr [r15]
0x0000000000194f13 : call qword ptr [rax + 0x10fffb74]
0x0000000000194f1b : call qword ptr [rax + 0x10fffb77]
0x0000000000194f23 : call qword ptr [rax + 0x10fffb7a]
0x0000000000194f2b : call qword ptr [rax + 0x10fffb7d]
0x0000000000194f33 : call qword ptr [rax + 0x10fffb80]
0x0000000000194f3b : call qword ptr [rax + 0x10fffb83]
0x0000000000194f43 : call qword ptr [rax + 0x10fffb86]
0x0000000000195bd3 : call qword ptr [rax + 0x10fffc35]
0x0000000000195b97 : call qword ptr [rax + 0x10fffc36]
0x0000000000195bdb : call qword ptr [rax + 0x10fffc38]
0x0000000000195b9f : call qword ptr [rax + 0x10fffc39]
0x0000000000195be3 : call qword ptr [rax + 0x10fffc3b]
0x0000000000195ba7 : call qword ptr [rax + 0x10fffc3c]
0x0000000000195beb : call qword ptr [rax + 0x10fffc3e]
0x0000000000195baf : call qword ptr [rax + 0x10fffc3f]
0x0000000000195bf3 : call qword ptr [rax + 0x10fffc41]
0x0000000000195bb7 : call qword ptr [rax + 0x10fffc42]
0x0000000000195bfb : call qword ptr [rax + 0x10fffc44]
0x0000000000195bbf : call qword ptr [rax + 0x10fffc45]
0x0000000000195c03 : call qword ptr [rax + 0x10fffc47]
0x0000000000195bc7 : call qword ptr [rax + 0x10fffc48]
0x0000000000195b3b : call qword ptr [rax + 0x10fffc53]
0x0000000000195b33 : call qword ptr [rax + 0x10fffc54]
0x0000000000195b2b : call qword ptr [rax + 0x10fffc55]
0x0000000000195b23 : call qword ptr [rax + 0x10fffc56]
0x0000000000195b1b : call qword ptr [rax + 0x10fffc57]
0x0000000000195b53 : call qword ptr [rax + 0x10fffc58]
0x0000000000196513 : call qword ptr [rax + 0x10fffca4]
0x00000000001953ab : call qword ptr [rax + 0x20fffc0d]
0x0000000000195927 : call qword ptr [rax + 0x20fffc5f]
0x0000000000195c3b : call qword ptr [rax + 0x20fffc83]
0x0000000000195e13 : call qword ptr [rax + 0x20fffc87]
0x0000000000196133 : call qword ptr [rax + 0x20fffcaa]
0x0000000000195077 : call qword ptr [rax + 0x20fffda6]
0x0000000000073ed7 : call qword ptr [rax + 0x80]
0x00000000001956f3 : call qword ptr [rax - 0x1f0003e4]
0x000000000019569f : call qword ptr [rax - 0x1f0003eb]
0x0000000000195527 : call qword ptr [rax - 0x1f000410]
0x00000000001954d3 : call qword ptr [rax - 0x1f000417]
0x0000000000195347 : call qword ptr [rax - 0x1f00042e]
0x000000000019535b : call qword ptr [rax - 0x1f00043c]
0x0000000000194f03 : call qword ptr [rax - 0x1f000493]
0x0000000000189a03 : call qword ptr [rax - 0x1f000afb]
0x00000000000348fc : call qword ptr [rax - 0x3d]
0x00000000001953a7 : call qword ptr [rax - 0x6f0003f5]
0x000000000007f72e : call qword ptr [rax - 0x72b71077]
0x0000000000188053 : call qword ptr [rax]
0x0000000000181d67 : call qword ptr [rbx - 0x18001533]
0x000000000017433e : call qword ptr [rbx]
0x0000000000194fc3 : call qword ptr [rcx + 0x31fffda8]
0x00000000000515ce : call qword ptr [rcx]
0x0000000000196a6b : call qword ptr [rdi + rbp*2 + 0x7fe40000]
0x000000000019ada3 : call qword ptr [rdi + rbx + 2]
0x000000000007d8b0 : call qword ptr [rdi]
0x0000000000195efb : call qword ptr [rdx + 0x12fffc79]
0x0000000000195ef3 : call qword ptr [rdx + 0x12fffc7a]
0x0000000000195eeb : call qword ptr [rdx + 0x12fffc7b]
0x0000000000195ee3 : call qword ptr [rdx + 0x12fffc7c]
0x0000000000195edb : call qword ptr [rdx + 0x12fffc7d]
0x0000000000195a0b : call qword ptr [rdx + 0x22fffc51]
0x00000000001957fb : call qword ptr [rdx + 0x22fffc5d]
0x0000000000195ce7 : call qword ptr [rdx + 0x22fffc85]
0x00000000001961df : call qword ptr [rdx + 0x22fffcac]
0x0000000000194f73 : call qword ptr [rdx]
0x0000000000034df4 : call qword ptr [rip - 0x3dabf100]
0x0000000000195757 : call qword ptr [rsi + 0x26fffc61]
0x0000000000195c83 : call qword ptr [rsi + 0x26fffc82]
0x000000000019617b : call qword ptr [rsi + 0x26fffca9]
0x0000000000189fbf : call qword ptr [rsi - 0x1d000a3d]
0x00000000000093a8 : call qword ptr [rsi]
0x0000000000024075 : call r12
0x0000000000021be2 : call r14
0x0000000000023e55 : call r15
0x000000000006cb4b : call r8
0x000000000011491f : call r9
0x0000000000187f67 : call rax
0x000000000002da78 : call rbx
0x000000000002b398 : call rcx
0x0000000000023e56 : call rdi
0x0000000000039fce : call rdx
0x0000000000021be3 : call rsi
0x0000000000024076 : call rsp
0x000000000012faa9 : cdq ; add byte ptr [rip - 0x76b40000], al ; ret
0x000000000002c534 : cdq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000001b5435 : cdq ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x000000000001f92b : cdq ; cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000013362f : cdq ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xffee
0x00000000001addf1 : cdq ; hlt ; jmp qword ptr [rcx]
0x000000000003a6a4 : cdq ; idiv rsi ; ret
0x00000000001852a0 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000ea0b3 : cdq ; or dword ptr [rdx], 0x3d8d4800 ; ret 0xa2a
0x00000000000711f3 : cdq ; or eax, 0xc2890000 ; jmp 0x7118f
0x00000000000fb513 : cdq ; ret
0x00000000001419a3 : cdq ; ret 0xffee
0x0000000000188e3c : cdq ; sal bl, 1 ; jmp qword ptr [rcx]
0x00000000000ea664 : cdq ; sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000128683 : cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000fc1ae : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000012411d : cdqe ; shr rax, 4 ; ret
0x0000000000061d01 : clc ; adc byte ptr [rax - 0x77], cl ; ret 0x860f
0x00000000000821f3 : clc ; add al, 0x74 ; and al, 0x89 ; ret 0xb48b
0x00000000000fdad8 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x00000000000517ba : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000002b0ad : clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00000000001ab315 : clc ; add byte ptr [rax], al ; call 0x111aa558
0x000000000005715d : clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000ac9c8 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000070cae : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000001aa778 : clc ; add dh, dl ; call rdi
0x00000000000959e3 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000006ad93 : clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x00000000001bb2fd : clc ; add dword ptr [rax], eax ; jo 0x1bb29d ; sti ; jmp qword ptr [rdx]
0x0000000000099aa6 : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x0000000000033390 : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000c23b0 : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000aa8c4 : clc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xfd83
0x0000000000122fe5 : clc ; add eax, 0x10 ; ret
0x00000000000c2769 : clc ; add eax, 0x2907fec1 ; ret 0x8944
0x000000000004d6cf : clc ; add eax, 0xf8834800 ; dec dword ptr [rcx - 0x77] ; ret
0x000000000012dd61 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x000000000009f216 : clc ; add rax, r8 ; ret
0x000000000008e8f8 : clc ; add rax, rcx ; ret
0x0000000000116432 : clc ; add rsp, 8 ; ret
0x000000000002df21 : clc ; and eax, 0x7f ; ret
0x0000000000119377 : clc ; and eax, 0xffffff ; ret
0x00000000001b29c8 : clc ; and esi, esi ; jmp qword ptr [rsi]
0x0000000000119351 : clc ; bswap eax ; ret
0x00000000001bb8b2 : clc ; call qword ptr [rax]
0x00000000001bb552 : clc ; call qword ptr [rbx]
0x00000000001bc332 : clc ; call qword ptr [rcx]
0x00000000001bbf0a : clc ; call qword ptr [rdi]
0x00000000001bae32 : clc ; call qword ptr [rdx]
0x00000000001bc02a : clc ; call rcx
0x000000000019a3b2 : clc ; call rsp
0x0000000000122fc1 : clc ; cmc ; je 0x122fbd ; pop rbx ; ret
0x0000000000003af6 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000016f9c9 : clc ; cmp rcx, rax ; jne 0x16f9fb ; xor eax, eax ; ret
0x000000000016f9c8 : clc ; cmp rcx, rax ; jne 0x16f9fc ; xor eax, eax ; ret
0x0000000000170809 : clc ; cmp rcx, rax ; jne 0x17083b ; xor eax, eax ; ret
0x0000000000170808 : clc ; cmp rcx, rax ; jne 0x17083c ; xor eax, eax ; ret
0x000000000003a6a2 : clc ; cqo ; idiv rsi ; ret
0x00000000000878d0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000078b0c : clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000fe5b3 : clc ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002db97 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000140072 : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000096e85 : clc ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000fef2f : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x0000000000105d95 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000004d6d4 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000004ed90 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000001383c9 : clc ; dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x0000000000075f7d : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000001acd98 : clc ; fpatan ; jmp qword ptr [rcx]
0x000000000019a66a : clc ; inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x00000000000ffd59 : clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000002b76b : clc ; inc dword ptr [rcx - 0x77] ; ret
0x000000000019a49a : clc ; inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x0000000000026cfe : clc ; jg 0x26c8d ; ret 0x5c77
0x00000000001baae2 : clc ; jmp qword ptr [rbx]
0x00000000001bae7a : clc ; jmp qword ptr [rcx]
0x000000000019a41a : clc ; jmp qword ptr [rsp + rdx*8 + 1]
0x00000000000c00b5 : clc ; jmp rax
0x000000000019a342 : clc ; jmp rsp
0x00000000001727ea : clc ; jne 0x1728f7 ; ret
0x00000000001727e9 : clc ; jne 0x1728f8 ; ret
0x00000000000945a7 : clc ; jne 0x94481 ; ret
0x000000000019df88 : clc ; jno 0x19df77 ; call qword ptr [rax]
0x00000000001153a4 : clc ; leave ; ret
0x00000000001860b8 : clc ; loope 0x1860bd ; jmp qword ptr [rdi]
0x0000000000186138 : clc ; loope 0x18613d ; jmp qword ptr [rdi]
0x00000000001861b8 : clc ; loope 0x1861bd ; jmp qword ptr [rdi]
0x0000000000186238 : clc ; loope 0x18623d ; jmp qword ptr [rdi]
0x00000000001862b8 : clc ; loope 0x1862bd ; jmp qword ptr [rdi]
0x0000000000186338 : clc ; loope 0x18633d ; jmp qword ptr [rdi]
0x00000000001b6468 : clc ; loope 0x1b6469 ; call rsi
0x00000000000ff288 : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009ea18 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000183f02 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001529c7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000153337 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac37 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000153537 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015aba7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000153737 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab17 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001529e3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000009fb8c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000004a1d2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000002121c : clc ; neg eax ; ret
0x000000000008b3c7 : clc ; or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x000000000008b371 : clc ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x0000000000187658 : clc ; out dx, al ; dec eax ; push rcx ; out dx, al ; jmp qword ptr [rax]
0x00000000001b09e8 : clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000009f516 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009735b : clc ; pop rbx ; ret
0x000000000007469a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000014295f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x00000000000c89ad : clc ; push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x00000000000484c5 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bfd0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000115b31 : clc ; push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x0000000000072cbb : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000007b595 : clc ; push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000019a642 : clc ; push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x0000000000002bd1 : clc ; ret
0x00000000001942f2 : clc ; ret 0x6e1f
0x00000000000230b4 : clc ; ret 6
0x0000000000119361 : clc ; ror ax, 8 ; ret
0x00000000000038ec : clc ; salc ; jb 0x3970 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000003a633 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000011905b : clc ; sar rax, 6 ; ret
0x00000000000d4f31 : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001a90a8 : clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x0000000000048a2a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000001193f7 : clc ; shr eax, 0x18 ; ret
0x0000000000195541 : clc ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x000000000014a60c : clc ; sub rax, r8 ; ret
0x000000000014a861 : clc ; sub rax, rdx ; ret
0x000000000002b392 : clc ; test rcx, rcx ; je 0x2b3a0 ; call rcx
0x00000000001adbd8 : clc ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000001a7b38 : clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x00000000001acdf4 : cld ; adc al, byte ptr [rcx] ; add byte ptr [rax - 0x26], bl ; jmp qword ptr [rcx]
0x00000000001a116c : cld ; add byte ptr [rax], al ; add byte ptr [rax], dh ; test al, 0xec ; jmp qword ptr [rcx]
0x00000000001ab79d : cld ; add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x00000000000cda22 : cld ; add byte ptr [rax], al ; ret
0x000000000019800d : cld ; add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x00000000000aac1f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000aac3f : cld ; add eax, dword ptr [rax] ; ret
0x00000000001b08f4 : cld ; add qword ptr [r8], r8 ; sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b07f4 : cld ; add qword ptr [rax], r8 ; sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000001b05f4 : cld ; add qword ptr [rax], rax ; mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x0000000000195bd2 : cld ; call qword ptr [rax + 0x10fffc35]
0x0000000000195b96 : cld ; call qword ptr [rax + 0x10fffc36]
0x0000000000195bda : cld ; call qword ptr [rax + 0x10fffc38]
0x0000000000195b9e : cld ; call qword ptr [rax + 0x10fffc39]
0x0000000000195be2 : cld ; call qword ptr [rax + 0x10fffc3b]
0x0000000000195ba6 : cld ; call qword ptr [rax + 0x10fffc3c]
0x0000000000195bea : cld ; call qword ptr [rax + 0x10fffc3e]
0x0000000000195bae : cld ; call qword ptr [rax + 0x10fffc3f]
0x0000000000195bf2 : cld ; call qword ptr [rax + 0x10fffc41]
0x0000000000195bb6 : cld ; call qword ptr [rax + 0x10fffc42]
0x0000000000195bfa : cld ; call qword ptr [rax + 0x10fffc44]
0x0000000000195bbe : cld ; call qword ptr [rax + 0x10fffc45]
0x0000000000195c02 : cld ; call qword ptr [rax + 0x10fffc47]
0x0000000000195bc6 : cld ; call qword ptr [rax + 0x10fffc48]
0x0000000000195b3a : cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b32 : cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195b2a : cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195b22 : cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195b1a : cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195b52 : cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000196512 : cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001953aa : cld ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195926 : cld ; call qword ptr [rax + 0x20fffc5f]
0x0000000000195c3a : cld ; call qword ptr [rax + 0x20fffc83]
0x0000000000195e12 : cld ; call qword ptr [rax + 0x20fffc87]
0x0000000000196132 : cld ; call qword ptr [rax + 0x20fffcaa]
0x00000000001956f2 : cld ; call qword ptr [rax - 0x1f0003e4]
0x000000000019569e : cld ; call qword ptr [rax - 0x1f0003eb]
0x00000000001953a6 : cld ; call qword ptr [rax - 0x6f0003f5]
0x000000000019541e : cld ; call qword ptr [rax]
0x0000000000195efa : cld ; call qword ptr [rdx + 0x12fffc79]
0x0000000000195ef2 : cld ; call qword ptr [rdx + 0x12fffc7a]
0x0000000000195eea : cld ; call qword ptr [rdx + 0x12fffc7b]
0x0000000000195ee2 : cld ; call qword ptr [rdx + 0x12fffc7c]
0x0000000000195eda : cld ; call qword ptr [rdx + 0x12fffc7d]
0x0000000000195a0a : cld ; call qword ptr [rdx + 0x22fffc51]
0x00000000001957fa : cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195ce6 : cld ; call qword ptr [rdx + 0x22fffc85]
0x00000000001961de : cld ; call qword ptr [rdx + 0x22fffcac]
0x00000000001957da : cld ; call qword ptr [rdx]
0x0000000000195756 : cld ; call qword ptr [rsi + 0x26fffc61]
0x0000000000195c82 : cld ; call qword ptr [rsi + 0x26fffc82]
0x000000000019617a : cld ; call qword ptr [rsi + 0x26fffca9]
0x0000000000195776 : cld ; call qword ptr [rsi]
0x0000000000195396 : cld ; call rax
0x000000000019580a : cld ; call rdx
0x0000000000195766 : cld ; call rsi
0x0000000000195892 : cld ; call rsp
0x000000000005c467 : cld ; cmove rsi, r9 ; jmp 0x5c436
0x00000000001728e2 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1728f8 ; xor eax, eax ; ret
0x00000000001728e1 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x1728f9 ; xor eax, eax ; ret
0x000000000014006e : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000e32b9 : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000e3e9c : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000001961ca : cld ; dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x0000000000035057 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000019558a : cld ; inc dword ptr [rax + 0x10fffc35] ; sub ah, bh ; call rax
0x000000000019569a : cld ; inc dword ptr [rax + 0x14] ; cld ; call qword ptr [rax - 0x1f0003eb]
0x00000000001956ee : cld ; inc dword ptr [rax + 0x1b] ; cld ; call qword ptr [rax - 0x1f0003e4]
0x0000000000195672 : cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00000000001955da : cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000195646 : cld ; inc dword ptr [rax + 0x32] ; cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019564a : cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019542e : cld ; inc dword ptr [rax + 0x40fffbff] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000195932 : cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019571a : cld ; inc dword ptr [rax + 0x61] ; cld ; call rax
0x00000000001956ce : cld ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x00000000001953fe : cld ; inc dword ptr [rax + 7] ; cld ; jmp qword ptr [rax]
0x00000000001956fe : cld ; inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x00000000001956aa : cld ; inc dword ptr [rax - 0x2f0003e7] ; sbb bh, ah ; jmp qword ptr [rax]
0x0000000000196316 : cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000019613e : cld ; inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000195e1e : cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195c46 : cld ; inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195626 : cld ; inc dword ptr [rax - 0x7f0003ce] ; xor al, 0xfc ; call qword ptr [rax]
0x000000000019544e : cld ; inc dword ptr [rax - 1] ; sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x00000000001954b6 : cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000001956ca : cld ; inc dword ptr [rax] ; and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x000000000019653e : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195b7e : cld ; inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019612e : cld ; inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195552 : cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195c36 : cld ; inc dword ptr [rax] ; test bh, ah ; call qword ptr [rax + 0x20fffc83]
0x0000000000195dba : cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000000aacd7 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabfe : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000e3f89 : cld ; inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x0000000000122ac9 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000195fca : cld ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x0000000000195806 : cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001962b2 : cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x00000000001961ea : cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000195cf2 : cld ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x00000000001961da : cld ; inc dword ptr [rdx] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x00000000001957f6 : cld ; inc dword ptr [rdx] ; pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195ce2 : cld ; inc dword ptr [rdx] ; xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x0000000000195762 : cld ; inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x0000000000196186 : cld ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000196176 : cld ; inc dword ptr [rsi] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x000000000019608e : cld ; inc eax ; pop rcx ; cld ; jmp rax
0x0000000000196336 : cld ; inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x0000000000187f31 : cld ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000195ed0 : cld ; jbe 0x195ed6 ; jmp qword ptr [rdx + 0x22fffc7e]
0x00000000000cf50b : cld ; je 0xcf528 ; call 0x8b725
0x0000000000195b12 : cld ; jmp qword ptr [rax + 0x20fffc58]
0x00000000001953ae : cld ; jmp qword ptr [rax]
0x00000000001a91ea : cld ; jmp qword ptr [rbx]
0x0000000000196402 : cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000195ed2 : cld ; jmp qword ptr [rdx + 0x22fffc7e]
0x00000000001957fe : cld ; jmp qword ptr [rdx]
0x000000000019575a : cld ; jmp qword ptr [rsi]
0x00000000001953b2 : cld ; jmp rax
0x00000000001957ee : cld ; jmp rdx
0x000000000019578a : cld ; jmp rsi
0x00000000001958b6 : cld ; jmp rsp
0x0000000000170616 : cld ; jne 0x17084f ; xor eax, eax ; ret
0x00000000001728e5 : cld ; jne 0x1728f5 ; xor eax, eax ; ret
0x00000000001728e4 : cld ; jne 0x1728f6 ; xor eax, eax ; ret
0x0000000000172805 : cld ; jne 0x1728f7 ; ret
0x0000000000172804 : cld ; jne 0x1728f8 ; ret
0x00000000001959ca : cld ; lcall ptr [rcx + rdx*2 + 0x512cfffc] ; cld ; call rdx
0x00000000001959ce : cld ; ljmp ptr [rcx + rdx*2] ; cld ; call rdx
0x0000000000153152 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153355 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153555 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153755 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009fb9e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000005f80b : cld ; mov ebx, 2 ; jmp 0x5baf8
0x000000000014db18 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152d86 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015adc6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152f66 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad46 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153146 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015acc6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152ba6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae46 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e901 : cld ; mov rax, rdi ; ret
0x000000000004a18c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000b9fa8 : cld ; pop rax ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000000ac9ea : cld ; pop rbx ; ret
0x00000000001a15f4 : cld ; pop rdx ; add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x000000000019592e : cld ; push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x0000000000195e1a : cld ; push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x0000000000196312 : cld ; push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000195b82 : cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019597e : cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000196356 : cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000196542 : cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000195e4a : cld ; push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x000000000019549a : cld ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000019556e : cld ; push qword ptr [rax] ; sub ah, bh ; push rax ; sub esp, edi ; call rax
0x00000000001955f6 : cld ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x0000000000195db6 : cld ; push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000195802 : cld ; push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x0000000000195cee : cld ; push qword ptr [rdx + 0x42fffc84] ; test bh, ah ; call rdx
0x00000000001961e6 : cld ; push qword ptr [rdx + 0x42fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rdx
0x00000000001962ae : cld ; push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x00000000001961ce : cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x00000000001963fe : cld ; push qword ptr [rdx] ; lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000196182 : cld ; push qword ptr [rsi + 0x46fffca8] ; test al, 0xfc ; call rsi
0x00000000001b0bf4 : cld ; push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0bf7 ; jmp qword ptr [rcx]
0x0000000000195392 : cld ; push rax ; add esp, edi ; call rax
0x0000000000196352 : cld ; push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000195b4e : cld ; push rax ; push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x000000000019597a : cld ; push rax ; push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195616 : cld ; push rax ; sub bh, ah ; call rax
0x000000000019567a : cld ; push rax ; sub edi, esp ; jmp rax
0x0000000000195572 : cld ; push rax ; sub esp, edi ; call rax
0x0000000000195b8e : cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x00000000001961f6 : cld ; push rdx ; test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x000000000004a192 : cld ; ret
0x00000000001a85f4 : cld ; retf 0 ; call 0x131a7658
0x00000000001833b6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000bb24e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xbb251 ; ret
0x00000000000d5165 : cld ; xor eax, eax ; mov rdx, r8 ; jmp 0xd518c
0x0000000000086359 : cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x000000000003ad3d : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000bc5ed : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000bc56e : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000086536 : cli ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000000cd1f9 : cli ; add byte ptr [rcx - 0xcf68130], cl ; ret
0x00000000000bd40b : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c391a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003c963 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8949
0x000000000003c98c : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000074078 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000001246de : cli ; add cl, byte ptr [rbp + 0xf] ; ret
0x00000000000aa962 : cli ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x8444
0x0000000000026485 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000001bb54d : cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000000aa60b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000009fbbc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000c28a9 : cli ; add eax, 0x2941c229 ; ret 0x6b45
0x00000000000bbaba : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003791 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x3779 ; ret 0x975
0x00000000000ff2e0 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000000ff981 : cli ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xc084
0x000000000018b062 : cli ; call qword ptr [rax]
0x00000000001a7d32 : cli ; call qword ptr [rdi]
0x000000000008810a : cli ; call rax
0x00000000000e4fe3 : cli ; call rcx
0x000000000019afa2 : cli ; call rsp
0x00000000000f6585 : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000003aa01 : cli ; dec dword ptr [rax + 0xf] ; ret
0x000000000019b1ba : cli ; dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x000000000019b412 : cli ; dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x00000000000e3e3c : cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000019b112 : cli ; dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x000000000019b30a : cli ; dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019b69a : cli ; dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b674 ; cli ; jmp rsp
0x000000000019b15a : cli ; inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x000000000018c152 : cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000019af9a : cli ; inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x000000000018b056 : cli ; inc eax ; sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x000000000014dadb : cli ; jg 0x14daee ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014dfcb : cli ; jg 0x14dfde ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e36b : cli ; jg 0x14e37e ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000172a01 : cli ; jg 0x172a13 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009fb77 : cli ; jg 0x9fb8a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a02ca : cli ; jg 0xa02dd ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a0a17 : cli ; jg 0xa0a2a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000aa5d6 : cli ; jg 0xaa5e8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000019f9b2 : cli ; jmp qword ptr [rcx]
0x000000000019b61a : cli ; jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x00000000001a7d1a : cli ; jmp qword ptr [rdi]
0x000000000018b05e : cli ; jmp rax
0x000000000019b03a : cli ; jmp rsp
0x000000000019b29a : cli ; lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x000000000019b5fa : cli ; lcall ptr [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x000000000018c15a : cli ; ljmp ptr [rax + 0x40fffa89] ; mov bh, dl ; call rax
0x000000000019b2ca : cli ; ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x000000000019b462 : cli ; ljmp ptr [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b46e ; call rsp
0x0000000000153558 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000013c4f2 : cli ; mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000009e8e7 : cli ; mov rax, rdi ; ret
0x0000000000063b65 : cli ; mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000011ceb0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000008ece8 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000145f16 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bb2c6 : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x000000000003d322 : cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000185821 : cli ; push 0x6e ; ja 0x1857ae ; ret 0x48f
0x000000000019b032 : cli ; push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000195b10 : cli ; push rax ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x000000000018b05a : cli ; push rax ; sub dl, bh ; jmp rax
0x000000000002cb2f : cli ; ret
0x00000000000bc58c : cli ; ret 0x10
0x00000000001842c5 : cli ; ret 0xac65
0x0000000000189014 : cli ; retf ; push qword ptr [rdi] ; fcomi st(3) ; jmp rsp
0x00000000000d4f2e : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000114a6b : cli ; setae al ; ret
0x000000000008b7f9 : cli ; test rdx, rdx ; je 0x8b819 ; bsf rax, rdx ; ret
0x000000000008b9c8 : cli ; test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x0000000000182f0a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000c18fe : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001bc446 : cmc ; add al, byte ptr [rax] ; ret
0x00000000001bc466 : cmc ; add al, byte ptr [rax] ; ret 0x503
0x000000000014a488 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001ab0ed : cmc ; add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001ab045 : cmc ; add byte ptr [rax], al ; fsub dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000000001ab0d5 : cmc ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000000abc97 : cmc ; add byte ptr [rax], al ; ret
0x000000000019a8c5 : cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x00000000001bb065 : cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x000000000017510a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000173615 : cmc ; call 0x1f8ab
0x0000000000189a02 : cmc ; call qword ptr [rax - 0x1f000afb]
0x00000000001b07fa : cmc ; call qword ptr [rax]
0x00000000001b073a : cmc ; call qword ptr [rcx]
0x00000000001af4da : cmc ; call qword ptr [rdi]
0x00000000001af82a : cmc ; call qword ptr [rdx]
0x0000000000189fbe : cmc ; call qword ptr [rsi - 0x1d000a3d]
0x00000000001b0d1a : cmc ; call qword ptr [rsi]
0x0000000000189f9e : cmc ; call rax
0x0000000000189ebe : cmc ; call rbx
0x0000000000189ea6 : cmc ; call rdi
0x00000000001b1ad2 : cmc ; call rsi
0x0000000000198e9a : cmc ; call rsp
0x0000000000189eba : cmc ; dec dword ptr [rax - 0x2c000a8c] ; jae 0x189ec1 ; call rbx
0x0000000000189eb6 : cmc ; dec dword ptr [rax - 0x77000a8c] ; je 0x189ebd ; call rbx
0x00000000001000b3 : cmc ; dec dword ptr [rax - 0x77] ; out -0x18, eax ; ret
0x00000000000f4261 : cmc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000c95b1 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000189bca : cmc ; dec dword ptr [rdx] ; cmc ; dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000189bce : cmc ; dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000198eea : cmc ; dec dword ptr [rsp + 0x20f40001] ; cmc ; jmp rsp
0x0000000000198f92 : cmc ; dec esp ; add dword ptr [eax], eax ; je 0x198fe5 ; cmc ; jmp rsp
0x00000000001a2451 : cmc ; in al, dx ; call qword ptr [rsi]
0x0000000000189e8a : cmc ; inc dword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189e9e : cmc ; inc dword ptr [rsi*2 + 0x7538fff5] ; cmc ; call rdi
0x0000000000189bea : cmc ; inc dword ptr [rsi] ; cmc ; jmp rsp
0x0000000000198f42 : cmc ; inc esp ; add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x0000000000122fc2 : cmc ; je 0x122fbc ; pop rbx ; ret
0x0000000000189abe : cmc ; jmp qword ptr [rax]
0x0000000000189da6 : cmc ; jmp qword ptr [rbx]
0x0000000000189a12 : cmc ; jmp qword ptr [rcx]
0x0000000000189d9a : cmc ; jmp qword ptr [rdi]
0x00000000001afa12 : cmc ; jmp qword ptr [rdx]
0x0000000000189982 : cmc ; jmp rax
0x00000000001b1322 : cmc ; jmp rdi
0x0000000000189fc2 : cmc ; jmp rdx
0x0000000000189e7a : cmc ; jmp rsi
0x0000000000189bd2 : cmc ; jmp rsp
0x0000000000101fb6 : cmc ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000189aba : cmc ; lcall ptr [rbp + 6] ; cmc ; jmp qword ptr [rax]
0x0000000000189ab6 : cmc ; lcall ptr [rbp + 6] ; cmc ; lcall ptr [rbp + 6] ; cmc ; jmp qword ptr [rax]
0x0000000000189fba : cmc ; lcall ptr [rdi + rax*8 - 0xb] ; call qword ptr [rsi - 0x1d000a3d]
0x0000000000189be6 : cmc ; lcall ptr [rsi] ; cmc ; inc dword ptr [rsi] ; cmc ; jmp rsp
0x0000000000198fc2 : cmc ; ljmp ptr [rax + rbp*2 + 0x44840001] ; cmc ; jmp rsp
0x000000000018997a : cmc ; ljmp ptr [rax] ; add eax, 0x528fff5 ; cmc ; jmp rax
0x00000000001899fe : cmc ; ljmp ptr [rax] ; add eax, 0x590fff5 ; cmc ; jmp rax
0x0000000000185c49 : cmc ; mov ch, 0xab ; ret
0x000000000015ad4a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152dde : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000171df3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x000000000006e291 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000182af7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000007818d : cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000189f9a : cmc ; push qword ptr [rax - 0x2f000a7f] ; mov dr0, ebp ; jmp rsi
0x0000000000189eee : cmc ; push qword ptr [rbp + 0x7b] ; cmc ; jmp rsi
0x0000000000189e86 : cmc ; push qword ptr [rbx] ; cmc ; inc dword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189da2 : cmc ; push qword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189e76 : cmc ; push qword ptr [rbx] ; cmc ; jmp rsi
0x0000000000189d9e : cmc ; push qword ptr [rbx] ; cmc ; push qword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189e72 : cmc ; push qword ptr [rbx] ; cmc ; push qword ptr [rbx] ; cmc ; jmp rsi
0x0000000000198e92 : cmc ; push qword ptr [rcx + 0x14840001] ; cmc ; call rsp
0x00000000000f34af : cmc ; ret
0x0000000000195539 : cmc ; sti ; jmp qword ptr [rax]
0x0000000000171df7 : cmc ; sub eax, edx ; ret
0x0000000000185285 : cmc ; xlatb ; ret 0x4e27
0x00000000000ea9b1 : cmova eax, edx ; ret
0x00000000000bc6c1 : cmova esi, edx ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000007d0b9 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000008b457 : cmovae eax, ecx ; ret
0x000000000004a5c1 : cmovae eax, edi ; ret
0x0000000000108a7c : cmovae eax, esi ; ret
0x00000000000038a7 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007d0b8 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000004a5c0 : cmovae rax, rdi ; ret
0x0000000000108a7b : cmovae rax, rsi ; ret
0x000000000003ac7f : cmovbe edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000006b2e4 : cmove eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000f690b : cmove eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000097969 : cmove eax, ebx ; pop rbx ; ret
0x0000000000074f51 : cmove eax, ecx ; ret
0x000000000013c2ca : cmove eax, ecx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f828 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000bc402 : cmove eax, edx ; add rsp, 0x28 ; ret
0x00000000000f76f0 : cmove eax, edx ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000878d3 : cmove eax, edx ; add rsp, 8 ; ret
0x000000000002d90b : cmove eax, edx ; ret
0x00000000000d6c11 : cmove eax, esi ; ret
0x000000000009e9b1 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x00000000000ba298 : cmove esi, ecx ; call 0x8f3b9
0x000000000005c469 : cmove esi, ecx ; jmp 0x5c434
0x0000000000074f50 : cmove r8, rcx ; ret
0x00000000000f690a : cmove rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000000000097968 : cmove rax, rbx ; pop rbx ; ret
0x00000000000ac824 : cmove rax, rcx ; ret
0x000000000013c2c9 : cmove rax, rcx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000008f839 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000bc401 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x00000000000878d2 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000002d90a : cmove rax, rdx ; ret
0x000000000005c468 : cmove rsi, r9 ; jmp 0x5c435
0x0000000000071bfb : cmovg eax, ecx ; test rdx, rdx ; jne 0x71bf9 ; ret
0x000000000007af3b : cmovg eax, ecx ; test rdx, rdx ; jne 0x7af39 ; ret
0x00000000000cae04 : cmovle eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000079943 : cmovne eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003aa04 : cmovne eax, ebx ; pop rbx ; ret
0x0000000000110bc1 : cmovne eax, ecx ; ret
0x000000000009748b : cmovne eax, edi ; ret
0x0000000000140816 : cmovne eax, edx ; add rsp, 8 ; ret
0x0000000000089b03 : cmovne eax, edx ; ret
0x0000000000110b54 : cmovne eax, esi ; ret
0x0000000000100d77 : cmovne ebx, eax ; call 0xfcf95
0x000000000003aa03 : cmovne rax, rbx ; pop rbx ; ret
0x000000000009748a : cmovne rax, rdi ; ret
0x0000000000140815 : cmovne rax, rdx ; add rsp, 8 ; ret
0x0000000000089b02 : cmovne rax, rdx ; ret
0x0000000000100d76 : cmovne rbx, rax ; call 0xfcf96
0x000000000010ecd2 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000010ecd1 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000128a10 : cmovs eax, dword ptr [rbx + 0x5d5b80ec] ; pop r12 ; ret
0x000000000004ed5b : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000059434 : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret 0x8b48
0x000000000009e923 : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000003a6f6 : cmovs eax, edx ; pop rbx ; ret
0x0000000000023b8c : cmovs eax, edx ; ret
0x000000000009b084 : cmovs ebp, dword ptr [rcx] ; ret
0x00000000000800df : cmovs ebp, dword ptr [rcx] ; ret 0x14c
0x000000000012fa08 : cmovs ecx, dword ptr [rcx] ; ret 0x8948
0x0000000000099bf3 : cmovs edi, dword ptr [rcx] ; fmul dword ptr [rax + 0xf] ; ret
0x00000000000aac56 : cmovs esp, dword ptr [rbx + 0x34] ; nop ; add rax, rsi ; jmp rax
0x000000000005c466 : cmp ah, 0x49 ; cmove esi, ecx ; jmp 0x5c437
0x0000000000195b9d : cmp ah, bh ; call qword ptr [rax + 0x10fffc39]
0x0000000000195bdd : cmp ah, bh ; call qword ptr [rax]
0x000000000014a783 : cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a5f8 : cmp ah, byte ptr [rbx - 0x35] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014a65f : cmp ah, byte ptr [rbx - 0x37] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000019d434 : cmp al, 0x19 ; add byte ptr [rax], al ; cwde ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000102d51 : cmp al, 0x24 ; call rbx
0x00000000001434dc : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x128] ; jmp rax
0x0000000000129055 : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000001aea34 : cmp al, 0x2f ; add dword ptr [rax], eax ; js 0x1aea20 ; hlt ; call qword ptr [rbx]
0x0000000000038fed : cmp al, 0x33 ; call rax
0x0000000000097355 : cmp al, 0x3d ; jne 0x9738f ; mov rax, rdi ; pop rbx ; ret
0x00000000000d16dc : cmp al, 0x3f ; jne 0xd16a1 ; mov eax, 1 ; ret
0x00000000000d16f4 : cmp al, 0x3f ; jne 0xd16be ; mov eax, 1 ; ret
0x0000000000183f00 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001b0734 : cmp al, 0x4c ; add dword ptr [rax], eax ; lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b0b34 : cmp al, 0x50 ; add dword ptr [rax], eax ; js 0x1b0bb1 ; cmc ; jmp qword ptr [rcx]
0x000000000019680c : cmp al, 0x62 ; add byte ptr [rax], al ; xchg eax, esp ; and ecx, ebp ; call rsp
0x00000000001b2c34 : cmp al, 0x71 ; add dword ptr [rax], eax ; and rsi, rsi ; jmp qword ptr [rsi]
0x000000000008bb10 : cmp al, 0x71 ; add dword ptr [rax], eax ; ret
0x00000000001b5434 : cmp al, 0x99 ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf6 ; call rsi
0x0000000000104668 : cmp al, 0xb2 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000e1a4a : cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000001a7b34 : cmp al, 0xc0 ; add byte ptr [rax], al ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000019a0e4 : cmp al, 0xc3 ; add dword ptr [rax], eax ; and al, 0xe5 ; idiv edi ; push rsp ; ret
0x000000000019bb19 : cmp al, 0xe8 ; jmp rax
0x00000000001a36e9 : cmp al, 0xed ; jmp qword ptr [rdi]
0x0000000000099b70 : cmp al, 0xf ; mov dh, 0x45 ; ret 0x8349
0x00000000001a7ff9 : cmp al, 0xf0 ; jmp qword ptr [rbx]
0x00000000001b34d1 : cmp al, 0xf6 ; call qword ptr [rax]
0x000000000019800c : cmp al, 0xfc ; add byte ptr [rax], al ; xor r13b, dil ; call rsp
0x0000000000195ba9 : cmp al, 0xfc ; call qword ptr [rax]
0x00000000000ae376 : cmp al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001705f3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bbf34 : cmp al, 4 ; add al, byte ptr [rax] ; test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000000a68f0 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000000713fb : cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x0000000000005ea8 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001f92c : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000203de : cmp al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021a45 : cmp al, byte ptr [rax] ; ret
0x00000000000de2fc : cmp al, byte ptr [rbx - 0x7cb7fe3d] ; ret 0x4104
0x00000000001989dd : cmp al, byte ptr [rcx] ; add byte ptr [rsp - 0xd], al ; jmp rsp
0x00000000000f0c79 : cmp al, byte ptr [rdi + rcx] ; test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x000000000008103f : cmp al, byte ptr [rdx] ; add byte ptr [rax], al ; call 0x7d286
0x00000000001722b6 : cmp al, byte ptr [rsi - 1] ; jne 0x1722dc ; xor eax, eax ; ret
0x00000000000ffc07 : cmp al, ch ; ret
0x0000000000033504 : cmp al, ch ; xchg eax, esi ; ret
0x000000000008eb26 : cmp al, dh ; ret
0x000000000008eb25 : cmp al, r14b ; ret
0x0000000000195430 : cmp bh, 0xfb ; inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x0000000000034f16 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x0000000000195be1 : cmp bh, ah ; call qword ptr [rax + 0x10fffc3b]
0x0000000000110b1a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000194e91 : cmp bh, bl ; call qword ptr [rax]
0x0000000000110b52 : cmp bh, cl ; cmovne eax, esi ; ret
0x00000000001aebc8 : cmp bl, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000112b58 : cmp bl, ch ; ret
0x0000000000062808 : cmp bl, ch ; ret 0x8148
0x000000000005fb89 : cmp bl, ch ; ret 0x858b
0x0000000000094cd3 : cmp bl, dh ; ret
0x00000000000abc46 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000073d1b : cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x00000000000e7b89 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f739 : cmp byte ptr [r8], r9b ; je 0x10f763 ; mov rdx, r8 ; jmp 0x10f753
0x000000000004b82a : cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000f277e : cmp byte ptr [rax + 0x39], cl ; ret 0x860f
0x000000000008f75f : cmp byte ptr [rax + 0xf], cl ; ret
0x0000000000024ffa : cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000135896 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008eb67 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000bbe77 : cmp byte ptr [rax + 1], cl ; ret 0x6348
0x0000000000101ef8 : cmp byte ptr [rax + rax], ch ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000da267 : cmp byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000025f32 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000d9901 : cmp byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000d9900 : cmp byte ptr [rax - 0x75], r9b ; or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000335d7 : cmp byte ptr [rax - 0x77], cl ; and al, 0x28 ; call 0x1f8a8
0x0000000000102d04 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000e96eb : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000073d1c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000001123ff : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000f41e6 : cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f07f0 : cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x000000000012c1e0 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012ddfe : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000001340c1 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x000000000005e8b6 : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff1c2 : cmp byte ptr [rax - 1], bh ; ret
0x000000000016cbc8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008eb56 : cmp byte ptr [rax], ah ; ret
0x00000000000df0ea : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003b0e5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000007b563 : cmp byte ptr [rax], al ; je 0x7b574 ; ret
0x0000000000045af7 : cmp byte ptr [rax], al ; mov byte ptr [rax + rdx], 0 ; ret
0x00000000000368bf : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000036874 : cmp byte ptr [rax], al ; ret
0x000000000010f42f : cmp byte ptr [rax], bh ; je 0x10f45e ; mov rdx, rax ; jmp 0x10f44b
0x0000000000138e89 : cmp byte ptr [rax], bl ; je 0x138e94 ; ret
0x0000000000195550 : cmp byte ptr [rax], ch ; cld ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x000000000010f73a : cmp byte ptr [rax], cl ; je 0x10f762 ; mov rdx, r8 ; jmp 0x10f752
0x00000000000e7b8a : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089b00 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000009f106 : cmp byte ptr [rax], dh ; ret
0x000000000010f42e : cmp byte ptr [rax], dil ; je 0x10f45f ; mov rdx, rax ; jmp 0x10f44c
0x000000000008eb46 : cmp byte ptr [rax], dl ; ret
0x000000000008eb45 : cmp byte ptr [rax], r10b ; ret
0x000000000008eb55 : cmp byte ptr [rax], r12b ; ret
0x000000000009f105 : cmp byte ptr [rax], r14b ; ret
0x0000000000089aff : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000abc4a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000abc49 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000010f430 : cmp byte ptr [rbp + 0x48], dh ; mov edx, eax ; jmp 0x10f44a
0x000000000019e558 : cmp byte ptr [rbp - 0x17], bh ; jmp rsp
0x000000000014364a : cmp byte ptr [rbp - 0x25], dh ; add rsp, 0x48 ; ret
0x0000000000105f8e : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000000d88d8 : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000189ea4 : cmp byte ptr [rbp - 0xb], dh ; call rdi
0x000000000002cb29 : cmp byte ptr [rbx + 0x13], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000ce09a : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001ab5a4 : cmp byte ptr [rbx - 0x5ff1aef9], al ; adc al, byte ptr [rbx] ; ret 0xa02
0x00000000001b3b98 : cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000001b11b8 : cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000000abc47 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000072ad7 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000000be449 : cmp byte ptr [rcx + 1], cl ; ret
0x00000000000d7c75 : cmp byte ptr [rcx + 8], 2 ; jne 0xd7c57 ; jmp 0xd7c47
0x00000000000b1db3 : cmp byte ptr [rcx - 0x17d7dbb4], cl ; ret
0x00000000000fdd16 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x00000000000eb8fc : cmp byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000040195 : cmp byte ptr [rcx - 0x77], al ; ret 0x8d48
0x00000000001b0bc8 : cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001af37d : cmp byte ptr [rcx], al ; add al, ah ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001af365 : cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x000000000016cbc9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000a7d04 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002054 : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000003a6c8 : cmp byte ptr [rdi], 0 ; jne 0x3a6d6 ; pop rbx ; ret
0x00000000001b3610 : cmp byte ptr [rdi], 0xf6 ; call qword ptr [rax]
0x00000000001735ad : cmp byte ptr [rdi], ch ; jne 0x1735a1 ; mov rdi, r14 ; call 0x1f8b1
0x0000000000099557 : cmp byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0x8349
0x000000000007b528 : cmp byte ptr [rdi], cl ; ret 0x389
0x00000000000dc598 : cmp byte ptr [rdi], cl ; test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000001a6348 : cmp byte ptr [rdi], dh ; out dx, al ; jmp qword ptr [rdx]
0x000000000016ee9d : cmp byte ptr [rdi], dl ; ret
0x000000000016f9b0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f999 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f982 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e43e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001ab108 : cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001ab248 : cmp byte ptr [rdx + rsi*8], ch ; jmp rcx
0x000000000019b15d : cmp byte ptr [rdx], al ; add ah, ah ; cli ; jmp rsp
0x0000000000189a10 : cmp byte ptr [rsi], al ; cmc ; jmp qword ptr [rcx]
0x000000000014a662 : cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000e0fc0 : cmp cl, 0x11 ; je 0xe1002 ; mov rdx, rax ; jmp 0xe0f66
0x00000000000bbc38 : cmp cl, al ; call 0xffffffff89cde563
0x0000000000080bfe : cmp cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000dab7f : cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000133c57 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000006eba0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000010de12 : cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012abc3 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000004727c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000002db92 : cmp cl, byte ptr [rip - 0x77cb800] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000d72ce : cmp cl, byte ptr [rsi] ; je 0xd726b ; pop rbx ; ret
0x000000000003ca26 : cmp cl, ch ; ret
0x00000000000dfeb8 : cmp cl, ch ; ret 0xfffe
0x000000000013361b : cmp dh, al ; add eax, 0x358d4800 ; ret
0x0000000000110b93 : cmp dh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x000000000003a6c5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000a1295 : cmp dh, dh ; ret 0x7501
0x0000000000110bbf : cmp dh, dl ; cmovne eax, ecx ; ret
0x0000000000110b19 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000110b51 : cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000077898 : cmp dl, 0xff ; xor eax, eax ; pop rbx ; ret
0x0000000000172a40 : cmp dl, 1 ; jb 0x172a4e ; mov byte ptr [rdi], cl ; ret
0x000000000009fbbb : cmp dl, 1 ; jb 0x9fbcd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a030e : cmp dl, 1 ; jb 0xa0320 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a5b : cmp dl, 1 ; jb 0xa0a6d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000aa60a : cmp dl, 1 ; jb 0xaa618 ; mov byte ptr [rdi], cl ; ret
0x000000000008b412 : cmp dl, 3 ; je 0x8b43f ; movsx eax, dl ; ret
0x000000000008b412 : cmp dl, 3 ; je 0x8b440 ; movsx eax, dl ; ret
0x000000000008b411 : cmp dl, 3 ; je 0x8b441 ; movsx eax, dl ; ret
0x0000000000002b86 : cmp dl, byte ptr [rdi] ; ret
0x0000000000072aa8 : cmp dword ptr [rax + 0x30], 0 ; je 0x72ab6 ; ret
0x000000000009d0a3 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x0000000000144103 : cmp dword ptr [rax - 8], eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000138e88 : cmp dword ptr [rax], 0x18 ; je 0x138e95 ; ret
0x000000000002cae6 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x398faf], dl ; ret
0x000000000002d9d0 : cmp dword ptr [rax], eax ; mov qword ptr [rax], rdx ; ret
0x000000000002e199 : cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000029c95 : cmp dword ptr [rax], eax ; ret
0x0000000000035304 : cmp dword ptr [rax], eax ; test eax, eax ; jne 0x35317 ; ret
0x0000000000035303 : cmp dword ptr [rax], r8d ; test eax, eax ; jne 0x35318 ; ret
0x000000000008921b : cmp dword ptr [rbp - 0x76b7ffcd], ebp ; and al, 8 ; call qword ptr [rdx]
0x000000000010b893 : cmp dword ptr [rbp - 0x76b7ffd5], edi ; ret 0x8d48
0x00000000000d5b62 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd5af9
0x0000000000134f4c : cmp dword ptr [rbx - 0x76b7fffb], esp ; ret 0xff31
0x000000000015a888 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000009541e : cmp dword ptr [rcx + 0x39], ecx ; ret
0x00000000000381ec : cmp dword ptr [rcx - 0x7d], ecx ; ret 0xf301
0x00000000001af40d : cmp dword ptr [rcx], eax ; add byte ptr [rax], al ; push rsp ; call rsi
0x00000000001af4d5 : cmp dword ptr [rcx], eax ; add byte ptr [rax], cl ; add esi, ebp ; call qword ptr [rdi]
0x000000000012835d : cmp dword ptr [rdi + 0x10], 2 ; je 0x12836e ; ret
0x00000000000773e4 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b561 : cmp dword ptr [rdi + 0x38], 0 ; je 0x7b576 ; ret
0x00000000000bb220 : cmp dword ptr [rdi + 8], edx ; jne 0xbb203 ; ret
0x0000000000114a08 : cmp dword ptr [rdi], 0 ; je 0x114a1e ; ret
0x0000000000115b1f : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x0000000000088f21 : cmp dword ptr [rip + 0x33d940], 0 ; je 0x88f39 ; ret
0x00000000000e0cdb : cmp dword ptr [rip + 0x66000002], 0xf ; outsd dx, dword ptr [rsi] ; ret 0xddeb
0x0000000000133780 : cmp dword ptr [rsi + 0x10], 0xc ; je 0x133798 ; xor eax, eax ; ret
0x00000000001024ad : cmp dword ptr [rsi], 0 ; je 0x1024be ; pop rbx ; ret
0x0000000000003836 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000f7643 : cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x0000000000138e87 : cmp dword ptr fs:[rax], 0x18 ; je 0x138e96 ; ret
0x000000000002d9cf : cmp dword ptr fs:[rax], eax ; mov qword ptr [rax], rdx ; ret
0x0000000000003ba7 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000004b512 : cmp eax, 0x1451a9 ; call 0x777f7
0x00000000001af825 : cmp eax, 0x1c380001 ; cmc ; call qword ptr [rdx]
0x00000000001af8d5 : cmp eax, 0x1e280001 ; cmc ; jmp qword ptr [rcx]
0x00000000001af8ed : cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x00000000001206d2 : cmp eax, 0x2a8025 ; call rax
0x000000000011fe73 : cmp eax, 0x2a8828 ; call rax
0x000000000010146b : cmp eax, 0x2c2da0 ; ret
0x0000000000198a2d : cmp eax, 0x32a40001 ; jmp rsp
0x0000000000175292 : cmp eax, 0x39480025 ; ret
0x000000000008167c : cmp eax, 0x394d0034 ; ret 0x8948
0x0000000000195be9 : cmp eax, 0x3e90fffc ; cld ; call qword ptr [rax]
0x000000000012c57b : cmp eax, 0x480029c8 ; add esp, 8 ; ret
0x00000000000e0cdc : cmp eax, 0x66000002 ; movq mm0, mm2 ; jmp 0xe0cca
0x00000000000cdb9b : cmp eax, 0x7275 ; jne 0xcdb84 ; xor eax, eax ; ret
0x000000000005946e : cmp eax, 0x83480005 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000075bdf : cmp eax, 0x89000056 ; ret 0x98eb
0x0000000000097356 : cmp eax, 0x89482e75 ; clc ; pop rbx ; ret
0x00000000000c89ba : cmp eax, 0x89e18948 ; ret 0xf631
0x00000000000fba1d : cmp eax, 0xa1 ; je 0xfba40 ; neg eax ; pop rbx ; ret
0x00000000000c00ae : cmp eax, 0xc8561 ; add rax, rdi ; jmp rax
0x0000000000122fc0 : cmp eax, 0xf5 ; je 0x122fbe ; pop rbx ; ret
0x00000000000b64ea : cmp eax, 0xff ; cmove eax, edx ; ret
0x000000000014295e : cmp eax, 0xff ; je 0x142979 ; add rsp, 8 ; ret
0x0000000000072cba : cmp eax, 0xff ; je 0x72ccb ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072cfe : cmp eax, 0xff ; je 0x72d0f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007b594 : cmp eax, 0xff ; je 0x7b5a9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf77 : cmp eax, 0xff ; je 0x7bf88 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000115b30 : cmp eax, 0xff ; jne 0x115b2f ; xor eax, eax ; leave ; ret
0x00000000000484c4 : cmp eax, 0xff ; jne 0x484b9 ; mov rax, rdx ; ret
0x0000000000074699 : cmp eax, 0xff ; jne 0x746a6 ; pop rbx ; ret
0x000000000007bfcf : cmp eax, 0xff ; jne 0x7bfc0 ; pop rbx ; ret
0x000000000010567f : cmp eax, 0xfffff000 ; ja 0x105698 ; ret
0x000000000010733f : cmp eax, 0xfffff000 ; ja 0x107358 ; ret
0x0000000000107581 : cmp eax, 0xfffff000 ; ja 0x107597 ; ret
0x0000000000107633 : cmp eax, 0xfffff000 ; ja 0x107648 ; ret
0x000000000010766d : cmp eax, 0xfffff000 ; ja 0x107688 ; ret
0x000000000010821e : cmp eax, 0xfffff000 ; ja 0x108237 ; ret
0x000000000010839e : cmp eax, 0xfffff000 ; ja 0x1083b7 ; ret
0x0000000000108838 : cmp eax, 0xfffff000 ; ja 0x108847 ; ret
0x00000000001088da : cmp eax, 0xfffff000 ; ja 0x1088ef ; ret
0x000000000010898a : cmp eax, 0xfffff000 ; ja 0x10899f ; ret
0x00000000001157eb : cmp eax, 0xfffff000 ; ja 0x115800 ; ret
0x0000000000115898 : cmp eax, 0xfffff000 ; ja 0x1158c2 ; ret
0x000000000011755d : cmp eax, 0xfffff000 ; ja 0x117578 ; ret
0x000000000011760d : cmp eax, 0xfffff000 ; ja 0x117628 ; ret
0x0000000000035429 : cmp eax, 0xfffff000 ; ja 0x35458 ; ret
0x0000000000035731 : cmp eax, 0xfffff000 ; ja 0x35748 ; ret
0x000000000003579d : cmp eax, 0xfffff000 ; ja 0x357b8 ; ret
0x00000000000357e7 : cmp eax, 0xfffff000 ; ja 0x357f7 ; ret
0x00000000000bc438 : cmp eax, 0xfffff000 ; ja 0xbc450 ; ret
0x00000000000c83d8 : cmp eax, 0xfffff000 ; ja 0xc83f0 ; pop rbx ; ret
0x00000000000c9652 : cmp eax, 0xfffff000 ; ja 0xc9667 ; ret
0x00000000000cbfe1 : cmp eax, 0xfffff000 ; ja 0xcbff7 ; ret
0x00000000000cc07b : cmp eax, 0xfffff000 ; ja 0xcc08f ; ret
0x00000000000cc16c : cmp eax, 0xfffff000 ; ja 0xcc17f ; ret
0x00000000000cd2c4 : cmp eax, 0xfffff000 ; ja 0xcd2d7 ; ret
0x00000000000cd334 : cmp eax, 0xfffff000 ; ja 0xcd347 ; ret
0x00000000000cd588 : cmp eax, 0xfffff000 ; ja 0xcd597 ; ret
0x00000000000cd608 : cmp eax, 0xfffff000 ; ja 0xcd617 ; ret
0x00000000000f6bb6 : cmp eax, 0xfffff000 ; ja 0xf6bc8 ; ret
0x00000000000f6c05 : cmp eax, 0xfffff000 ; ja 0xf6c18 ; ret
0x00000000000f6c56 : cmp eax, 0xfffff000 ; ja 0xf6c68 ; ret
0x00000000000f6cae : cmp eax, 0xfffff000 ; ja 0xf6cc8 ; ret
0x00000000000f6d12 : cmp eax, 0xfffff000 ; ja 0xf6d28 ; ret
0x00000000000f6d6b : cmp eax, 0xfffff000 ; ja 0xf6d80 ; ret
0x00000000000f6f4a : cmp eax, 0xfffff000 ; ja 0xf6f60 ; ret
0x00000000000f7614 : cmp eax, 0xfffff000 ; ja 0xf7658 ; ret
0x00000000000fba93 : cmp eax, 0xfffff000 ; ja 0xfbaa8 ; ret
0x00000000000fbae7 : cmp eax, 0xfffff000 ; ja 0xfbaf8 ; ret
0x00000000000fc23b : cmp eax, 0xfffff000 ; ja 0xfc24f ; ret
0x00000000000fc75f : cmp eax, 0xfffff000 ; ja 0xfc777 ; ret
0x00000000000fd00b : cmp eax, 0xfffff000 ; ja 0xfd01f ; ret
0x00000000000fd0bb : cmp eax, 0xfffff000 ; ja 0xfd0cf ; ret
0x00000000000fd166 : cmp eax, 0xfffff000 ; ja 0xfd177 ; ret
0x00000000000fd1d6 : cmp eax, 0xfffff000 ; ja 0xfd1e7 ; ret
0x00000000000fd257 : cmp eax, 0xfffff000 ; ja 0xfd267 ; ret
0x00000000000fd307 : cmp eax, 0xfffff000 ; ja 0xfd317 ; ret
0x00000000000fd857 : cmp eax, 0xfffff000 ; ja 0xfd868 ; ret
0x00000000000fef78 : cmp eax, 0xfffff000 ; ja 0xfef90 ; ret
0x00000000000ff00c : cmp eax, 0xfffff000 ; ja 0xff020 ; ret
0x00000000000ff0ac : cmp eax, 0xfffff000 ; ja 0xff0c0 ; ret
0x00000000000ff100 : cmp eax, 0xfffff000 ; ja 0xff118 ; ret
0x000000000010149a : cmp eax, 0xfffff001 ; jae 0x1014a9 ; ret
0x0000000000101708 : cmp eax, 0xfffff001 ; jae 0x101717 ; ret
0x0000000000101738 : cmp eax, 0xfffff001 ; jae 0x101747 ; ret
0x0000000000101771 : cmp eax, 0xfffff001 ; jae 0x1017b0 ; ret
0x00000000001017c8 : cmp eax, 0xfffff001 ; jae 0x1017d7 ; ret
0x00000000001017f8 : cmp eax, 0xfffff001 ; jae 0x101807 ; ret
0x000000000010182b : cmp eax, 0xfffff001 ; jae 0x10183a ; ret
0x0000000000101858 : cmp eax, 0xfffff001 ; jae 0x101867 ; ret
0x0000000000101888 : cmp eax, 0xfffff001 ; jae 0x101897 ; ret
0x00000000001018b8 : cmp eax, 0xfffff001 ; jae 0x1018c7 ; ret
0x00000000001018e8 : cmp eax, 0xfffff001 ; jae 0x1018f7 ; ret
0x0000000000105fab : cmp eax, 0xfffff001 ; jae 0x105fba ; ret
0x0000000000105fd8 : cmp eax, 0xfffff001 ; jae 0x105fe7 ; ret
0x0000000000106008 : cmp eax, 0xfffff001 ; jae 0x106017 ; ret
0x000000000010603b : cmp eax, 0xfffff001 ; jae 0x10604a ; ret
0x000000000010606b : cmp eax, 0xfffff001 ; jae 0x10607a ; ret
0x0000000000106098 : cmp eax, 0xfffff001 ; jae 0x1060a7 ; ret
0x00000000001060cb : cmp eax, 0xfffff001 ; jae 0x1060da ; ret
0x00000000001060f8 : cmp eax, 0xfffff001 ; jae 0x106107 ; ret
0x0000000000106128 : cmp eax, 0xfffff001 ; jae 0x106137 ; ret
0x000000000010615b : cmp eax, 0xfffff001 ; jae 0x10616a ; ret
0x0000000000106188 : cmp eax, 0xfffff001 ; jae 0x106197 ; ret
0x00000000001061bb : cmp eax, 0xfffff001 ; jae 0x1061ca ; ret
0x00000000001072a8 : cmp eax, 0xfffff001 ; jae 0x1072b7 ; ret
0x00000000001072d8 : cmp eax, 0xfffff001 ; jae 0x1072e7 ; ret
0x0000000000107408 : cmp eax, 0xfffff001 ; jae 0x107417 ; ret
0x0000000000107448 : cmp eax, 0xfffff001 ; jae 0x107457 ; ret
0x0000000000107478 : cmp eax, 0xfffff001 ; jae 0x107487 ; ret
0x00000000001074a8 : cmp eax, 0xfffff001 ; jae 0x1074b7 ; ret
0x00000000001074d8 : cmp eax, 0xfffff001 ; jae 0x1074e7 ; ret
0x00000000001076fb : cmp eax, 0xfffff001 ; jae 0x10770a ; ret
0x0000000000107728 : cmp eax, 0xfffff001 ; jae 0x107737 ; ret
0x0000000000107758 : cmp eax, 0xfffff001 ; jae 0x107767 ; ret
0x0000000000107788 : cmp eax, 0xfffff001 ; jae 0x107797 ; ret
0x00000000001077cb : cmp eax, 0xfffff001 ; jae 0x1077da ; ret
0x00000000001077f8 : cmp eax, 0xfffff001 ; jae 0x107807 ; ret
0x0000000000107828 : cmp eax, 0xfffff001 ; jae 0x107837 ; ret
0x0000000000107858 : cmp eax, 0xfffff001 ; jae 0x107867 ; ret
0x0000000000107888 : cmp eax, 0xfffff001 ; jae 0x107897 ; ret
0x00000000001078b8 : cmp eax, 0xfffff001 ; jae 0x1078c7 ; ret
0x00000000001078e8 : cmp eax, 0xfffff001 ; jae 0x1078f7 ; ret
0x0000000000107918 : cmp eax, 0xfffff001 ; jae 0x107927 ; ret
0x0000000000107948 : cmp eax, 0xfffff001 ; jae 0x107957 ; ret
0x000000000010797b : cmp eax, 0xfffff001 ; jae 0x10798a ; ret
0x00000000001079b4 : cmp eax, 0xfffff001 ; jae 0x1079f6 ; ret
0x0000000000107a08 : cmp eax, 0xfffff001 ; jae 0x107a17 ; ret
0x0000000000107a3b : cmp eax, 0xfffff001 ; jae 0x107a4a ; ret
0x0000000000107a68 : cmp eax, 0xfffff001 ; jae 0x107a77 ; ret
0x0000000000107a98 : cmp eax, 0xfffff001 ; jae 0x107aa7 ; ret
0x0000000000107ac8 : cmp eax, 0xfffff001 ; jae 0x107ad7 ; ret
0x0000000000107af8 : cmp eax, 0xfffff001 ; jae 0x107b07 ; ret
0x0000000000107b28 : cmp eax, 0xfffff001 ; jae 0x107b37 ; ret
0x0000000000107b5b : cmp eax, 0xfffff001 ; jae 0x107b6a ; ret
0x0000000000107b8b : cmp eax, 0xfffff001 ; jae 0x107b9a ; ret
0x0000000000107bb8 : cmp eax, 0xfffff001 ; jae 0x107bc7 ; ret
0x0000000000107be8 : cmp eax, 0xfffff001 ; jae 0x107bf7 ; ret
0x0000000000107c1b : cmp eax, 0xfffff001 ; jae 0x107c2a ; ret
0x0000000000107c4b : cmp eax, 0xfffff001 ; jae 0x107c5a ; ret
0x0000000000107c7b : cmp eax, 0xfffff001 ; jae 0x107c8a ; ret
0x0000000000107cb4 : cmp eax, 0xfffff001 ; jae 0x107cf6 ; ret
0x0000000000107d08 : cmp eax, 0xfffff001 ; jae 0x107d17 ; ret
0x0000000000107d44 : cmp eax, 0xfffff001 ; jae 0x107d86 ; ret
0x0000000000107d98 : cmp eax, 0xfffff001 ; jae 0x107da7 ; ret
0x0000000000107dc8 : cmp eax, 0xfffff001 ; jae 0x107dd7 ; ret
0x0000000000107e04 : cmp eax, 0xfffff001 ; jae 0x107e46 ; ret
0x0000000000107e58 : cmp eax, 0xfffff001 ; jae 0x107e67 ; ret
0x0000000000107e8b : cmp eax, 0xfffff001 ; jae 0x107e9a ; ret
0x0000000000107eb8 : cmp eax, 0xfffff001 ; jae 0x107ec7 ; ret
0x0000000000107ee8 : cmp eax, 0xfffff001 ; jae 0x107ef7 ; ret
0x0000000000107f1b : cmp eax, 0xfffff001 ; jae 0x107f2a ; ret
0x0000000000107f51 : cmp eax, 0xfffff001 ; jae 0x107f90 ; ret
0x0000000000107fa8 : cmp eax, 0xfffff001 ; jae 0x107fb7 ; ret
0x0000000000107fdb : cmp eax, 0xfffff001 ; jae 0x107fea ; ret
0x000000000010800b : cmp eax, 0xfffff001 ; jae 0x10801a ; ret
0x0000000000108061 : cmp eax, 0xfffff001 ; jae 0x1080a0 ; ret
0x00000000001080b8 : cmp eax, 0xfffff001 ; jae 0x1080c7 ; ret
0x00000000001080f1 : cmp eax, 0xfffff001 ; jae 0x108130 ; ret
0x0000000000108148 : cmp eax, 0xfffff001 ; jae 0x108157 ; ret
0x0000000000108178 : cmp eax, 0xfffff001 ; jae 0x108187 ; ret
0x00000000001081ab : cmp eax, 0xfffff001 ; jae 0x1081ba ; ret
0x00000000001081d8 : cmp eax, 0xfffff001 ; jae 0x1081e7 ; ret
0x00000000001082d4 : cmp eax, 0xfffff001 ; jae 0x108316 ; ret
0x0000000000108331 : cmp eax, 0xfffff001 ; jae 0x108370 ; ret
0x0000000000108451 : cmp eax, 0xfffff001 ; jae 0x108490 ; ret
0x00000000001084b4 : cmp eax, 0xfffff001 ; jae 0x1084f6 ; ret
0x000000000010850b : cmp eax, 0xfffff001 ; jae 0x10851a ; ret
0x0000000000108538 : cmp eax, 0xfffff001 ; jae 0x108547 ; ret
0x0000000000108568 : cmp eax, 0xfffff001 ; jae 0x108577 ; ret
0x000000000010859b : cmp eax, 0xfffff001 ; jae 0x1085aa ; ret
0x0000000000108af4 : cmp eax, 0xfffff001 ; jae 0x108b36 ; ret
0x0000000000108b54 : cmp eax, 0xfffff001 ; jae 0x108b96 ; ret
0x0000000000108ba8 : cmp eax, 0xfffff001 ; jae 0x108bb7 ; ret
0x0000000000108bd8 : cmp eax, 0xfffff001 ; jae 0x108be7 ; ret
0x0000000000108c08 : cmp eax, 0xfffff001 ; jae 0x108c17 ; ret
0x0000000000108c38 : cmp eax, 0xfffff001 ; jae 0x108c47 ; ret
0x0000000000108c6b : cmp eax, 0xfffff001 ; jae 0x108c7a ; ret
0x0000000000108c9b : cmp eax, 0xfffff001 ; jae 0x108caa ; ret
0x0000000000108cc8 : cmp eax, 0xfffff001 ; jae 0x108cd7 ; ret
0x0000000000108cf8 : cmp eax, 0xfffff001 ; jae 0x108d07 ; ret
0x0000000000108d28 : cmp eax, 0xfffff001 ; jae 0x108d37 ; ret
0x0000000000108d58 : cmp eax, 0xfffff001 ; jae 0x108d67 ; ret
0x000000000014065b : cmp eax, 0xfffff001 ; jae 0x14066a ; ret
0x00000000001406ab : cmp eax, 0xfffff001 ; jae 0x1406ba ; ret
0x0000000000035768 : cmp eax, 0xfffff001 ; jae 0x35777 ; ret
0x0000000000035e28 : cmp eax, 0xfffff001 ; jae 0x35e37 ; ret
0x0000000000047b22 : cmp eax, 0xfffff001 ; jae 0x47b35 ; xor eax, eax ; ret
0x000000000006b368 : cmp eax, 0xfffff001 ; jae 0x6b377 ; ret
0x000000000006b39b : cmp eax, 0xfffff001 ; jae 0x6b3aa ; ret
0x00000000000bc518 : cmp eax, 0xfffff001 ; jae 0xbc527 ; ret
0x00000000000bf608 : cmp eax, 0xfffff001 ; jae 0xbf617 ; ret
0x00000000000bf638 : cmp eax, 0xfffff001 ; jae 0xbf647 ; ret
0x00000000000cbf38 : cmp eax, 0xfffff001 ; jae 0xcbf47 ; ret
0x00000000000cc12b : cmp eax, 0xfffff001 ; jae 0xcc13a ; ret
0x00000000000cc208 : cmp eax, 0xfffff001 ; jae 0xcc217 ; ret
0x00000000000cc291 : cmp eax, 0xfffff001 ; jae 0xcc2d0 ; ret
0x00000000000cc2f1 : cmp eax, 0xfffff001 ; jae 0xcc330 ; ret
0x00000000000cc6f2 : cmp eax, 0xfffff001 ; jae 0xcc701 ; ret
0x00000000000cc778 : cmp eax, 0xfffff001 ; jae 0xcc787 ; ret
0x00000000000cd288 : cmp eax, 0xfffff001 ; jae 0xcd297 ; ret
0x00000000000cd428 : cmp eax, 0xfffff001 ; jae 0xcd437 ; ret
0x00000000000cd458 : cmp eax, 0xfffff001 ; jae 0xcd467 ; ret
0x00000000000cd4b8 : cmp eax, 0xfffff001 ; jae 0xcd4c7 ; ret
0x00000000000cd4e8 : cmp eax, 0xfffff001 ; jae 0xcd4f7 ; ret
0x00000000000cd518 : cmp eax, 0xfffff001 ; jae 0xcd527 ; ret
0x00000000000cd548 : cmp eax, 0xfffff001 ; jae 0xcd557 ; ret
0x00000000000ea738 : cmp eax, 0xfffff001 ; jae 0xea747 ; ret
0x00000000000ea768 : cmp eax, 0xfffff001 ; jae 0xea777 ; ret
0x00000000000ea798 : cmp eax, 0xfffff001 ; jae 0xea7a7 ; ret
0x00000000000ea7c8 : cmp eax, 0xfffff001 ; jae 0xea7d7 ; ret
0x00000000000ea7f8 : cmp eax, 0xfffff001 ; jae 0xea807 ; ret
0x00000000000ea828 : cmp eax, 0xfffff001 ; jae 0xea837 ; ret
0x00000000000ea858 : cmp eax, 0xfffff001 ; jae 0xea867 ; ret
0x00000000000ea888 : cmp eax, 0xfffff001 ; jae 0xea897 ; ret
0x00000000000f5a44 : cmp eax, 0xfffff001 ; jae 0xf5a86 ; ret
0x00000000000f5aa4 : cmp eax, 0xfffff001 ; jae 0xf5ae6 ; ret
0x00000000000f6b18 : cmp eax, 0xfffff001 ; jae 0xf6b27 ; ret
0x00000000000f6db8 : cmp eax, 0xfffff001 ; jae 0xf6dc7 ; ret
0x00000000000f6de8 : cmp eax, 0xfffff001 ; jae 0xf6df7 ; ret
0x00000000000f6eb8 : cmp eax, 0xfffff001 ; jae 0xf6ec7 ; ret
0x00000000000f6ee8 : cmp eax, 0xfffff001 ; jae 0xf6ef7 ; ret
0x00000000000f6fa8 : cmp eax, 0xfffff001 ; jae 0xf6fb7 ; ret
0x00000000000f6fd8 : cmp eax, 0xfffff001 ; jae 0xf6fe7 ; ret
0x00000000000f7011 : cmp eax, 0xfffff001 ; jae 0xf7050 ; ret
0x00000000000f7231 : cmp eax, 0xfffff001 ; jae 0xf7270 ; ret
0x00000000000f7291 : cmp eax, 0xfffff001 ; jae 0xf72d0 ; ret
0x00000000000f72e8 : cmp eax, 0xfffff001 ; jae 0xf72f7 ; ret
0x00000000000f7778 : cmp eax, 0xfffff001 ; jae 0xf7787 ; ret
0x00000000000f78c1 : cmp eax, 0xfffff001 ; jae 0xf7900 ; ret
0x00000000000f7918 : cmp eax, 0xfffff001 ; jae 0xf7927 ; ret
0x00000000000f7948 : cmp eax, 0xfffff001 ; jae 0xf7957 ; ret
0x00000000000f7978 : cmp eax, 0xfffff001 ; jae 0xf7987 ; ret
0x00000000000f79a8 : cmp eax, 0xfffff001 ; jae 0xf79b7 ; ret
0x00000000000f79d8 : cmp eax, 0xfffff001 ; jae 0xf79e7 ; ret
0x00000000000f7a11 : cmp eax, 0xfffff001 ; jae 0xf7a50 ; ret
0x00000000000f7a68 : cmp eax, 0xfffff001 ; jae 0xf7a77 ; ret
0x00000000000f7a98 : cmp eax, 0xfffff001 ; jae 0xf7aa7 ; ret
0x00000000000f82c8 : cmp eax, 0xfffff001 ; jae 0xf82d7 ; ret
0x00000000000f82f8 : cmp eax, 0xfffff001 ; jae 0xf8307 ; ret
0x00000000000f8328 : cmp eax, 0xfffff001 ; jae 0xf8337 ; ret
0x00000000000f835b : cmp eax, 0xfffff001 ; jae 0xf836a ; ret
0x00000000000f8938 : cmp eax, 0xfffff001 ; jae 0xf8947 ; ret
0x00000000000f896b : cmp eax, 0xfffff001 ; jae 0xf897a ; ret
0x00000000000f8998 : cmp eax, 0xfffff001 ; jae 0xf89a7 ; ret
0x00000000000f89c8 : cmp eax, 0xfffff001 ; jae 0xf89d7 ; ret
0x00000000000f89f8 : cmp eax, 0xfffff001 ; jae 0xf8a07 ; ret
0x00000000000f8a2b : cmp eax, 0xfffff001 ; jae 0xf8a3a ; ret
0x00000000000f8a58 : cmp eax, 0xfffff001 ; jae 0xf8a67 ; ret
0x00000000000f8a88 : cmp eax, 0xfffff001 ; jae 0xf8a97 ; ret
0x00000000000f8ab8 : cmp eax, 0xfffff001 ; jae 0xf8ac7 ; ret
0x00000000000fb6f1 : cmp eax, 0xfffff001 ; jae 0xfb730 ; ret
0x00000000000fba5b : cmp eax, 0xfffff001 ; jae 0xfba6a ; ret
0x00000000000fc1d4 : cmp eax, 0xfffff001 ; jae 0xfc216 ; ret
0x00000000000fc928 : cmp eax, 0xfffff001 ; jae 0xfc937 ; ret
0x00000000000fc958 : cmp eax, 0xfffff001 ; jae 0xfc967 ; ret
0x00000000000fc988 : cmp eax, 0xfffff001 ; jae 0xfc997 ; ret
0x00000000000fcd28 : cmp eax, 0xfffff001 ; jae 0xfcd37 ; ret
0x00000000000fcf08 : cmp eax, 0xfffff001 ; jae 0xfcf17 ; ret
0x00000000000fcf41 : cmp eax, 0xfffff001 ; jae 0xfcf80 ; ret
0x00000000000fcfa1 : cmp eax, 0xfffff001 ; jae 0xfcfe0 ; ret
0x00000000000fd498 : cmp eax, 0xfffff001 ; jae 0xfd4a7 ; ret
0x00000000000fd538 : cmp eax, 0xfffff001 ; jae 0xfd547 ; ret
0x00000000000fd574 : cmp eax, 0xfffff001 ; jae 0xfd5b6 ; ret
0x00000000000fd6c8 : cmp eax, 0xfffff001 ; jae 0xfd6d7 ; ret
0x00000000000fd6f8 : cmp eax, 0xfffff001 ; jae 0xfd707 ; ret
0x00000000000fd731 : cmp eax, 0xfffff001 ; jae 0xfd770 ; ret
0x00000000000fd788 : cmp eax, 0xfffff001 ; jae 0xfd797 ; ret
0x00000000000fd7c1 : cmp eax, 0xfffff001 ; jae 0xfd800 ; ret
0x00000000000fd818 : cmp eax, 0xfffff001 ; jae 0xfd827 ; ret
0x00000000000fdb88 : cmp eax, 0xfffff001 ; jae 0xfdb97 ; ret
0x00000000000fdbb8 : cmp eax, 0xfffff001 ; jae 0xfdbc7 ; ret
0x00000000000fdbe8 : cmp eax, 0xfffff001 ; jae 0xfdbf7 ; ret
0x00000000000ff138 : cmp eax, 0xfffff001 ; jae 0xff147 ; ret
0x00000000000ff168 : cmp eax, 0xfffff001 ; jae 0xff177 ; ret
0x0000000000115b08 : cmp eax, 0xfffffe93 ; call rax
0x00000000000aad2f : cmp eax, 2 ; je 0xaad47 ; xor eax, eax ; ret
0x000000000013aa51 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000daf2e : cmp eax, 3 ; je 0xdaf48 ; xor eax, eax ; pop rbx ; ret
0x000000000011511a : cmp eax, 4 ; je 0x115125 ; ret
0x000000000019f6bd : cmp eax, dword ptr [rax] ; add byte ptr [rax], ah ; sub edx, ebp ; jmp rax
0x0000000000079615 : cmp eax, dword ptr [rdi + 0x10] ; jae 0x79628 ; movzx eax, byte ptr [rax] ; ret
0x000000000019b1bd : cmp eax, dword ptr [rdx] ; add byte ptr [rsi + rdi - 6], dh ; jmp rsp
0x00000000001bd1c4 : cmp eax, dword ptr [rip + 0x1e70000] ; add byte ptr [rax], al ; ret 4
0x0000000000103af1 : cmp eax, dword ptr [rip - 0x9cf0000] ; mov rdi, r12 ; call rbx
0x00000000000abb6e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xabc69 ; ret
0x00000000000abb83 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xabc69 ; ret
0x00000000000abb98 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xabc69 ; ret
0x00000000000abbb3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xabc69 ; ret
0x00000000000abbce : cmp eax, dword ptr [rsi + 0x20] ; jne 0xabc69 ; ret
0x00000000000abbe3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xabc65 ; ret
0x00000000000abbf8 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xabc65 ; ret
0x00000000000abc03 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc65 ; ret
0x00000000000abc1e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xabc65 ; ret
0x00000000000abc33 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xabc65 ; ret
0x00000000000abc48 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xabc65 ; ret
0x00000000000abc53 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc65 ; ret
0x00000000000abb53 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xabc69 ; ret
0x00000000000abb23 : cmp eax, dword ptr [rsi + 4] ; jne 0xabc69 ; ret
0x00000000000abb38 : cmp eax, dword ptr [rsi + 8] ; jne 0xabc69 ; ret
0x00000000001727ba : cmp eax, dword ptr [rsi - 0x10] ; jne 0x1728f9 ; ret
0x00000000001727d3 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x1728f9 ; ret
0x00000000001728e3 : cmp eax, dword ptr [rsi - 4] ; jne 0x1728f7 ; xor eax, eax ; ret
0x0000000000172803 : cmp eax, dword ptr [rsi - 4] ; jne 0x1728f9 ; ret
0x00000000001727e8 : cmp eax, dword ptr [rsi - 8] ; jne 0x1728f9 ; ret
0x00000000000abb0d : cmp eax, dword ptr [rsi] ; jne 0xabc68 ; ret
0x0000000000100d74 : cmp eax, ecx ; cmovne rbx, rax ; call 0xfcf98
0x000000000007cc49 : cmp eax, ecx ; jae 0x7cc77 ; movzx eax, byte ptr [rax] ; ret
0x000000000009ec2d : cmp eax, ecx ; je 0x9ec15 ; ret
0x0000000000003af7 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001722d3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000011498b : cmp eax, edx ; jb 0x114986 ; xor eax, eax ; ret
0x00000000001382a1 : cmp eax, edx ; je 0x1382b8 ; add rsp, 8 ; ret
0x000000000012357a : cmp eax, edx ; jne 0x123559 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000048085 : cmp eax, edx ; jne 0x4807e ; xor eax, eax ; ret
0x000000000008873d : cmp eax, edx ; jne 0x886f7 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d1 : cmp eax, esi ; jae 0x7b289 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000010e989 : cmp eax, esi ; jb 0x10e9a1 ; mov eax, 1 ; ret
0x00000000000d7648 : cmp eax, esi ; jge 0xd7625 ; mov edx, eax ; jmp 0xd762e
0x0000000000197269 : cmp ebp, ebx ; jmp rsp
0x0000000000101fb5 : cmp ebp, esi ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001150b6 : cmp ebx, 0xa ; je 0x1150c1 ; ret
0x00000000000c038f : cmp ebx, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x000000000007eed5 : cmp ebx, eax ; je 0x7eee6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017433a : cmp ebx, ebp ; jae 0x17434d ; call qword ptr [rbx]
0x000000000017433a : cmp ebx, ebp ; jae 0x174351 ; call qword ptr [rbx]
0x0000000000174369 : cmp ebx, ebp ; jb 0x174363 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000048b7c : cmp ecx, 0xff ; jne 0x48b79 ; mov rax, rdx ; ret
0x00000000000f0e35 : cmp ecx, dword ptr [rax + 0x39] ; ret 0x860f
0x000000000012c465 : cmp ecx, dword ptr [rax - 0x75] ; or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000f4159 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000024ca1 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000bc6c0 : cmp ecx, dword ptr [rdi] ; imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000009dab7 : cmp ecx, dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8348
0x000000000009bb73 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8348
0x0000000000074f4e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000001fb03 : cmp ecx, eax ; je 0x1faa8 ; jmp 0x1fad1
0x000000000016f9cb : cmp ecx, eax ; jne 0x16f9f9 ; xor eax, eax ; ret
0x000000000017080b : cmp ecx, eax ; jne 0x170839 ; xor eax, eax ; ret
0x000000000017083f : cmp ecx, eax ; jne 0x17084c ; xor eax, eax ; ret
0x000000000013be83 : cmp ecx, edx ; jae 0x13be96 ; xor eax, eax ; ret
0x000000000013bec3 : cmp ecx, edx ; jae 0x13bed6 ; xor eax, eax ; ret
0x000000000009ebd8 : cmp ecx, edx ; je 0x9ebd9 ; cmp ecx, esi ; je 0x9ebd9 ; ret
0x000000000009ebdc : cmp ecx, esi ; je 0x9ebd5 ; ret
0x00000000000acc19 : cmp edi, 0x7f ; ja 0xacc2f ; mov eax, edi ; ret
0x0000000000095cf7 : cmp edi, 0xd ; je 0x95d11 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000174578 : cmp edi, 1 ; ja 0x174585 ; ret
0x000000000010a69d : cmp edi, 9 ; setbe al ; ret
0x000000000004a49a : cmp edi, eax ; jbe 0x4a498 ; nop ; pop rbx ; ret
0x00000000000504b5 : cmp edi, ecx ; ja 0x504a0 ; mov eax, r8d ; ret
0x000000000019aa01 : cmp edi, ecx ; jmp rsp
0x00000000000fcdf1 : cmp edi, edx ; ja 0xfce25 ; ret
0x00000000000f6a10 : cmp edi, esi ; ja 0xf6a05 ; ret
0x000000000004a5bb : cmp edi, esi ; mov rax, rsi ; cmovae rax, rdi ; ret
0x0000000000195ba5 : cmp edi, esp ; call qword ptr [rax + 0x10fffc3c]
0x0000000000195be5 : cmp edi, esp ; call qword ptr [rax]
0x00000000000cd1f8 : cmp edx, 0 ; mov eax, edx ; jle 0xcd210 ; ret
0x000000000011938f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000b957d : cmp edx, 0x8944ffff ; ret 0x894d
0x000000000003aa00 : cmp edx, 0xff ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000d16a6 : cmp edx, 1 ; sete al ; ret
0x000000000002da7b : cmp edx, dword ptr [rdi + 4] ; jb 0x2da8e ; ret
0x0000000000115362 : cmp edx, eax ; jne 0x115345 ; ret
0x0000000000083f8a : cmp edx, eax ; jne 0x83f55 ; ret
0x00000000000ac167 : cmp edx, eax ; jne 0xac157 ; xor eax, eax ; ret
0x0000000000123496 : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000196e61 : cmp edx, ebp ; jmp rsp
0x000000000013bd6f : cmp edx, ecx ; je 0x13bd85 ; ret
0x000000000008f2e8 : cmp edx, ecx ; jne 0x8f2d5 ; ret
0x00000000000cda97 : cmp edx, ecx ; jne 0xcdac4 ; ret
0x0000000000114a6a : cmp edx, edi ; setae al ; ret
0x0000000000123e86 : cmp edx, esi ; jb 0x123e7d ; mov eax, 0xffffffff ; ret
0x000000000009ebb8 : cmp edx, esi ; je 0x9ebb5 ; ret
0x00000000000adac6 : cmp edx, esi ; je 0xadad7 ; test edx, edx ; jne 0xadac9 ; ret
0x0000000000073059 : cmp esi, 0xff ; setne al ; neg eax ; ret
0x00000000000774f8 : cmp esi, 2 ; je 0x77510 ; mov dword ptr [rdi], edx ; ret
0x000000000002a695 : cmp esi, 3 ; je 0x2a6a6 ; pop rbx ; ret
0x00000000000ac821 : cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x000000000012e7aa : cmp esi, dword ptr [rdx + 0x28] ; ja 0x12e7a1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000188a70 : cmp esi, dword ptr [rdx - 0x440b000d] ; jmp qword ptr [rdx]
0x0000000000185284 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000072d5a : cmp esi, ecx ; jb 0x72d57 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000014a918 : cmp esi, ecx ; jle 0x14a85d ; ret
0x000000000007c00a : cmp esi, ecx ; jne 0x7c007 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000123efe : cmp esi, edx ; ja 0x123eed ; mov eax, 0xffffffff ; ret
0x000000000004821d : cmp esi, edx ; jne 0x48216 ; xor eax, eax ; ret
0x0000000000195e4d : cmp esp, 0xfc7710ff ; call rax
0x0000000000195c4d : cmp esp, 0xfc8166ff ; call rsi
0x0000000000195e49 : cmp esp, 0xfc8170ff ; call qword ptr [rax]
0x0000000000195e09 : cmp esp, 0xfc817aff ; jmp qword ptr [rax]
0x0000000000195e11 : cmp esp, 0xfc8790ff ; jmp qword ptr [rax]
0x00000000000796a1 : cmp esp, dword ptr [rax + 0xf480034] ; ret 0x8948
0x0000000000174574 : cmp esp, dword ptr [rip - 0x7cb800] ; add dword ptr [rdi + 3], esi ; ret
0x0000000000174565 : cmp esp, dword ptr [rip] ; add bl, dh ; ret
0x0000000000195ba1 : cmp esp, edi ; call qword ptr [rax]
0x00000000000f69dc : cmp esp, esi ; ja 0xf6978 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072aa7 : cmp qword ptr [rax + 0x30], 0 ; je 0x72ab7 ; ret
0x00000000000773e3 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000007b560 : cmp qword ptr [rdi + 0x38], 0 ; je 0x7b577 ; ret
0x0000000000114a07 : cmp qword ptr [rdi], 0 ; je 0x114a1f ; ret
0x00000000001024ac : cmp qword ptr [rsi], 0 ; je 0x1024bf ; pop rbx ; ret
0x0000000000094cd2 : cmp r11b, r14b ; ret
0x00000000001150b5 : cmp r11d, 0xa ; je 0x1150c2 ; ret
0x00000000000f69db : cmp r12, rsi ; ja 0xf6979 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005c465 : cmp r12b, 0x49 ; cmove esi, ecx ; jmp 0x5c438
0x000000000009ec2c : cmp r8d, ecx ; je 0x9ec16 ; ret
0x00000000000d7647 : cmp r8d, esi ; jge 0xd7626 ; mov edx, eax ; jmp 0xd762f
0x000000000001fb02 : cmp r9, rax ; je 0x1faa9 ; jmp 0x1fad2
0x00000000000e0fbf : cmp r9b, 0x11 ; je 0xe1003 ; mov rdx, rax ; jmp 0xe0f67
0x000000000010f181 : cmp r9b, r13b ; ret
0x000000000010567e : cmp rax, -0x1000 ; ja 0x105699 ; ret
0x000000000010733e : cmp rax, -0x1000 ; ja 0x107359 ; ret
0x0000000000107580 : cmp rax, -0x1000 ; ja 0x107598 ; ret
0x0000000000107632 : cmp rax, -0x1000 ; ja 0x107649 ; ret
0x000000000010766c : cmp rax, -0x1000 ; ja 0x107689 ; ret
0x000000000010821d : cmp rax, -0x1000 ; ja 0x108238 ; ret
0x000000000010839d : cmp rax, -0x1000 ; ja 0x1083b8 ; ret
0x0000000000108837 : cmp rax, -0x1000 ; ja 0x108848 ; ret
0x00000000001088d9 : cmp rax, -0x1000 ; ja 0x1088f0 ; ret
0x0000000000108989 : cmp rax, -0x1000 ; ja 0x1089a0 ; ret
0x00000000001157ea : cmp rax, -0x1000 ; ja 0x115801 ; ret
0x0000000000115897 : cmp rax, -0x1000 ; ja 0x1158c3 ; ret
0x000000000011755c : cmp rax, -0x1000 ; ja 0x117579 ; ret
0x000000000011760c : cmp rax, -0x1000 ; ja 0x117629 ; ret
0x0000000000035428 : cmp rax, -0x1000 ; ja 0x35459 ; ret
0x0000000000035730 : cmp rax, -0x1000 ; ja 0x35749 ; ret
0x000000000003579c : cmp rax, -0x1000 ; ja 0x357b9 ; ret
0x00000000000357e6 : cmp rax, -0x1000 ; ja 0x357f8 ; ret
0x00000000000bc437 : cmp rax, -0x1000 ; ja 0xbc451 ; ret
0x00000000000c83d7 : cmp rax, -0x1000 ; ja 0xc83f1 ; pop rbx ; ret
0x00000000000c9651 : cmp rax, -0x1000 ; ja 0xc9668 ; ret
0x00000000000cbfe0 : cmp rax, -0x1000 ; ja 0xcbff8 ; ret
0x00000000000cc07a : cmp rax, -0x1000 ; ja 0xcc090 ; ret
0x00000000000cc16b : cmp rax, -0x1000 ; ja 0xcc180 ; ret
0x00000000000cd2c3 : cmp rax, -0x1000 ; ja 0xcd2d8 ; ret
0x00000000000cd333 : cmp rax, -0x1000 ; ja 0xcd348 ; ret
0x00000000000cd587 : cmp rax, -0x1000 ; ja 0xcd598 ; ret
0x00000000000cd607 : cmp rax, -0x1000 ; ja 0xcd618 ; ret
0x00000000000f6bb5 : cmp rax, -0x1000 ; ja 0xf6bc9 ; ret
0x00000000000f6c04 : cmp rax, -0x1000 ; ja 0xf6c19 ; ret
0x00000000000f6c55 : cmp rax, -0x1000 ; ja 0xf6c69 ; ret
0x00000000000f6cad : cmp rax, -0x1000 ; ja 0xf6cc9 ; ret
0x00000000000f6d11 : cmp rax, -0x1000 ; ja 0xf6d29 ; ret
0x00000000000f6d6a : cmp rax, -0x1000 ; ja 0xf6d81 ; ret
0x00000000000f6f49 : cmp rax, -0x1000 ; ja 0xf6f61 ; ret
0x00000000000f7613 : cmp rax, -0x1000 ; ja 0xf7659 ; ret
0x00000000000fba92 : cmp rax, -0x1000 ; ja 0xfbaa9 ; ret
0x00000000000fbae6 : cmp rax, -0x1000 ; ja 0xfbaf9 ; ret
0x00000000000fc23a : cmp rax, -0x1000 ; ja 0xfc250 ; ret
0x00000000000fc75e : cmp rax, -0x1000 ; ja 0xfc778 ; ret
0x00000000000fd00a : cmp rax, -0x1000 ; ja 0xfd020 ; ret
0x00000000000fd0ba : cmp rax, -0x1000 ; ja 0xfd0d0 ; ret
0x00000000000fd165 : cmp rax, -0x1000 ; ja 0xfd178 ; ret
0x00000000000fd1d5 : cmp rax, -0x1000 ; ja 0xfd1e8 ; ret
0x00000000000fd256 : cmp rax, -0x1000 ; ja 0xfd268 ; ret
0x00000000000fd306 : cmp rax, -0x1000 ; ja 0xfd318 ; ret
0x00000000000fd856 : cmp rax, -0x1000 ; ja 0xfd869 ; ret
0x00000000000fef77 : cmp rax, -0x1000 ; ja 0xfef91 ; ret
0x00000000000ff00b : cmp rax, -0x1000 ; ja 0xff021 ; ret
0x00000000000ff0ab : cmp rax, -0x1000 ; ja 0xff0c1 ; ret
0x00000000000ff0ff : cmp rax, -0x1000 ; ja 0xff119 ; ret
0x0000000000101499 : cmp rax, -0xfff ; jae 0x1014aa ; ret
0x0000000000101707 : cmp rax, -0xfff ; jae 0x101718 ; ret
0x0000000000101737 : cmp rax, -0xfff ; jae 0x101748 ; ret
0x0000000000101770 : cmp rax, -0xfff ; jae 0x1017b1 ; ret
0x00000000001017c7 : cmp rax, -0xfff ; jae 0x1017d8 ; ret
0x00000000001017f7 : cmp rax, -0xfff ; jae 0x101808 ; ret
0x000000000010182a : cmp rax, -0xfff ; jae 0x10183b ; ret
0x0000000000101857 : cmp rax, -0xfff ; jae 0x101868 ; ret
0x0000000000101887 : cmp rax, -0xfff ; jae 0x101898 ; ret
0x00000000001018b7 : cmp rax, -0xfff ; jae 0x1018c8 ; ret
0x00000000001018e7 : cmp rax, -0xfff ; jae 0x1018f8 ; ret
0x0000000000105faa : cmp rax, -0xfff ; jae 0x105fbb ; ret
0x0000000000105fd7 : cmp rax, -0xfff ; jae 0x105fe8 ; ret
0x0000000000106007 : cmp rax, -0xfff ; jae 0x106018 ; ret
0x000000000010603a : cmp rax, -0xfff ; jae 0x10604b ; ret
0x000000000010606a : cmp rax, -0xfff ; jae 0x10607b ; ret
0x0000000000106097 : cmp rax, -0xfff ; jae 0x1060a8 ; ret
0x00000000001060ca : cmp rax, -0xfff ; jae 0x1060db ; ret
0x00000000001060f7 : cmp rax, -0xfff ; jae 0x106108 ; ret
0x0000000000106127 : cmp rax, -0xfff ; jae 0x106138 ; ret
0x000000000010615a : cmp rax, -0xfff ; jae 0x10616b ; ret
0x0000000000106187 : cmp rax, -0xfff ; jae 0x106198 ; ret
0x00000000001061ba : cmp rax, -0xfff ; jae 0x1061cb ; ret
0x00000000001072a7 : cmp rax, -0xfff ; jae 0x1072b8 ; ret
0x00000000001072d7 : cmp rax, -0xfff ; jae 0x1072e8 ; ret
0x0000000000107407 : cmp rax, -0xfff ; jae 0x107418 ; ret
0x0000000000107447 : cmp rax, -0xfff ; jae 0x107458 ; ret
0x0000000000107477 : cmp rax, -0xfff ; jae 0x107488 ; ret
0x00000000001074a7 : cmp rax, -0xfff ; jae 0x1074b8 ; ret
0x00000000001074d7 : cmp rax, -0xfff ; jae 0x1074e8 ; ret
0x00000000001076fa : cmp rax, -0xfff ; jae 0x10770b ; ret
0x0000000000107727 : cmp rax, -0xfff ; jae 0x107738 ; ret
0x0000000000107757 : cmp rax, -0xfff ; jae 0x107768 ; ret
0x0000000000107787 : cmp rax, -0xfff ; jae 0x107798 ; ret
0x00000000001077ca : cmp rax, -0xfff ; jae 0x1077db ; ret
0x00000000001077f7 : cmp rax, -0xfff ; jae 0x107808 ; ret
0x0000000000107827 : cmp rax, -0xfff ; jae 0x107838 ; ret
0x0000000000107857 : cmp rax, -0xfff ; jae 0x107868 ; ret
0x0000000000107887 : cmp rax, -0xfff ; jae 0x107898 ; ret
0x00000000001078b7 : cmp rax, -0xfff ; jae 0x1078c8 ; ret
0x00000000001078e7 : cmp rax, -0xfff ; jae 0x1078f8 ; ret
0x0000000000107917 : cmp rax, -0xfff ; jae 0x107928 ; ret
0x0000000000107947 : cmp rax, -0xfff ; jae 0x107958 ; ret
0x000000000010797a : cmp rax, -0xfff ; jae 0x10798b ; ret
0x00000000001079b3 : cmp rax, -0xfff ; jae 0x1079f7 ; ret
0x0000000000107a07 : cmp rax, -0xfff ; jae 0x107a18 ; ret
0x0000000000107a3a : cmp rax, -0xfff ; jae 0x107a4b ; ret
0x0000000000107a67 : cmp rax, -0xfff ; jae 0x107a78 ; ret
0x0000000000107a97 : cmp rax, -0xfff ; jae 0x107aa8 ; ret
0x0000000000107ac7 : cmp rax, -0xfff ; jae 0x107ad8 ; ret
0x0000000000107af7 : cmp rax, -0xfff ; jae 0x107b08 ; ret
0x0000000000107b27 : cmp rax, -0xfff ; jae 0x107b38 ; ret
0x0000000000107b5a : cmp rax, -0xfff ; jae 0x107b6b ; ret
0x0000000000107b8a : cmp rax, -0xfff ; jae 0x107b9b ; ret
0x0000000000107bb7 : cmp rax, -0xfff ; jae 0x107bc8 ; ret
0x0000000000107be7 : cmp rax, -0xfff ; jae 0x107bf8 ; ret
0x0000000000107c1a : cmp rax, -0xfff ; jae 0x107c2b ; ret
0x0000000000107c4a : cmp rax, -0xfff ; jae 0x107c5b ; ret
0x0000000000107c7a : cmp rax, -0xfff ; jae 0x107c8b ; ret
0x0000000000107cb3 : cmp rax, -0xfff ; jae 0x107cf7 ; ret
0x0000000000107d07 : cmp rax, -0xfff ; jae 0x107d18 ; ret
0x0000000000107d43 : cmp rax, -0xfff ; jae 0x107d87 ; ret
0x0000000000107d97 : cmp rax, -0xfff ; jae 0x107da8 ; ret
0x0000000000107dc7 : cmp rax, -0xfff ; jae 0x107dd8 ; ret
0x0000000000107e03 : cmp rax, -0xfff ; jae 0x107e47 ; ret
0x0000000000107e57 : cmp rax, -0xfff ; jae 0x107e68 ; ret
0x0000000000107e8a : cmp rax, -0xfff ; jae 0x107e9b ; ret
0x0000000000107eb7 : cmp rax, -0xfff ; jae 0x107ec8 ; ret
0x0000000000107ee7 : cmp rax, -0xfff ; jae 0x107ef8 ; ret
0x0000000000107f1a : cmp rax, -0xfff ; jae 0x107f2b ; ret
0x0000000000107f50 : cmp rax, -0xfff ; jae 0x107f91 ; ret
0x0000000000107fa7 : cmp rax, -0xfff ; jae 0x107fb8 ; ret
0x0000000000107fda : cmp rax, -0xfff ; jae 0x107feb ; ret
0x000000000010800a : cmp rax, -0xfff ; jae 0x10801b ; ret
0x0000000000108060 : cmp rax, -0xfff ; jae 0x1080a1 ; ret
0x00000000001080b7 : cmp rax, -0xfff ; jae 0x1080c8 ; ret
0x00000000001080f0 : cmp rax, -0xfff ; jae 0x108131 ; ret
0x0000000000108147 : cmp rax, -0xfff ; jae 0x108158 ; ret
0x0000000000108177 : cmp rax, -0xfff ; jae 0x108188 ; ret
0x00000000001081aa : cmp rax, -0xfff ; jae 0x1081bb ; ret
0x00000000001081d7 : cmp rax, -0xfff ; jae 0x1081e8 ; ret
0x00000000001082d3 : cmp rax, -0xfff ; jae 0x108317 ; ret
0x0000000000108330 : cmp rax, -0xfff ; jae 0x108371 ; ret
0x0000000000108450 : cmp rax, -0xfff ; jae 0x108491 ; ret
0x00000000001084b3 : cmp rax, -0xfff ; jae 0x1084f7 ; ret
0x000000000010850a : cmp rax, -0xfff ; jae 0x10851b ; ret
0x0000000000108537 : cmp rax, -0xfff ; jae 0x108548 ; ret
0x0000000000108567 : cmp rax, -0xfff ; jae 0x108578 ; ret
0x000000000010859a : cmp rax, -0xfff ; jae 0x1085ab ; ret
0x0000000000108af3 : cmp rax, -0xfff ; jae 0x108b37 ; ret
0x0000000000108b53 : cmp rax, -0xfff ; jae 0x108b97 ; ret
0x0000000000108ba7 : cmp rax, -0xfff ; jae 0x108bb8 ; ret
0x0000000000108bd7 : cmp rax, -0xfff ; jae 0x108be8 ; ret
0x0000000000108c07 : cmp rax, -0xfff ; jae 0x108c18 ; ret
0x0000000000108c37 : cmp rax, -0xfff ; jae 0x108c48 ; ret
0x0000000000108c6a : cmp rax, -0xfff ; jae 0x108c7b ; ret
0x0000000000108c9a : cmp rax, -0xfff ; jae 0x108cab ; ret
0x0000000000108cc7 : cmp rax, -0xfff ; jae 0x108cd8 ; ret
0x0000000000108cf7 : cmp rax, -0xfff ; jae 0x108d08 ; ret
0x0000000000108d27 : cmp rax, -0xfff ; jae 0x108d38 ; ret
0x0000000000108d57 : cmp rax, -0xfff ; jae 0x108d68 ; ret
0x000000000014065a : cmp rax, -0xfff ; jae 0x14066b ; ret
0x00000000001406aa : cmp rax, -0xfff ; jae 0x1406bb ; ret
0x0000000000035767 : cmp rax, -0xfff ; jae 0x35778 ; ret
0x0000000000035e27 : cmp rax, -0xfff ; jae 0x35e38 ; ret
0x000000000006b367 : cmp rax, -0xfff ; jae 0x6b378 ; ret
0x000000000006b39a : cmp rax, -0xfff ; jae 0x6b3ab ; ret
0x00000000000bc517 : cmp rax, -0xfff ; jae 0xbc528 ; ret
0x00000000000bf607 : cmp rax, -0xfff ; jae 0xbf618 ; ret
0x00000000000bf637 : cmp rax, -0xfff ; jae 0xbf648 ; ret
0x00000000000cbf37 : cmp rax, -0xfff ; jae 0xcbf48 ; ret
0x00000000000cc12a : cmp rax, -0xfff ; jae 0xcc13b ; ret
0x00000000000cc207 : cmp rax, -0xfff ; jae 0xcc218 ; ret
0x00000000000cc290 : cmp rax, -0xfff ; jae 0xcc2d1 ; ret
0x00000000000cc2f0 : cmp rax, -0xfff ; jae 0xcc331 ; ret
0x00000000000cc777 : cmp rax, -0xfff ; jae 0xcc788 ; ret
0x00000000000cd287 : cmp rax, -0xfff ; jae 0xcd298 ; ret
0x00000000000cd427 : cmp rax, -0xfff ; jae 0xcd438 ; ret
0x00000000000cd457 : cmp rax, -0xfff ; jae 0xcd468 ; ret
0x00000000000cd4b7 : cmp rax, -0xfff ; jae 0xcd4c8 ; ret
0x00000000000cd4e7 : cmp rax, -0xfff ; jae 0xcd4f8 ; ret
0x00000000000cd517 : cmp rax, -0xfff ; jae 0xcd528 ; ret
0x00000000000cd547 : cmp rax, -0xfff ; jae 0xcd558 ; ret
0x00000000000ea737 : cmp rax, -0xfff ; jae 0xea748 ; ret
0x00000000000ea767 : cmp rax, -0xfff ; jae 0xea778 ; ret
0x00000000000ea797 : cmp rax, -0xfff ; jae 0xea7a8 ; ret
0x00000000000ea7c7 : cmp rax, -0xfff ; jae 0xea7d8 ; ret
0x00000000000ea7f7 : cmp rax, -0xfff ; jae 0xea808 ; ret
0x00000000000ea827 : cmp rax, -0xfff ; jae 0xea838 ; ret
0x00000000000ea857 : cmp rax, -0xfff ; jae 0xea868 ; ret
0x00000000000ea887 : cmp rax, -0xfff ; jae 0xea898 ; ret
0x00000000000f5a43 : cmp rax, -0xfff ; jae 0xf5a87 ; ret
0x00000000000f5aa3 : cmp rax, -0xfff ; jae 0xf5ae7 ; ret
0x00000000000f6b17 : cmp rax, -0xfff ; jae 0xf6b28 ; ret
0x00000000000f6db7 : cmp rax, -0xfff ; jae 0xf6dc8 ; ret
0x00000000000f6de7 : cmp rax, -0xfff ; jae 0xf6df8 ; ret
0x00000000000f6eb7 : cmp rax, -0xfff ; jae 0xf6ec8 ; ret
0x00000000000f6ee7 : cmp rax, -0xfff ; jae 0xf6ef8 ; ret
0x00000000000f6fa7 : cmp rax, -0xfff ; jae 0xf6fb8 ; ret
0x00000000000f6fd7 : cmp rax, -0xfff ; jae 0xf6fe8 ; ret
0x00000000000f7010 : cmp rax, -0xfff ; jae 0xf7051 ; ret
0x00000000000f7230 : cmp rax, -0xfff ; jae 0xf7271 ; ret
0x00000000000f7290 : cmp rax, -0xfff ; jae 0xf72d1 ; ret
0x00000000000f72e7 : cmp rax, -0xfff ; jae 0xf72f8 ; ret
0x00000000000f7777 : cmp rax, -0xfff ; jae 0xf7788 ; ret
0x00000000000f78c0 : cmp rax, -0xfff ; jae 0xf7901 ; ret
0x00000000000f7917 : cmp rax, -0xfff ; jae 0xf7928 ; ret
0x00000000000f7947 : cmp rax, -0xfff ; jae 0xf7958 ; ret
0x00000000000f7977 : cmp rax, -0xfff ; jae 0xf7988 ; ret
0x00000000000f79a7 : cmp rax, -0xfff ; jae 0xf79b8 ; ret
0x00000000000f79d7 : cmp rax, -0xfff ; jae 0xf79e8 ; ret
0x00000000000f7a10 : cmp rax, -0xfff ; jae 0xf7a51 ; ret
0x00000000000f7a67 : cmp rax, -0xfff ; jae 0xf7a78 ; ret
0x00000000000f7a97 : cmp rax, -0xfff ; jae 0xf7aa8 ; ret
0x00000000000f82c7 : cmp rax, -0xfff ; jae 0xf82d8 ; ret
0x00000000000f82f7 : cmp rax, -0xfff ; jae 0xf8308 ; ret
0x00000000000f8327 : cmp rax, -0xfff ; jae 0xf8338 ; ret
0x00000000000f835a : cmp rax, -0xfff ; jae 0xf836b ; ret
0x00000000000f8937 : cmp rax, -0xfff ; jae 0xf8948 ; ret
0x00000000000f896a : cmp rax, -0xfff ; jae 0xf897b ; ret
0x00000000000f8997 : cmp rax, -0xfff ; jae 0xf89a8 ; ret
0x00000000000f89c7 : cmp rax, -0xfff ; jae 0xf89d8 ; ret
0x00000000000f89f7 : cmp rax, -0xfff ; jae 0xf8a08 ; ret
0x00000000000f8a2a : cmp rax, -0xfff ; jae 0xf8a3b ; ret
0x00000000000f8a57 : cmp rax, -0xfff ; jae 0xf8a68 ; ret
0x00000000000f8a87 : cmp rax, -0xfff ; jae 0xf8a98 ; ret
0x00000000000f8ab7 : cmp rax, -0xfff ; jae 0xf8ac8 ; ret
0x00000000000fb6f0 : cmp rax, -0xfff ; jae 0xfb731 ; ret
0x00000000000fba5a : cmp rax, -0xfff ; jae 0xfba6b ; ret
0x00000000000fc1d3 : cmp rax, -0xfff ; jae 0xfc217 ; ret
0x00000000000fc927 : cmp rax, -0xfff ; jae 0xfc938 ; ret
0x00000000000fc957 : cmp rax, -0xfff ; jae 0xfc968 ; ret
0x00000000000fc987 : cmp rax, -0xfff ; jae 0xfc998 ; ret
0x00000000000fcd27 : cmp rax, -0xfff ; jae 0xfcd38 ; ret
0x00000000000fcf07 : cmp rax, -0xfff ; jae 0xfcf18 ; ret
0x00000000000fcf40 : cmp rax, -0xfff ; jae 0xfcf81 ; ret
0x00000000000fcfa0 : cmp rax, -0xfff ; jae 0xfcfe1 ; ret
0x00000000000fd497 : cmp rax, -0xfff ; jae 0xfd4a8 ; ret
0x00000000000fd537 : cmp rax, -0xfff ; jae 0xfd548 ; ret
0x00000000000fd573 : cmp rax, -0xfff ; jae 0xfd5b7 ; ret
0x00000000000fd6c7 : cmp rax, -0xfff ; jae 0xfd6d8 ; ret
0x00000000000fd6f7 : cmp rax, -0xfff ; jae 0xfd708 ; ret
0x00000000000fd730 : cmp rax, -0xfff ; jae 0xfd771 ; ret
0x00000000000fd787 : cmp rax, -0xfff ; jae 0xfd798 ; ret
0x00000000000fd7c0 : cmp rax, -0xfff ; jae 0xfd801 ; ret
0x00000000000fd817 : cmp rax, -0xfff ; jae 0xfd828 ; ret
0x00000000000fdb87 : cmp rax, -0xfff ; jae 0xfdb98 ; ret
0x00000000000fdbb7 : cmp rax, -0xfff ; jae 0xfdbc8 ; ret
0x00000000000fdbe7 : cmp rax, -0xfff ; jae 0xfdbf8 ; ret
0x00000000000ff137 : cmp rax, -0xfff ; jae 0xff148 ; ret
0x00000000000ff167 : cmp rax, -0xfff ; jae 0xff178 ; ret
0x0000000000079614 : cmp rax, qword ptr [rdi + 0x10] ; jae 0x79629 ; movzx eax, byte ptr [rax] ; ret
0x0000000000100d73 : cmp rax, rcx ; cmovne rbx, rax ; call 0xfcf99
0x000000000007cc48 : cmp rax, rcx ; jae 0x7cc78 ; movzx eax, byte ptr [rax] ; ret
0x000000000011498a : cmp rax, rdx ; jb 0x114987 ; xor eax, eax ; ret
0x0000000000114989 : cmp rax, rdx ; jb 0x114988 ; xor eax, eax ; ret
0x00000000001382a0 : cmp rax, rdx ; je 0x1382b9 ; add rsp, 8 ; ret
0x0000000000048084 : cmp rax, rdx ; jne 0x4807f ; xor eax, eax ; ret
0x000000000008873c : cmp rax, rdx ; jne 0x886f8 ; xor eax, eax ; pop rbx ; ret
0x000000000007b2d0 : cmp rax, rsi ; jae 0x7b28a ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007eed4 : cmp rbx, rax ; je 0x7eee7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174339 : cmp rbx, rbp ; jae 0x17434e ; call qword ptr [rbx]
0x0000000000174339 : cmp rbx, rbp ; jae 0x174352 ; call qword ptr [rbx]
0x0000000000174368 : cmp rbx, rbp ; jb 0x174364 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000074f4d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000016f9ca : cmp rcx, rax ; jne 0x16f9fa ; xor eax, eax ; ret
0x000000000017080a : cmp rcx, rax ; jne 0x17083a ; xor eax, eax ; ret
0x0000000000174577 : cmp rdi, 1 ; ja 0x174586 ; ret
0x000000000004a499 : cmp rdi, r8 ; jbe 0x4a499 ; nop ; pop rbx ; ret
0x00000000000fcdf0 : cmp rdi, rdx ; ja 0xfce26 ; ret
0x00000000000f6a0f : cmp rdi, rsi ; ja 0xf6a06 ; ret
0x0000000000083f89 : cmp rdx, r8 ; jne 0x83f56 ; ret
0x0000000000115361 : cmp rdx, rax ; jne 0x115346 ; ret
0x00000000000ac166 : cmp rdx, rax ; jne 0xac158 ; xor eax, eax ; ret
0x0000000000123495 : cmp rdx, rax ; sbb eax, eax ; ret
0x000000000013bd6e : cmp rdx, rcx ; je 0x13bd86 ; ret
0x000000000008f2e7 : cmp rdx, rcx ; jne 0x8f2d6 ; ret
0x000000000008f2e6 : cmp rdx, rcx ; jne 0x8f2d7 ; ret
0x00000000000cda96 : cmp rdx, rcx ; jne 0xcdac5 ; ret
0x0000000000114a69 : cmp rdx, rdi ; setae al ; ret
0x0000000000072d59 : cmp rsi, rcx ; jb 0x72d58 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c009 : cmp rsi, rcx ; jne 0x7c008 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000004821c : cmp rsi, rdx ; jne 0x48217 ; xor eax, eax ; ret
0x0000000000110b92 : cmp sil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000110bbe : cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014c487 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014c787 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d687 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a61ed : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x1a622c ; out dx, al ; jmp qword ptr [rcx]
0x0000000000082bd6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4117
0x000000000008e3f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000199c05 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add dword ptr [rax], eax ; hlt ; sbb edi, esi ; call rsp
0x000000000014d387 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x000000000016f449 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000000310d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc7834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000810ce : cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax]
0x00000000001ab7a1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x000000000002b766 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jbe 0x2b772 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000147ab6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d087 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cd87 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000195075 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x0000000000195079 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x0000000000194fb5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x00000000000a32d0 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000196111 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax]
0x00000000001961d1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; jmp rdx
0x00000000001961cd : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x00000000001b1ad1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x00000000001ae171 : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x0000000000198661 : cmpsd dword ptr [rsi], dword ptr [rdi] ; int1 ; jmp rsp
0x00000000000038f2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x0000000000195081 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x0000000000194ffd : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rsi
0x0000000000195001 : cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x00000000000038f1 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000174319 : cmpxchg dword ptr [rip + 0x252558], edx ; je 0x17432c ; ret
0x000000000003a6a3 : cqo ; idiv rsi ; ret
0x0000000000029c43 : cwde ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x00000000000bea23 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001355af : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000029a6e : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000036953 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000b5775 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000d534f : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x00000000000db0aa : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000852eb : cwde ; add rax, rdx ; jmp rax
0x00000000001b2968 : cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b5f98 : cwde ; int1 ; sti ; call rcx
0x00000000001a66e8 : cwde ; jae 0x1a66dc ; jmp qword ptr [rdx]
0x000000000019e528 : cwde ; jl 0x19e517 ; jmp qword ptr [rsi]
0x00000000001b0bf8 : cwde ; jno 0x1b0bf3 ; jmp qword ptr [rcx]
0x00000000001b5438 : cwde ; mov ah, 0xf6 ; call rsi
0x0000000000187c94 : cwde ; mov ebp, 0xbfd8fffd ; std ; lcall ptr [rax] ; ret 0xfffd
0x00000000000fc1af : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000019d438 : cwde ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001a6de8 : cwde ; out 0xee, al ; call qword ptr [rax]
0x0000000000134d44 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134d83 : cwde ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x00000000001b0988 : cwde ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000003afd : cwde ; ret
0x000000000003998c : cwde ; ret 0x38
0x000000000009f484 : cwde ; ret 0xfffe
0x0000000000071384 : cwde ; sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71326
0x000000000012411e : cwde ; shr rax, 4 ; ret
0x00000000001baf69 : cwde ; sti ; jmp qword ptr [rdx]
0x00000000001a0b58 : cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b5e
0x00000000000a4819 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000a2801 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000081bd6 : dec byte ptr [r8 - 0x75] ; ret
0x00000000000a481a : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a2802 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000049ab6 : dec byte ptr [rax + 0x29] ; ret 0x8d49
0x00000000000886e5 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x0000000000081c54 : dec byte ptr [rax - 0x73] ; ret
0x0000000000081bd7 : dec byte ptr [rax - 0x75] ; ret
0x0000000000087a37 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x0000000000059058 : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000008b6e9 : dec byte ptr [rax - 0x77] ; ret
0x000000000003e054 : dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000d47f7 : dec byte ptr [rbx - 0x7c97dba4] ; ret 0x8d01
0x00000000000391aa : dec byte ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000005e793 : dec dword ptr [r8 + 0x39] ; ret
0x00000000000813fc : dec dword ptr [r8 - 0x7b] ; ret 0x840f
0x000000000009e977 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x0000000000074039 : dec dword ptr [rax + 0x29] ; ret
0x00000000000a499a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a2942 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000003e1ab : dec dword ptr [rax + 0x29] ; ret 0x8948
0x00000000000b0818 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x00000000000d520c : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000007f47d : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x00000000000469c5 : dec dword ptr [rax + 0x29] ; ret 0x8d49
0x0000000000083ccd : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000005e794 : dec dword ptr [rax + 0x39] ; ret
0x000000000005c58f : dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000061b8f : dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000001890ff : dec dword ptr [rax + 0x4d] ; hlt ; call rax
0x000000000018952f : dec dword ptr [rax + 0x53] ; hlt ; call rax
0x0000000000186a67 : dec dword ptr [rax + 0x5e] ; in eax, dx ; ljmp ptr [rdi] ; pop rsi ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000063d29 : dec dword ptr [rax + 0x63] ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000c613f : dec dword ptr [rax + 0x63] ; fisttp dword ptr [rax + 0x39] ; ret
0x000000000005c337 : dec dword ptr [rax + 0x63] ; ret
0x00000000000edca9 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000000000006c70b : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x000000000006ce8f : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8508
0x000000000008d6d9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000128ba4 : dec dword ptr [rax + 0xf] ; mov esi, 0x83480153 ; ret
0x000000000008f834 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003aa02 : dec dword ptr [rax + 0xf] ; ret
0x00000000000f6a3b : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x00000000000878d1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000051d76 : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000142b56 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x000000000002d909 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000005ebf5 : dec dword ptr [rax + 1] ; ret
0x0000000000189ebb : dec dword ptr [rax - 0x2c000a8c] ; jae 0x189ec0 ; call rbx
0x00000000000360c3 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000004b686 : dec dword ptr [rax - 0x39] ; ret
0x00000000000ce0fc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000000c023c : dec dword ptr [rax - 0x3f] ; out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000000fc1ad : dec dword ptr [rax - 0x68] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000fe5b4 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000ac9e6 : dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000000ec50d : dec dword ptr [rax - 0x73] ; mov word ptr [r8 - 0x77], cs ; ret
0x0000000000111e6d : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x000000000010f17e : dec dword ptr [rax - 0x75] ; cmp r9b, r13b ; ret
0x0000000000102a8d : dec dword ptr [rax - 0x75] ; jge 0x102a97 ; call rbx
0x0000000000102d40 : dec dword ptr [rax - 0x75] ; jge 0x102d4a ; call rbx
0x00000000001048d8 : dec dword ptr [rax - 0x75] ; jge 0x1048e2 ; call rbx
0x00000000000ebc1e : dec dword ptr [rax - 0x75] ; mov ebp, 0xffffff78 ; call rbx
0x0000000000048da7 : dec dword ptr [rax - 0x75] ; pop rbp ; enter -0x74b8, 0x14 ; ret
0x0000000000081eef : dec dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x7404
0x00000000000e240d : dec dword ptr [rax - 0x75] ; push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x000000000007a8a1 : dec dword ptr [rax - 0x75] ; push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000189eb7 : dec dword ptr [rax - 0x77000a8c] ; je 0x189ebc ; call rbx
0x00000000000b2d88 : dec dword ptr [rax - 0x77] ; call 0x4ccdc1a5
0x000000000008f4d8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000f34a8 : dec dword ptr [rax - 0x77] ; fbstp dword ptr [rcx] ; fucomi st(0) ; cmc ; ret
0x00000000000fce8a : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013bf4c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000013a829 : dec dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x00000000000b7fb3 : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d1324 : dec dword ptr [rax - 0x77] ; fsubp st(0) ; ret
0x0000000000133631 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xffee
0x0000000000057fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x0000000000033edd : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfeb9
0x0000000000020fd5 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xffe8
0x00000000001000b4 : dec dword ptr [rax - 0x77] ; out -0x18, eax ; ret
0x0000000000172b2a : dec dword ptr [rax - 0x77] ; out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x0000000000133639 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f8ae
0x0000000000134190 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000002233e : dec dword ptr [rax - 0x77] ; ret
0x00000000000fcce3 : dec dword ptr [rax - 0x77] ; ret 0x1777
0x00000000000fcdde : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x00000000000ea931 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000000f34f3 : dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000005ebeb : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000076f93 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000005ed1a : dec dword ptr [rax - 0x77] ; ret 0x38e9
0x00000000000e0a4e : dec dword ptr [rax - 0x77] ; ret 0x448b
0x0000000000036b2b : dec dword ptr [rax - 0x77] ; ret 0x4577
0x00000000000369d1 : dec dword ptr [rax - 0x77] ; ret 0x4f77
0x0000000000069a42 : dec dword ptr [rax - 0x77] ; ret 0x65e8
0x00000000000ce18c : dec dword ptr [rax - 0x77] ; ret 0x6b8
0x000000000002facb : dec dword ptr [rax - 0x77] ; ret 0x6fe9
0x000000000011da3a : dec dword ptr [rax - 0x77] ; ret 0x8348
0x0000000000140073 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000002f33f : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000000355b3 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000057af2 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000096e86 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x000000000004d915 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000134d46 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000d0238 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x000000000006af20 : dec dword ptr [rax - 0x77] ; ret 0x9ce9
0x0000000000142e5f : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000593ab : dec dword ptr [rax - 0x77] ; ret 0xb848
0x00000000000c9a4c : dec dword ptr [rax - 0x77] ; ret 0xbb
0x000000000005dffc : dec dword ptr [rax - 0x77] ; ret 0xbbe9
0x0000000000134d85 : dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x0000000000095755 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000000dd010 : dec dword ptr [rax - 0x77] ; ret 0xc148
0x000000000008783e : dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x000000000009d24c : dec dword ptr [rax - 0x77] ; ret 0xc76
0x000000000002fb34 : dec dword ptr [rax - 0x77] ; ret 0xf0e9
0x000000000002100a : dec dword ptr [rax - 0x77] ; ret 0xf8e9
0x000000000010136e : dec dword ptr [rax - 0x77] ; ret 0xff31
0x000000000012e7fa : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000021002 : dec dword ptr [rax - 0x77] ; ret 0xffe9
0x00000000000813fd : dec dword ptr [rax - 0x7b] ; ret 0x840f
0x00000000000bc3fd : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115a9f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000c634d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f4b34 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e0af5 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x8445
0x000000000010fb90 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000896c0 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x000000000012afff : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x00000000000fef30 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000006dcdc : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f617 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x0000000000105d96 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x0000000000108d9f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000000959e0 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000140266 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000014006f : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000312f1 : dec dword ptr [rax - 0x7d] ; ret
0x000000000007f42f : dec dword ptr [rax - 0x7d] ; ret 0x4007
0x0000000000025c5b : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d93c1 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000004f7b5 : dec dword ptr [rax - 0x7d] ; ret 0x4820
0x00000000000d6525 : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000bf356 : dec dword ptr [rax - 0x7d] ; ret 0x4909
0x0000000000060ce7 : dec dword ptr [rax - 0x7d] ; ret 0xb908
0x00000000000d02f1 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000076a48 : dec dword ptr [rax - 0x7f] ; ret
0x000000000015a88c : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000018824f : dec dword ptr [rax] ; sub dh, dl ; jmp qword ptr [rax + 0x20fff229]
0x00000000000f8ee3 : dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000ef6d5 : dec dword ptr [rbp + rcx*4 + 0x25] ; ret
0x0000000000138060 : dec dword ptr [rbp + rcx*4 + 0x4c] ; and al, 0x2a ; call qword ptr [rax]
0x0000000000102f4e : dec dword ptr [rbp - 0x75] ; push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d46b0 : dec dword ptr [rbp - 0x77] ; ret 0x3145
0x00000000000ee39e : dec dword ptr [rbp - 0x77] ; ret 0x8948
0x00000000000989bf : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000013d6b9 : dec dword ptr [rbx + 0x148885d] ; ret 0x8948
0x00000000000f5ba2 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000dea3f : dec dword ptr [rbx + 0x438d047d] ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000014378d : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x38 ; ret
0x00000000000d57e8 : dec dword ptr [rbx + rcx*4 + 0x55] ; test al, 0x89 ; ret
0x000000000019b1bb : dec dword ptr [rbx + rdi + 0x3e740002] ; cli ; jmp rsp
0x00000000000db889 : dec dword ptr [rbx - 0x7ac7dbbc] ; ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00000000000adfc5 : dec dword ptr [rbx - 0x7cb7fbad] ; ret
0x000000000004dc0e : dec dword ptr [rcx + 0x29] ; ret
0x00000000000d30e9 : dec dword ptr [rcx + 0x29] ; ret 0x14eb
0x00000000000824a9 : dec dword ptr [rcx + 0x358d48ef] ; call rcx
0x000000000004d7dc : dec dword ptr [rcx + 0x39] ; ret
0x000000000004df52 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000010ce5b : dec dword ptr [rcx + 0x415d5bd8] ; pop rsp ; pop r13 ; ret
0x000000000006d362 : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000000fb691 : dec dword ptr [rcx + 0x458949ef] ; or al, ch ; ret
0x000000000002ebb6 : dec dword ptr [rcx + 0x63] ; add al, 0x86 ; add rax, r14 ; jmp rax
0x00000000000711ef : dec dword ptr [rcx + 0xd99e8d6] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71193
0x00000000000533f9 : dec dword ptr [rcx + 0xf50244c] ; ret 0x4c8b
0x000000000019873b : dec dword ptr [rcx + rbp + 0x43640001] ; call rsp
0x000000000019b413 : dec dword ptr [rcx + rcx*2 + 0x66240002] ; cli ; call rsp
0x000000000008162d : dec dword ptr [rcx + rcx*4 + 0x54] ; and al, 0x20 ; call qword ptr [rax]
0x000000000004b389 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x000000000013c076 : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x00000000000f362c : dec dword ptr [rcx + rcx*4 - 1] ; call 0x1f8ae
0x000000000005f10d : dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a6
0x000000000005a6d5 : dec dword ptr [rcx - 0x3f] ; sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x000000000005c60a : dec dword ptr [rcx - 0x60f73] ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000f95c3 : dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000001028c5 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d4e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102958 : dec dword ptr [rcx - 0x75] ; jge 0x102962 ; call rbx
0x0000000000102a7f : dec dword ptr [rcx - 0x75] ; jge 0x102a89 ; call rbx
0x0000000000102bc2 : dec dword ptr [rcx - 0x75] ; jge 0x102bcc ; call rbx
0x0000000000102d32 : dec dword ptr [rcx - 0x75] ; jge 0x102d3c ; call rbx
0x0000000000104550 : dec dword ptr [rcx - 0x75] ; jge 0x10455a ; call rbx
0x0000000000104678 : dec dword ptr [rcx - 0x75] ; jge 0x104682 ; call rbx
0x00000000001047bb : dec dword ptr [rcx - 0x75] ; jge 0x1047c5 ; call rbx
0x00000000001048bc : dec dword ptr [rcx - 0x75] ; jge 0x1048c6 ; call rbx
0x00000000000f3c85 : dec dword ptr [rcx - 0x75] ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f533 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000eef5c : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000142d34 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x000000000009e978 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x00000000000488c5 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000e3e3d : dec dword ptr [rcx - 0x77] ; ret 0x448b
0x000000000002bc47 : dec dword ptr [rcx - 0x77] ; ret 0x87e9
0x00000000000de2bf : dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000004ea8e : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000022f80 : dec dword ptr [rcx - 0x77] ; ret 0x9e9
0x00000000000662ef : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000662d8 : dec dword ptr [rcx - 0x7d] ; ret 0x4504
0x00000000000d8858 : dec dword ptr [rcx - 0x7d] ; ret 0x4c20
0x000000000004504c : dec dword ptr [rcx] ; ret
0x000000000010a69e : dec dword ptr [rcx] ; setbe al ; ret
0x0000000000107512 : dec dword ptr [rdi] ; add byte ptr [rax], al ; or eax, edi ; ret
0x000000000011d76d : dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x0000000000079942 : dec dword ptr [rdi] ; lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000010aeed : dec dword ptr [rdi] ; mov bh, 4 ; js 0x10ae7e ; loopne 0x10aefe ; ret
0x000000000002df46 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ded7 ; loopne 0x2df57 ; ret
0x0000000000046271 : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009e505 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x000000000009e4f2 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8349
0x0000000000188697 : dec dword ptr [rdi] ; mov ebx, esi ; jmp rdx
0x000000000018921f : dec dword ptr [rdi] ; push rbx ; hlt ; lcall ptr [rcx] ; push rbx ; hlt ; jmp qword ptr [rbx]
0x0000000000023b8b : dec dword ptr [rdi] ; ret 0x41c3
0x0000000000115935 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000b58ea : dec dword ptr [rdi] ; ret 0xd0f7
0x00000000001212e5 : dec dword ptr [rdi] ; ret 0xfe9
0x0000000000074151 : dec dword ptr [rdi] ; test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000ffdf5 : dec dword ptr [rdi] ; test byte ptr [rax + rax + 0x58b0000], dl ; ret 0x2c73
0x0000000000068467 : dec dword ptr [rdi] ; test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000013dfc9 : dec dword ptr [rdi] ; test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d9b60 : dec dword ptr [rdi] ; test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x0000000000122dfe : dec dword ptr [rdi] ; test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000001383ca : dec dword ptr [rdi] ; test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009d9d8 : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009d4eb : dec dword ptr [rdi] ; test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x000000000009d4f7 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x00000000001224ec : dec dword ptr [rdi] ; test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x0000000000172160 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d7751 : dec dword ptr [rdi] ; test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000000ea9aa : dec dword ptr [rdi] ; xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000007305b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000000e2ac3 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8949
0x00000000000e32ba : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000000000bbf60 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd021
0x00000000000e0b80 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd609
0x0000000000075f7e : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000e3e9d : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000523bd : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xfa80
0x0000000000105e8f : dec dword ptr [rdi] ; xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x00000000000cdfed : dec dword ptr [rdi] ; xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000005c147 : dec dword ptr [rdx + 0x63] ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x0000000000189bcb : dec dword ptr [rdx] ; cmc ; dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000189bcf : dec dword ptr [rdx] ; cmc ; jmp rsp
0x000000000018915f : dec dword ptr [rip + 0x17fff451] ; push rcx ; hlt ; jmp qword ptr [rcx]
0x0000000000189283 : dec dword ptr [rip + 0x17fff454] ; push rsp ; hlt ; jmp qword ptr [rcx]
0x0000000000194fcf : dec dword ptr [rsi - 0x56] ; std ; jmp rsi
0x0000000000198eeb : dec dword ptr [rsp + 0x20f40001] ; cmc ; jmp rsp
0x0000000000198d7b : dec dword ptr [rsp + rdx*2 + 0x20b40001] ; hlt ; call rsp
0x000000000018765b : dec eax ; push rcx ; out dx, al ; jmp qword ptr [rax]
0x0000000000188e2f : dec ebp ; enter -0xd, 0x3f ; sal ebx, 1 ; call rdi
0x0000000000049e3d : dec ecx ; ret
0x000000000019b963 : dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x000000000019815b : dec esp ; add al, byte ptr [rcx] ; add ah, al ; mov ebp, edi ; jmp rsp
0x000000000019b113 : dec esp ; add al, byte ptr ss:[rax] ; add al, 0x29 ; cli ; jmp rsp
0x0000000000198f93 : dec esp ; add dword ptr [eax], eax ; je 0x198fe4 ; cmc ; jmp rsp
0x00000000001981a3 : dec esp ; add eax, dword ptr [rcx] ; add ah, dh ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x000000000019b30b : dec esp ; add r8b, byte ptr [rax] ; in al, 0x57 ; cli ; jmp rsp
0x000000000019865b : dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], al ; jmp rsp
0x00000000001961cb : dec esp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x00000000001968d3 : dec esp ; imul eax, dword ptr [rax], 0xe9654400 ; jmp rsp
0x0000000000199613 : dec esp ; mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x000000000018748f : dec esp ; out dx, al ; call rsp
0x000000000019b69b : dec esp ; pop rcx ; add al, byte ptr [rax] ; je 0x19b673 ; cli ; jmp rsp
0x00000000001968fb : dec esp ; push 0 ; add ah, dl ; jae 0x1968f4 ; jmp rsp
0x000000000019a113 : dec esp ; ret
0x0000000000197473 : dec esp ; test eax, 0x4d840000 ; in eax, dx ; jmp rsp
0x0000000000197263 : dec esp ; wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x00000000000a4999 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000a2941 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000006c896 : dec qword ptr [r8 + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x4502
0x0000000000025c5a : dec qword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d8857 : dec qword ptr [rcx - 0x7d] ; ret 0x4c20
0x00000000001b9f91 : div bh ; call qword ptr [rdx]
0x00000000000dc5ad : div byte ptr [rax - 0xa] ; ret
0x0000000000096aef : div byte ptr [rbp + 0xa] ; jmp 0x96aba
0x000000000008b8c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000009ed21 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000fac87 : div byte ptr [rcx] ; shr al, 0x71 ; ret
0x0000000000064124 : div dh ; ret
0x0000000000053999 : div dh ; ret 0x4050
0x00000000001126c3 : div dword ptr [rcx] ; shr al, 0x65 ; ret
0x00000000000f6a11 : div dword ptr [rdi - 0x14] ; ret
0x000000000006e290 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007818c : div ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001177df : div ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781cf : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001178dc : div ebx ; pop rbx ; pop rbp ; ret
0x00000000000504c5 : div ecx ; add eax, r8d ; ret
0x00000000000aacda : div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000199971 : div esi ; call rsp
0x000000000006e796 : div esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006e28f : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007818b : div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001177de : div rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000781ce : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001178db : div rbx ; pop rbx ; pop rbp ; ret
0x000000000001f977 : enter -0x1401, -0x3b ; ret
0x00000000000d1651 : enter -0x14fe, -0x75 ; nop dword ptr [rax] ; ret
0x00000000000eeb10 : enter -0x1d2d, -0x7b ; ret 0x850f
0x0000000000045a23 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x000000000009ec2e : enter -0x208c, -0xd ; ret
0x00000000000a1291 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000e7df4 : enter -0x2e89, 0x39 ; ret
0x000000000001f967 : enter -0x2eff, 0x39 ; ret 0xffb8
0x000000000012f911 : enter -0x3eb8, -0x1f ; or byte ptr [rax - 0x77], cl ; ret 0x314c
0x00000000000c71f6 : enter -0x3f97, -0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001722d4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000018c5ac : enter -0x4ff, -1 ; fadd dword ptr [rcx] ; sti ; jmp rax
0x00000000000a4816 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000a27fe : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000a4996 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000a293e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000034b68 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000048dab : enter -0x74b8, 0x14 ; ret
0x0000000000188e31 : enter -0xd, 0x3f ; sal ebx, 1 ; call rdi
0x00000000001029a4 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000195369 : enter -5, -0x30 ; leave ; sti ; jmp qword ptr [rax]
0x0000000000132257 : enter 0, 0 ; call rax
0x0000000000132219 : enter 0, 0 ; jmp rcx
0x000000000012cf26 : enter 0, 0 ; lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x0000000000104a88 : enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000007cc4a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000034cbc : enter 0x280f, -0x3f ; ret
0x000000000004a13e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000012c57c : enter 0x29, 0x48 ; add esp, 8 ; ret
0x000000000008b12d : enter 0x31c3, -0x40 ; ret
0x0000000000087a5e : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x00000000001350c7 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x0000000000135024 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x00000000001350f4 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000019c8ce : enter 0x4201, 0xe ; rol byte ptr [rcx], 3 ; ret 0xe01
0x000000000013599b : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x000000000013587b : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x000000000007eac8 : enter 0x4801, -0x77 ; pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000087acb : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000005b775 : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000185a3c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000003a68d : enter 0x948, -0x30 ; ret
0x00000000000e9189 : enter 0xf41, -0x62 ; ret 0x844
0x000000000016f4f6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089b51 : enter 0xf66, -0x15 ; ret
0x000000000014a65c : enter 0xf66, 0x3a ; movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x0000000000034cb8 : enter 0xf66, 0x6e ; enter 0x280f, -0x3f ; ret
0x00000000000a8074 : enter 5, 0 ; ret
0x00000000001a93c5 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], ch ; int1 ; call qword ptr [rcx]
0x00000000001a9345 : fadd dword ptr [rax] ; add byte ptr [rax + 0x25], ch ; int1 ; jmp qword ptr [rcx]
0x0000000000116ba6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007b237 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007b703 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000104f30 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000045cf6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000115b25 : fadd dword ptr [rax] ; leave ; ret
0x0000000000082f0f : fadd dword ptr [rbp - 0x78] ; or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x000000000013d42d : fadd dword ptr [rbx - 0x76b7f820] ; ret
0x0000000000070980 : fadd dword ptr [rcx + rcx*4 + 0x65] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001b937d : fadd dword ptr [rcx] ; add al, dl ; fdiv st(7) ; jmp rdi
0x00000000001bc443 : fadd dword ptr [rcx] ; add esi, ebp ; add al, byte ptr [rax] ; ret
0x000000000018c5b0 : fadd dword ptr [rcx] ; sti ; jmp rax
0x0000000000074d17 : fadd dword ptr [rdi + rcx + 0x47] ; ret
0x000000000012b054 : fadd dword ptr [rdi - 0x11] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001a2878 : fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x00000000000c612e : fadd qword ptr [r9] ; ret
0x00000000001afcd4 : fadd qword ptr [rcx + 1] ; add al, bl ; sub ch, dh ; jmp qword ptr [rbx]
0x00000000000c612f : fadd qword ptr [rcx] ; ret
0x00000000000bbac7 : fadd st(1) ; call 0xffffffff89cde3f2
0x00000000000bbe31 : fadd st(1) ; call 0xffffffff89cde75c
0x000000000019a0c4 : fadd st(2), st(0) ; add dword ptr [rax], eax ; in al, -9 ; push rsp ; ret 1
0x00000000001728f8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000017084e : fadd st(3) ; ret
0x0000000000105df0 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000016f041 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001740ac : fbstp dword ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f34ab : fbstp dword ptr [rcx] ; fucomi st(0) ; cmc ; ret
0x00000000000c2767 : fcmovb st(0), st(1) ; clc ; add eax, 0x2907fec1 ; ret 0x8944
0x00000000000bd6bd : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000185078 : fcmovb st(0), st(3) ; ret
0x000000000002c4ae : fcom dword ptr [rax - 0x3ece49f1] ; ret 0x4809
0x00000000001891a8 : fcom dword ptr [rcx - 0xc] ; jmp rdx
0x00000000001aced4 : fcom qword ptr [rbx] ; add dword ptr [rax], eax ; call 0x131ac2be
0x000000000018906d : fcomi st(3) ; jmp qword ptr [rcx]
0x0000000000189089 : fcomi st(3) ; jmp rcx
0x0000000000189019 : fcomi st(3) ; jmp rsp
0x0000000000188fe9 : fcomi st(3) ; push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x00000000001ae7d1 : fcomi st(4) ; call qword ptr [rbx]
0x00000000001b5969 : fcomi st(6) ; jmp rsi
0x0000000000033c3a : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002a837 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000006dfeb : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000326ac : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000844e4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x0000000000185df9 : fcomp dword ptr [rdx + 0x21] ; ret
0x0000000000101fbb : fcomp dword ptr [rdx + 0x5b] ; ret
0x0000000000184060 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001a7748 : fcomp st(1) ; cld ; call qword ptr [rax]
0x0000000000188e69 : fcompi st(3) ; jmp qword ptr [rcx]
0x000000000009ec30 : fcompi st(3) ; ret
0x00000000001aea39 : fcompi st(4) ; call qword ptr [rbx]
0x00000000001ae9f1 : fcompi st(4) ; jmp qword ptr [rcx]
0x000000000006ac45 : fdiv dword ptr [rax + rbx + 0x48] ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001b2bd4 : fdiv qword ptr [rax + 1] ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001a6bd4 : fdiv qword ptr [rax - 0x4e880000] ; out dx, al ; call qword ptr [rax]
0x00000000001a8c39 : fdiv st(0) ; call qword ptr [rax]
0x00000000000bb224 : fdiv st(3) ; ret
0x00000000001952dd : fdiv st(3), st(0) ; call qword ptr [rax]
0x000000000019527d : fdiv st(3), st(0) ; call rax
0x00000000001100cf : fdiv st(6) ; ret 0xf02
0x00000000001b9381 : fdiv st(7) ; jmp rdi
0x00000000001952c1 : fdivp st(3) ; jmp qword ptr [rax]
0x00000000001952e1 : fdivp st(3) ; jmp rax
0x00000000001b1158 : fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001af4d4 : fdivr qword ptr [rcx] ; add dword ptr [rax], eax ; or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001af8d4 : fdivr qword ptr [rip + 0x1e280001] ; cmc ; jmp qword ptr [rcx]
0x000000000019b759 : fdivr st(2) ; jmp rsp
0x0000000000034ab4 : fdivr st(3) ; adc eax, 0x540f6600 ; ret 0xf66
0x00000000001951f1 : fdivr st(3) ; call rax
0x00000000000cdebf : fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x00000000001952d5 : fdivr st(3) ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001951d1 : fdivr st(3) ; jmp rax
0x00000000001952f5 : fdivr st(3) ; push rax ; fsincos ; call rax
0x0000000000188e9d : fdivr st(3), st(0) ; call rax
0x0000000000189029 : fdivr st(3), st(0) ; jmp qword ptr [rcx]
0x0000000000189069 : fdivr st(3), st(0) ; push qword ptr [rdi] ; fcomi st(3) ; jmp qword ptr [rcx]
0x00000000001833b5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001ab0d4 : fdivr st(5), st(0) ; add byte ptr [rax], al ; or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x000000000008427f : fdivr st(7) ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000016cbcd : fdivr st(7) ; ret
0x00000000000a56ce : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001b9559 : fdivrp st(7) ; jmp rdi
0x00000000000f7642 : fiadd dword ptr [rbx + 0x2a8247c] ; cmove eax, edx ; ret
0x00000000000724b4 : fiadd dword ptr [rbx + 0x394803e2] ; ret 0xf48
0x000000000009c98c : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebx ; ret
0x000000000011592f : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000012ed39 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000001b9595 : fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x00000000001b9555 : fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x00000000000c343e : fiadd word ptr [r9] ; ret
0x00000000001a990d : fiadd word ptr [rax] ; add al, dh ; pop rsp ; int1 ; jmp qword ptr [rcx]
0x00000000001a9925 : fiadd word ptr [rax] ; add byte ptr [rax], cl ; pop rbp ; int1 ; jmp qword ptr [rcx]
0x000000000012cb40 : fiadd word ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; call qword ptr [rax]
0x000000000019a5a5 : fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x00000000000c343f : fiadd word ptr [rcx] ; ret
0x0000000000174452 : ficom dword ptr [rdx + 0x25] ; add byte ptr [rbp - 0xcf98a40], al ; ret
0x000000000001f92a : ficomp dword ptr [rcx + 0x5b58003a] ; pop rbp ; ret
0x0000000000103109 : ficomp word ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000185c46 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x0000000000174538 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000001434b5 : fidivr dword ptr [rax + 1] ; ret
0x00000000000e7e4f : fidivr dword ptr [rcx] ; ret 0x3673
0x000000000010039e : fidivr word ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000047278 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x0000000000110e64 : fild dword ptr [rax - 0x6af0d207] ; ret
0x00000000000ec6a5 : fild dword ptr [rbx + 0xf4104f8] ; xchg eax, esp ; ret
0x00000000000bd3ed : fild dword ptr [rcx + 1] ; ret
0x00000000001a9a05 : fild word ptr [rax] ; add byte ptr [rax], bh ; int1 ; call qword ptr [rdx]
0x00000000000d2ac7 : fild word ptr [rbx - 0x6bf0bf08] ; ret 0xf983
0x00000000000fc386 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], 0xc0 ; ret
0x00000000000504b8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000d347e : fimul dword ptr [rax + 0x29] ; ret 0x8948
0x000000000003d935 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000145d36 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000074140 : fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x00000000000320c0 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000137932 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000011e14b : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000af9f7 : fimul dword ptr [rax - 9] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008f502 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x000000000012f3c6 : fimul dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, rbp ; call rax
0x000000000016b972 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cc891
0x000000000016c9f2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39cd911
0x00000000000e9083 : fimul dword ptr [rdi] ; popfq ; ret
0x00000000000869a0 : fimul word ptr [rax - 0x77] ; out dx, eax ; call 0x82bd6
0x000000000013bf4f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000775ee : fimul word ptr [rax - 0x77] ; ret
0x00000000000afd64 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000843a1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x000000000004838e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x483e8
0x0000000000049f6e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x49fc8
0x000000000003e057 : fimul word ptr [rcx + 0x19] ; ret 0xed85
0x0000000000037360 : fimul word ptr [rcx + rcx*4 - 0x19] ; call r15
0x000000000013899e : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000013a82c : fimul word ptr [rcx + rcx*4 - 1] ; call r14
0x000000000003e051 : fimul word ptr [rcx - 0x77] ; dec byte ptr [rbp + 0x29] ; fimul word ptr [rcx + 0x19] ; ret 0xed85
0x00000000000b9191 : fimul word ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000181e18 : fist dword ptr [rsi] ; jmp 0x181e1e
0x0000000000181e18 : fist dword ptr [rsi] ; jmp 0x181e22
0x0000000000188cd8 : fistp qword ptr [rbx + rsi*8 - 0xc501201] ; call rax
0x000000000007221f : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000072067 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000013a8d1 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000137598 : fistp word ptr [rbx - 0x17] ; or dword ptr [rbx + 0x5b90ffee], eax ; ret
0x000000000007d882 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000c59d8 : fisttp dword ptr [rax + 0x39] ; ret
0x0000000000174535 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000049011 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000010951e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2bad1a ; pop rbx ; ret
0x00000000000dea8a : fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x000000000004902b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000061f70 : fisttp dword ptr [rdi] ; lahf ; ret 0xd329
0x00000000000f3fa6 : fisttp dword ptr [rdi] ; test byte ptr [rbx + 1], dh ; add byte ptr [rax], al ; call 0x20282
0x00000000000f0ed4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000047654 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x000000000003693f : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000009ce24 : fisttp dword ptr [rdi] ; xchg eax, ebx ; ret
0x00000000001035e9 : fisttp dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000fa841 : fisttp dword ptr [rsi] ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000003e147 : fisttp qword ptr [rax + 0x29] ; ret
0x000000000008491e : fisttp qword ptr [rax + 0x39] ; ret 0x860f
0x000000000014a742 : fisttp qword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000024ff5 : fisttp qword ptr [rax - 0x77] ; je 0x25027 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000000af764 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b7e25 : fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000008e71a : fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000010e5f2 : fisttp qword ptr [rcx + 0x29] ; fisttp word ptr [rax + 0x29] ; ret 0x8948
0x000000000010e5f5 : fisttp word ptr [rax + 0x29] ; ret 0x8948
0x0000000000033c4a : fisttp word ptr [rax - 0x39] ; ret
0x00000000000c8b0c : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x000000000012a4d1 : fisttp word ptr [rax - 0x77] ; or al, 0x24 ; call r12
0x000000000010e688 : fisttp word ptr [rax - 0x77] ; ret
0x000000000005905b : fisttp word ptr [rax - 0x77] ; ret 0x8b48
0x000000000009f4a1 : fisttp word ptr [rax - 0x77] ; ret 0xc6e8
0x0000000000174239 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000005e690 : fisttp word ptr [rax - 0x7d] ; ret
0x00000000000490af : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000123672 : fisttp word ptr [rcx + 0x2de8bc45] ; ret 0xffef
0x0000000000138c52 : fisttp word ptr [rcx + 0xf] ; fmul qword ptr [rax - 0x7d] ; ret
0x0000000000088107 : fisttp word ptr [rcx + rcx*4 - 6] ; call rax
0x000000000012a5d3 : fisttp word ptr [rcx - 0x77] ; in eax, 0x41 ; call rdi
0x000000000014b14d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000000ea968 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x000000000016f411 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000011564e : fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x00000000000e512c : fisub dword ptr [rsi - 0x7f] ; loop 0xe5137 ; add esi, esi ; ret
0x000000000016f111 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014dbac : fisubr word ptr [rcx] ; ret 0xfec5
0x00000000001a94bd : fld dword ptr [rax] ; add byte ptr [rax + 0x30], dl ; int1 ; jmp qword ptr [rcx]
0x00000000000991c7 : fld dword ptr [rbp - 0x77] ; ret 0x1374
0x00000000000f6583 : fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001840a1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000034f9e : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035058 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000034f39 : fld xword ptr [rsp + 8] ; ret
0x0000000000035029 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035007 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000c924b : fldcw word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000351a9 : fldcw word ptr [rsp - 2] ; ret
0x000000000014a780 : fldenv dword ptr [rsi + 0xf] ; cmp ah, byte ptr [rbx - 0x25] ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000008ea59 : fldenv dword ptr [rsi + 0xf] ; je 0x8eab6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000966e7 : fldenv dword ptr [rsi + 0xf] ; je 0x96744 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000016f491 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e951 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000197e71 : fldz ; call rsp
0x0000000000048434 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000087bbe : fmul dword ptr [rax + 0x21] ; ret
0x000000000007f0bf : fmul dword ptr [rax + 0x39] ; ret
0x00000000000886db : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x00000000000b9e14 : fmul dword ptr [rax + 0x75db8500] ; fsubr qword ptr [rcx] ; ret
0x0000000000099bf6 : fmul dword ptr [rax + 0xf] ; ret
0x00000000000cf482 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000424d7 : fmul dword ptr [rax - 0x39] ; ret
0x0000000000130201 : fmul dword ptr [rax - 0x3f] ; call 0xffffffffc29c4a18
0x00000000000f4362 : fmul dword ptr [rax - 0x75] ; jl 0xf4393 ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000074e11 : fmul dword ptr [rax - 0x77] ; ret
0x00000000000bea29 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000b7fb6 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000007775e : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000053620 : fmul dword ptr [rcx + 0xf] ; ret
0x0000000000056341 : fmul dword ptr [rdi] ; ret
0x00000000000b965c : fmul dword ptr [rdi] ; xchg eax, ebx ; ret
0x0000000000047d63 : fmul dword ptr [rdi] ; xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000000eb4a0 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000c8a5b : fmul qword ptr [rax - 0x7d] ; ret
0x000000000010e685 : fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x000000000003d6dc : fmul qword ptr [rcx + 0xf] ; mov esi, 0xbe0f2414 ; ret 0x8349
0x0000000000089ee9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000001b0ad4 : fmul qword ptr [rdi + 1] ; add byte ptr [rax], bl ; jo 0x1b0ad7 ; jmp qword ptr [rcx]
0x00000000001a45d4 : fmul qword ptr [rdx + 0x74280000] ; in eax, dx ; call qword ptr [rcx]
0x0000000000187480 : fmul qword ptr [rsi - 0x12] ; call rsp
0x00000000000423d2 : fmul st(0) ; ret
0x0000000000042350 : fmulp st(1) ; ret
0x00000000000d16a3 : fnsave dword ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x0000000000088f24 : fnstenv dword ptr [rbx] ; add byte ptr [rax], al ; je 0x88f36 ; ret
0x0000000000088f23 : fnstenv dword ptr [rbx] ; add byte ptr [rax], al ; je 0x88f37 ; ret
0x0000000000002532 : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000035186 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000048062 : fnstsw dword ptr [rax + 1] ; ret
0x00000000001acce9 : fpatan ; call qword ptr [rbx]
0x00000000001acd29 : fpatan ; call qword ptr [rsi]
0x00000000001acd69 : fpatan ; jmp qword ptr [rcx]
0x0000000000033bd5 : fpatan ; ret
0x000000000019a891 : fprem ; call rsp
0x00000000001a7749 : frndint ; call qword ptr [rax]
0x000000000016f211 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003505c : fscale ; fstp st(1) ; ret
0x0000000000195275 : fsincos ; call qword ptr [rax]
0x00000000001952f9 : fsincos ; call rax
0x0000000000195255 : fsincos ; inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x0000000000134d43 : fstp dword ptr [rax - 0x76b70011] ; ret 0x8d48
0x0000000000183d87 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000096e3e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000035188 : fstp st(0) ; and eax, 0x200 ; ret
0x0000000000184100 : fstp st(0) ; ret 0xde5d
0x0000000000035130 : fstp st(1) ; add rsp, 8 ; ret
0x000000000003505e : fstp st(1) ; ret
0x0000000000034fa0 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502d : fstp xword ptr [rdi] ; ret
0x0000000000188e68 : fstpnce st(7), st(0) ; jmp qword ptr [rcx]
0x00000000001ab048 : fsub dword ptr [rbx] ; jmp qword ptr [rcx]
0x0000000000035778 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x0000000000035458 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000035189 : fsub dword ptr [rip + 0x200] ; ret
0x000000000016f511 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d6479 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e173f0
0x00000000000a1674 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001adbd4 : fsub qword ptr [rax] ; add dword ptr [rax], eax ; clc ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000000cd222 : fsub qword ptr [rcx + rcx*4 + 4] ; and eax, 0x2d0 ; ret
0x00000000000aa46b : fsub qword ptr [rsi + 0xf] ; jmp 0xaa437
0x000000000016f311 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000089c6c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001747ab : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001029a2 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000001044ab : fsubp st(0) ; mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x00000000001048aa : fsubp st(0) ; rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000d1327 : fsubp st(0) ; ret
0x0000000000103f18 : fsubp st(0) ; ret 0xffe8
0x0000000000103e18 : fsubp st(0) ; ret 0xffe9
0x0000000000034fa2 : fsubp st(1) ; ret
0x00000000000c7331 : fsubp st(1) ; ret 0xffec
0x00000000001afcd8 : fsubr dword ptr [rax] ; cmc ; jmp qword ptr [rbx]
0x00000000001a7d18 : fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000000b9e1b : fsubr qword ptr [rcx] ; ret
0x00000000001a52e1 : fsubr st(5) ; call qword ptr [rsi]
0x0000000000185dd8 : fucom st(5) ; loop 0x185e31 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000000f34ad : fucomi st(0) ; cmc ; ret
0x000000000007b5df : fucomp st(0) ; ret
0x00000000001a6cc9 : fucomp st(6) ; jmp qword ptr [rsi]
0x00000000001a7c29 : fucomp st(7) ; jmp qword ptr [rbx]
0x000000000006e50e : fucompi st(0) ; adc r8, qword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000075bdd : fucompi st(0) ; cmp eax, 0x89000056 ; ret 0x98eb
0x000000000007652d : fucompi st(0) ; in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d6
0x00000000000c911d : fucompi st(0) ; int 0xa3
0x0000000000088372 : fucompi st(0) ; js 0x883f2 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000133634 : fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xffee
0x00000000000bf4ac : fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xfffc
0x00000000000f9078 : fucompi st(0) ; rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000028027 : fucompi st(0) ; ret
0x0000000000057fd8 : fucompi st(0) ; ret 0xfc78
0x0000000000033ee0 : fucompi st(0) ; ret 0xfeb9
0x0000000000020fd8 : fucompi st(0) ; ret 0xffe8
0x0000000000119d18 : fucompi st(0) ; ret 6
0x000000000008d70d : fxch st(0), st(7) ; or eax, dword ptr [rax] ; ret
0x00000000001acbec : hlt ; adc byte ptr [rcx], al ; add al, dh ; ret
0x000000000013efc8 : hlt ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000cdff0 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001aafcd : hlt ; add byte ptr [rax], al ; mov al, 0x22 ; jmp qword ptr [rcx]
0x00000000001b02ec : hlt ; add dword ptr [r8], r8d ; rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001baf65 : hlt ; add dword ptr [rax], eax ; js 0x1baf08 ; sti ; jmp qword ptr [rdx]
0x000000000019a88d : hlt ; add dword ptr [rax], eax ; xor al, 0xd9 ; clc ; call rsp
0x00000000001ae9ec : hlt ; add dword ptr cs:[rax], eax ; xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001af1ec : hlt ; add dword ptr ss:[rax], eax ; adc ah, dh ; hlt ; jmp qword ptr [rsi]
0x00000000001b0aec : hlt ; add qword ptr [r8], r8 ; xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x0000000000105cfb : hlt ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000198ef0 : hlt ; and ch, dh ; jmp rsp
0x000000000018956a : hlt ; call qword ptr [rax]
0x00000000001ae7d2 : hlt ; call qword ptr [rbx]
0x00000000001ad982 : hlt ; call qword ptr [rcx]
0x0000000000189162 : hlt ; call qword ptr [rdi]
0x00000000001ad76a : hlt ; call qword ptr [rsi]
0x0000000000189102 : hlt ; call rax
0x0000000000189146 : hlt ; call rcx
0x00000000001af412 : hlt ; call rsi
0x0000000000198d4a : hlt ; call rsp
0x00000000001ab0ec : hlt ; cmc ; add byte ptr [rax], al ; and byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001af8ec : hlt ; cmp eax, 0x1e400001 ; cmc ; jmp qword ptr [rcx]
0x000000000009ebdb : hlt ; cmp ecx, esi ; je 0x9ebd6 ; ret
0x0000000000196e60 : hlt ; cmp edx, ebp ; jmp rsp
0x00000000001a61ec : hlt ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x1a622d ; out dx, al ; jmp qword ptr [rcx]
0x00000000001890fe : hlt ; dec dword ptr [rax + 0x4d] ; hlt ; call rax
0x000000000018952e : hlt ; dec dword ptr [rax + 0x53] ; hlt ; call rax
0x00000000000de2be : hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x000000000018921e : hlt ; dec dword ptr [rdi] ; push rbx ; hlt ; lcall ptr [rcx] ; push rbx ; hlt ; jmp qword ptr [rbx]
0x000000000018915e : hlt ; dec dword ptr [rip + 0x17fff451] ; push rcx ; hlt ; jmp qword ptr [rcx]
0x0000000000189282 : hlt ; dec dword ptr [rip + 0x17fff454] ; push rsp ; hlt ; jmp qword ptr [rcx]
0x0000000000198d7a : hlt ; dec dword ptr [rsp + rdx*2 + 0x20b40001] ; hlt ; call rsp
0x00000000001af1f1 : hlt ; hlt ; jmp qword ptr [rsi]
0x0000000000198d42 : hlt ; inc dword ptr [rdx + rdx*2 + 0x7f40001] ; hlt ; call rsp
0x0000000000189142 : hlt ; inc edi ; push rax ; hlt ; call rcx
0x0000000000189266 : hlt ; inc edi ; push rbx ; hlt ; call rcx
0x00000000000f69dd : hlt ; ja 0xf6977 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000184188 : hlt ; jmp 0x18415d
0x0000000000189226 : hlt ; jmp qword ptr [rbx]
0x0000000000189166 : hlt ; jmp qword ptr [rcx]
0x00000000001ad9ea : hlt ; jmp qword ptr [rsi]
0x00000000001ad012 : hlt ; jmp rcx
0x000000000018972e : hlt ; jmp rdi
0x00000000001891aa : hlt ; jmp rdx
0x0000000000189566 : hlt ; jmp rsp
0x00000000001727d5 : hlt ; jne 0x1728f7 ; ret
0x00000000001727d4 : hlt ; jne 0x1728f8 ; ret
0x00000000001b2bec : hlt ; jo 0x1b2bf7 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a0b8 : hlt ; jrcxz 0x19a0b7 ; inc esp ; ret 1
0x00000000001892ea : hlt ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x0000000000189222 : hlt ; lcall ptr [rcx] ; push rbx ; hlt ; jmp qword ptr [rbx]
0x00000000001a67ec : hlt ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jle 0x1a67e8 ; jmp qword ptr [rcx]
0x000000000015acca : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fce : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000e1c66 : hlt ; mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x0000000000171de3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000001892e6 : hlt ; push qword ptr [rdx] ; push rax ; hlt ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x00000000001890fa : hlt ; push rax ; hlt ; dec dword ptr [rax + 0x4d] ; hlt ; call rax
0x000000000018952a : hlt ; push rax ; push rdx ; hlt ; dec dword ptr [rax + 0x53] ; hlt ; call rax
0x0000000000189562 : hlt ; push rdx ; mov esp, esi ; jmp rsp
0x000000000018955e : hlt ; push rdx ; mov esp, esi ; push rdx ; mov esp, esi ; jmp rsp
0x000000000009ebbb : hlt ; ret
0x000000000019b9a0 : hlt ; ret 0xfffd
0x00000000000f4008 : hlt ; ret 0xffff
0x000000000019a0cc : hlt ; ret 1
0x000000000019ae68 : hlt ; sar cl, 1 ; call rsp
0x00000000001ad7ec : hlt ; sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x0000000000199c08 : hlt ; sbb edi, esi ; call rsp
0x0000000000195535 : hlt ; sti ; call rax
0x00000000001842c3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000171de7 : hlt ; sub eax, edx ; ret
0x000000000009f47e : hlt ; sub rsp, 8 ; call 0x8b727
0x0000000000003cd9 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001981a8 : hlt ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x00000000001975f0 : hlt ; xchg eax, esp ; in eax, dx ; jmp rsp
0x00000000000d72cb : hlt ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd726e ; pop rbx ; ret
0x000000000007d8a9 : hlt ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000000b9fee : idiv bh ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000105125 : idiv bh ; add rsp, 0x408 ; ret
0x000000000018a7c2 : idiv bh ; jl 0x18a7c2 ; call qword ptr [rsi]
0x000000000018a7be : idiv bh ; jl 0x18a7c2 ; push rdx ; jl 0x18a7c6 ; call qword ptr [rsi]
0x000000000019934a : idiv bh ; mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x00000000001992c2 : idiv bh ; mov esp, 0x84000178 ; adc al, 0xf6 ; call rsp
0x000000000019924a : idiv bh ; mov esp, 0xd4000176 ; or al, 0xf6 ; call rsp
0x000000000019996a : idiv bh ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x00000000000b9faa : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000018a4b4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000128a4e : idiv bh ; xor eax, eax ; ret
0x0000000000023b86 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000019a122 : idiv edi ; cld ; ret
0x0000000000127468 : idiv edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000ef6d3 : idiv edi ; dec dword ptr [rbp + rcx*4 + 0x25] ; ret
0x000000000019a0ca : idiv edi ; hlt ; ret 1
0x000000000019a0f2 : idiv edi ; insb byte ptr [rdi], dx ; ret
0x0000000000199f22 : idiv edi ; lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000019a0b2 : idiv edi ; lodsb al, byte ptr [rsi] ; ret 1
0x0000000000199b02 : idiv edi ; mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000199c02 : idiv edi ; mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x0000000000199eea : idiv edi ; pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x000000000019a0ea : idiv edi ; push rsp ; ret
0x000000000019a102 : idiv edi ; pushfq ; ret
0x000000000019a09a : idiv edi ; ret 1
0x000000000019a0aa : idiv edi ; xchg eax, esp ; ret 1
0x000000000003a6a6 : idiv esi ; ret
0x000000000003a6a5 : idiv rsi ; ret
0x0000000000196154 : imul byte ptr [rbp - 0x52790004] ; cld ; call qword ptr [rsi]
0x00000000000668fc : imul cl ; ret
0x00000000000a4ec8 : imul cl ; ret 8
0x00000000001735b3 : imul eax ; out dx, eax ; ret 0xffea
0x0000000000129497 : imul eax ; ret
0x00000000000e34cc : imul eax ; salc ; ret
0x00000000000eaf07 : imul eax, dword ptr [rax], 0x440f0000 ; ret 0xa6e9
0x00000000001968d5 : imul eax, dword ptr [rax], 0xe9654400 ; jmp rsp
0x00000000001a244d : imul eax, dword ptr [rax], 0xecf56000 ; call qword ptr [rsi]
0x0000000000170941 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000055f36 : imul eax, dword ptr [rcx], 0x7e8b4d00 ; and byte ptr [rax + 1], cl ; ret
0x0000000000080510 : imul eax, dword ptr [rcx], 0xf6410000 ; ret 0xf02
0x00000000000bd336 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000bd5ef : imul eax, dword ptr [rdi], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000d01b7 : imul eax, dword ptr [rdx], 0x75c08500 ; ret 0x858b
0x000000000010eca5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000779c4 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000084c61 : imul ebx, edi, -1 ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000013a31d : imul ecx, dword ptr [rax - 0x75], 5 ; ret
0x000000000010ec45 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000896fa : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b3eac : imul ecx, dword ptr [rdx], 0 ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000010eb7f : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000046ef1 : imul edi, eax, 4 ; add byte ptr [rax - 0x77], cl ; ret 0x3dbe
0x0000000000076770 : imul edi, ebp, 0x89c085ff ; ret
0x00000000000ca683 : imul edi, edi, 0x3c6ffff ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000121651 : imul edi, esi, 0x8348ffff ; ret
0x00000000001960bd : imul edi, esp, 0xfc6b60ff ; jmp rax
0x000000000010ec75 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188e98 : imul edx, ecx, 0xdc70fff3 ; call rax
0x0000000000002b84 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003aa0 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000004d3d2 : imul esi, dword ptr [rdi], 0 ; call rax
0x00000000000bc6c4 : imul esi, esi, 0x3c ; add eax, esi ; ret
0x000000000013de51 : imul esp, dword ptr [rbx], 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003a733 : imul esp, dword ptr [rdx + 0x38], 0x58d4800 ; ret 0x387a
0x00000000000ba333 : imul esp, dword ptr [rsi + 0x30], 0x58d4800 ; ret 0x307e
0x00000000000a5c0c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000001baadc : in al, -0x11 ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x0000000000003794 : in al, -0x12 ; jne 0x3776 ; ret 0x975
0x00000000000f2adf : in al, -0x18 ; ret
0x0000000000197e70 : in al, -0x27 ; out dx, al ; call rsp
0x00000000001a92dc : in al, -0x29 ; add byte ptr [rax], al ; jo 0x1a930d ; int1 ; jmp rcx
0x000000000019a11c : in al, -0x3d ; add dword ptr [rax], eax ; je 0x19a111 ; idiv edi ; cld ; ret
0x000000000019b998 : in al, -0x3e ; std ; inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x0000000000189568 : in al, -0x79 ; hlt ; call qword ptr [rax]
0x000000000009a91d : in al, -0x7d ; ret 0x480f
0x000000000015acaa : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000008f2eb : in al, -0xd ; ret
0x00000000000f362a : in al, -1 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x1f8b0
0x00000000001a5e71 : in al, -4 ; call qword ptr [rdx]
0x000000000019a0d9 : in al, -9 ; jmp qword ptr [rbx + rax*8]
0x000000000019a0c9 : in al, -9 ; push rsp ; ret 1
0x0000000000172808 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000001077b1 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x000000000019bbdc : in al, 0 ; add byte ptr [rax], al ; xor byte ptr [rbp - 0x18], cl ; call qword ptr [rsi]
0x0000000000197d65 : in al, 0 ; add byte ptr [rsi - 0x12], al ; call rsp
0x000000000019b160 : in al, 0x2e ; cli ; jmp rsp
0x000000000019aa00 : in al, 0x3b ; stc ; jmp rsp
0x000000000009ec2b : in al, 0x41 ; cmp eax, ecx ; je 0x9ec17 ; ret
0x00000000001984a0 : in al, 0x46 ; int1 ; call rsp
0x00000000001b0edc : in al, 0x53 ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0edf ; jmp qword ptr [rcx]
0x000000000019b624 : in al, 0x57 ; add al, byte ptr [rax] ; ret
0x000000000019b310 : in al, 0x57 ; cli ; jmp rsp
0x0000000000089a6c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000000aa95e : in al, 0x75 ; adc byte ptr [rbx - 0x6bf0fd06], al ; ret 0x8444
0x000000000004c5b4 : in al, 0xf ; lahf ; ret
0x0000000000050300 : in al, 0xf ; test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x000000000012568a : in al, 0xf ; test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000019a645 : in al, 1 ; add byte ptr [rbp - 8], dl ; jmp rsp
0x000000000004ed8b : in al, 5 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000a6748 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000001979a8 : in al, 8 ; out dx, al ; jmp rsp
0x00000000001acce4 : in al, dx ; adc dword ptr [rcx], eax ; add al, cl ; fpatan ; call qword ptr [rbx]
0x00000000000f12c1 : in al, dx ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000039aa3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000bdda4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x572
0x00000000001242a4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff0d
0x00000000001aa775 : in al, dx ; add byte ptr [rax], al ; clc ; add dh, dl ; call rdi
0x0000000000064329 : in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000bd9f0 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000084ab8 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000004c5b0 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000145400 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001b09e4 : in al, dx ; add qword ptr [rax], r8 ; clc ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001adee4 : in al, dx ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x65], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001825fa : in al, dx ; call qword ptr [rax]
0x00000000001a2452 : in al, dx ; call qword ptr [rsi]
0x00000000001a1642 : in al, dx ; call rsp
0x000000000004a219 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001aef59 : in al, dx ; hlt ; jmp qword ptr [rcx]
0x0000000000187df9 : in al, dx ; int1 ; call rax
0x0000000000187e05 : in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187df5 : in al, dx ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187dcd : in al, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187dfd : in al, dx ; int1 ; jmp rax
0x0000000000187dc9 : in al, dx ; int1 ; push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x00000000001a0ffa : in al, dx ; jmp qword ptr [rcx]
0x00000000001a132a : in al, dx ; jmp rax
0x00000000001a144a : in al, dx ; jmp rbx
0x00000000001a36e4 : in al, dx ; jnp 0x1a36ee ; add al, ch ; cmp al, 0xed ; jmp qword ptr [rdi]
0x00000000001047b8 : in al, dx ; mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x1047c8 ; call rbx
0x00000000000ff2e3 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000152fca : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000009ed23 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000013aa64 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000015b0aa : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000009f481 : in al, dx ; or al, ch ; cwde ; ret 0xfffe
0x000000000012b051 : in al, dx ; or al, ch ; fadd dword ptr [rdi - 0x11] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000045b5c : in al, dx ; or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012befa : in al, dx ; or al, ch ; out dx, eax ; ret 0
0x000000000006dcd6 : in al, dx ; or al, ch ; ret
0x000000000006ddd3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x0000000000082f47 : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000146124 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000013dc9d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000f71c2 : in al, dx ; or dh, dh ; ret 0x7540
0x0000000000187474 : in al, dx ; out dx, al ; call rsp
0x00000000001b2ae4 : in al, dx ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b240c
0x000000000009eb2b : in al, dx ; ret
0x0000000000117882 : in al, dx ; sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3b1dc
0x00000000000f6e41 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001a6ae4 : in al, dx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x00000000000025ab : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001a66e4 : in al, dx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cwde ; jae 0x1a66e0 ; jmp qword ptr [rdx]
0x000000000018581e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857b1 ; ret 0x48f
0x000000000018581d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857b2 ; ret 0x48f
0x000000000013ccd0 : in al, dx ; xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012f7c3 : in al, dx ; xor dh, dh ; ret 0xc707
0x00000000001869f1 : in ax, dx ; jmp qword ptr [rdi]
0x0000000000196ba9 : in eax, -0x17 ; call rsp
0x0000000000185dd9 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000052fc3 : in eax, -0x21 ; loopne 0x52f54 ; ret 0xe680
0x0000000000054f3c : in eax, -0x21 ; loopne 0x54ecd ; ret 0xe680
0x0000000000189034 : in eax, -0x33 ; call rcx
0x0000000000102bbf : in eax, -0x34 ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102bcf ; call rbx
0x00000000000d91a3 : in eax, -0x77 ; ret
0x000000000015ad2a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000944ea : in eax, -0xd ; ret
0x00000000001abd81 : in eax, -0xe ; call qword ptr [rsi]
0x00000000001852a1 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001954d1 : in eax, -5 ; call qword ptr [rax - 0x1f000417]
0x00000000001951ed : in eax, -5 ; call qword ptr [rax]
0x000000000019522d : in eax, -5 ; call rax
0x00000000001aa0c5 : in eax, 0 ; add byte ptr [rax - 0x17], cl ; int1 ; jmp qword ptr [rdi]
0x0000000000183f23 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000012a5d6 : in eax, 0x41 ; call rdi
0x000000000008f42a : in eax, 0x48 ; mov eax, edi ; ret
0x000000000004a6f2 : in eax, 0x48 ; mov eax, esi ; ret
0x0000000000115995 : in eax, 0x5d ; ret
0x00000000001831b9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000000fe4b7 : in eax, 0x72 ; sub al, 0 ; mov rdx, rax ; jmp 0xfe455
0x00000000001336a2 : in eax, 0x74 ; sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x0000000000003aa2 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000000abf33 : in eax, 0xf ; je 0xabf58 ; add rax, 2 ; ret
0x000000000019a66d : in eax, 1 ; add byte ptr [rcx + rbp*2], ah ; clc ; call rsp
0x000000000012fcce : in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000007652f : in eax, dx ; add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x764d4
0x00000000000af760 : in eax, dx ; add dword ptr [rax - 0x77], ecx ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000b1e70 : in eax, dx ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x2041
0x00000000001a3dba : in eax, dx ; call qword ptr [rax]
0x00000000001a45da : in eax, dx ; call qword ptr [rcx]
0x00000000001a4c3a : in eax, dx ; call qword ptr [rdx]
0x00000000001a456a : in eax, dx ; call qword ptr [rsi]
0x0000000000186c5e : in eax, dx ; call rax
0x0000000000186a26 : in eax, dx ; call rcx
0x0000000000186a46 : in eax, dx ; call rdx
0x0000000000186962 : in eax, dx ; call rsi
0x000000000019762a : in eax, dx ; call rsp
0x0000000000186a66 : in eax, dx ; dec dword ptr [rax + 0x5e] ; in eax, dx ; ljmp ptr [rdi] ; pop rsi ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000197472 : in eax, dx ; dec esp ; test eax, 0x4d840000 ; in eax, dx ; jmp rsp
0x0000000000186f9a : in eax, dx ; inc dword ptr [rax] ; shr ebp, cl ; jmp rcx
0x00000000001975ea : in eax, dx ; inc dword ptr [rbp + rsi*4 - 0x6b0c0000] ; in eax, dx ; jmp rsp
0x00000000001977fa : in eax, dx ; inc esp ; ret 0
0x0000000000187e09 : in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187e31 : in eax, dx ; int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e29 : in eax, dx ; int1 ; inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187e0d : in eax, dx ; int1 ; jmp qword ptr [rax]
0x0000000000187e2d : in eax, dx ; int1 ; jmp rax
0x00000000001a2a8a : in eax, dx ; jmp qword ptr [rax]
0x00000000001a4972 : in eax, dx ; jmp qword ptr [rbx]
0x00000000001a440a : in eax, dx ; jmp qword ptr [rcx]
0x00000000001869ee : in eax, dx ; jmp qword ptr [rdi]
0x00000000001a3c5a : in eax, dx ; jmp qword ptr [rsi]
0x0000000000186f9e : in eax, dx ; jmp rcx
0x00000000001a3872 : in eax, dx ; jmp rsi
0x000000000019747a : in eax, dx ; jmp rsp
0x00000000001178a9 : in eax, dx ; jne 0x1178c1 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001740ff : in eax, dx ; jne 0x1740e1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019776a : in eax, dx ; lcall ptr [rdi + rdi*4 - 0x447c0000] ; in eax, dx ; call rsp
0x000000000019749a : in eax, dx ; lcall ptr [rdx + rbp*4 + 0x51b40000] ; in eax, dx ; jmp rsp
0x00000000000aa382 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000018695e : in eax, dx ; ljmp ptr [rax] ; test al, 0xed ; call rsi
0x000000000018695a : in eax, dx ; ljmp ptr [rax] ; test al, 0xed ; ljmp ptr [rax] ; test al, 0xed ; call rsi
0x0000000000186c7e : in eax, dx ; ljmp ptr [rbx - 0x5400122e] ; shr ch, cl ; call rax
0x0000000000186a6a : in eax, dx ; ljmp ptr [rdi] ; pop rsi ; in eax, dx ; jmp qword ptr [rdi]
0x00000000000a9d49 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9d5f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d81 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9d9f : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dbf : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9de5 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e01 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e21 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e41 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9e67 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e89 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec7 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee3 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f03 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f23 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f43 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9f69 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9fb9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c8f : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cad : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9ccd : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cef : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d0f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d2f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc5 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9bd7 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9bed : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c05 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c1b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a9c4b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9c57 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a9c6d : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9bb1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x0000000000152dda : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000aebd6 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xaebee
0x00000000000b14f7 : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb150e
0x00000000000b3cae : in eax, dx ; mov r13, r15 ; setne dl ; jmp 0xb3cce
0x0000000000053f67 : in eax, dx ; mov word ptr [rbx], ss ; add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x000000000015b12a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000d9b14 : in eax, dx ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x0000000000149c90 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004876b : in eax, dx ; or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000017453a : in eax, dx ; pop rbx ; ret
0x00000000001978b2 : in eax, dx ; push qword ptr [rcx + rcx*8 - 0xfac0000] ; in eax, dx ; call rsp
0x0000000000197582 : in eax, dx ; push qword ptr [rcx + rsi*4 - 0x7f5c0000] ; in eax, dx ; jmp rsp
0x00000000001869ea : in eax, dx ; push qword ptr [rsi + rbp*2 + 0x6627ffed] ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000186a1e : in eax, dx ; push qword ptr [rsi + rbp*2 + 0x6eb4ffed] ; in eax, dx ; call rcx
0x0000000000186a3e : in eax, dx ; push qword ptr [rsi + rbp*2 + 0x6eb4ffed] ; in eax, dx ; call rdx
0x0000000000186a56 : in eax, dx ; push qword ptr [rsi + rbp*2 + 0x6eb4ffed] ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001974da : in eax, dx ; push qword ptr [rsp + rbp*4 + 0x6b440000] ; in eax, dx ; jmp rsp
0x00000000001976e2 : in eax, dx ; push qword ptr [rsp + rdi*4 - 0x502c0000] ; in eax, dx ; call rsp
0x0000000000071c02 : in eax, dx ; ret
0x0000000000188cdc : in eax, dx ; scasd eax, dword ptr [rdi] ; call rax
0x00000000001954e1 : in eax, dx ; sti ; call rax
0x00000000000aa4d2 : in eax, dx ; sub rax, 1 ; ret
0x000000000009ec6a : in eax, dx ; xor eax, eax ; ret
0x00000000000aa608 : inc bl ; cmp dl, 1 ; jb 0xaa61a ; mov byte ptr [rdi], cl ; ret
0x000000000014db36 : inc bl ; jb 0x14db46 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e026 : inc bl ; jb 0x14e036 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e3c6 : inc bl ; jb 0x14e3d6 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000008f311 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000046da3 : inc byte ptr [r11 - 0x6bf00220] ; ret 0x8341
0x000000000007b522 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x0000000000046da4 : inc byte ptr [rbx - 0x6bf00220] ; ret 0x8341
0x000000000002a696 : inc byte ptr [rbx] ; je 0x2a6a5 ; pop rbx ; ret
0x00000000000774f9 : inc byte ptr [rdx] ; je 0x7750f ; mov dword ptr [rdi], edx ; ret
0x00000000001951eb : inc dword ptr [rax + 0x10fffbe5] ; fdivr st(3) ; call rax
0x000000000019558b : inc dword ptr [rax + 0x10fffc35] ; sub ah, bh ; call rax
0x000000000019569b : inc dword ptr [rax + 0x14] ; cld ; call qword ptr [rax - 0x1f0003eb]
0x00000000001956ef : inc dword ptr [rax + 0x1b] ; cld ; call qword ptr [rax - 0x1f0003e4]
0x0000000000195673 : inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x00000000001955db : inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000195647 : inc dword ptr [rax + 0x32] ; cld ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019564b : inc dword ptr [rax + 0x34] ; cld ; call rax
0x000000000019542f : inc dword ptr [rax + 0x40fffbff] ; add esp, edi ; jmp qword ptr [rax]
0x0000000000194eab : inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000195933 : inc dword ptr [rax + 0x5e] ; cld ; call rax
0x000000000019571b : inc dword ptr [rax + 0x61] ; cld ; call rax
0x0000000000175837 : inc dword ptr [rax + 0x67] ; jmp 0x17583f
0x0000000000194eff : inc dword ptr [rax + 0x6c] ; sti ; call qword ptr [rax - 0x1f000493]
0x00000000001956cf : inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x0000000000195433 : inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x00000000001953ff : inc dword ptr [rax + 7] ; cld ; jmp qword ptr [rax]
0x0000000000194df3 : inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000198283 : inc dword ptr [rax + rcx - 0x4dbffff] ; out dx, eax ; call rsp
0x000000000019b15b : inc dword ptr [rax + rdi + 0x2ee40002] ; cli ; jmp rsp
0x0000000000195523 : inc dword ptr [rax - 0x11] ; sti ; call qword ptr [rax - 0x1f000410]
0x0000000000187dc7 : inc dword ptr [rax - 0x14] ; int1 ; push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x000000000019522b : inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195227 : inc dword ptr [rax - 0x1d] ; sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195257 : inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x00000000001952d7 : inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001956ff : inc dword ptr [rax - 0x2f0003e0] ; and esp, edi ; jmp qword ptr [rax]
0x00000000001956ab : inc dword ptr [rax - 0x2f0003e7] ; sbb bh, ah ; jmp qword ptr [rax]
0x0000000000195533 : inc dword ptr [rax - 0x2f00040c] ; cmc ; sti ; jmp qword ptr [rax]
0x00000000001954df : inc dword ptr [rax - 0x2f000413] ; out dx, al ; sti ; jmp qword ptr [rax]
0x0000000000195367 : inc dword ptr [rax - 0x2f000438] ; leave ; sti ; jmp qword ptr [rax]
0x0000000000195313 : inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000194ecf : inc dword ptr [rax - 0x2f0004a4] ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000195343 : inc dword ptr [rax - 0x2f] ; sti ; call qword ptr [rax - 0x1f00042e]
0x0000000000195357 : inc dword ptr [rax - 0x3d] ; sti ; call qword ptr [rax - 0x1f00043c]
0x000000000004b9d5 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x0000000000187fa3 : inc dword ptr [rax - 0x4f000dff] ; add edx, esi ; jmp rax
0x000000000004dc96 : inc dword ptr [rax - 0x51743] ; jmp qword ptr [rax]
0x0000000000196317 : inc dword ptr [rax - 0x53] ; cld ; call rax
0x000000000019613f : inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000195083 : inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000018c153 : inc dword ptr [rax - 0x76] ; cli ; call rax
0x00000000000d1928 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000195e1f : inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195c47 : inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195627 : inc dword ptr [rax - 0x7f0003ce] ; xor al, 0xfc ; call qword ptr [rax]
0x00000000001951e7 : inc dword ptr [rax - 0x7f00041d] ; in eax, -5 ; call qword ptr [rax]
0x000000000019544f : inc dword ptr [rax - 1] ; sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x0000000000194de3 : inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000001abacd : inc dword ptr [rax] ; add al, dh ; ret
0x00000000001954b7 : inc dword ptr [rax] ; add bh, ah ; jmp rax
0x00000000000f9638 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000004c985 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000005aef2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000061a3b : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000006084d : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x00000000000b64eb : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000001727ed : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000016fa27 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000034efc : inc dword ptr [rax] ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000187fc7 : inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x000000000018804f : inc dword ptr [rax] ; add eax, 0x510fff2 ; jmp qword ptr [rax]
0x0000000000187feb : inc dword ptr [rax] ; add esi, edx ; jmp qword ptr [rax]
0x0000000000195453 : inc dword ptr [rax] ; add esp, edi ; jmp rax
0x00000000001956cb : inc dword ptr [rax] ; and al, 0xfc ; inc dword ptr [rax + 0xf] ; cld ; call qword ptr [rax]
0x0000000000195073 : inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x0000000000187e07 : inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x000000000019653f : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000194e4b : inc dword ptr [rax] ; or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x00000000001193e0 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000187e33 : inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e7b : inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187bb7 : inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000195b7f : inc dword ptr [rax] ; push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x0000000000187f6b : inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x00000000000ff28c : inc dword ptr [rax] ; ret
0x0000000000194e3b : inc dword ptr [rax] ; sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000194e8b : inc dword ptr [rax] ; sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000186f9b : inc dword ptr [rax] ; shr ebp, cl ; jmp rcx
0x0000000000187f33 : inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000194eb3 : inc dword ptr [rax] ; sti ; jmp rax
0x000000000019612f : inc dword ptr [rax] ; stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000195553 : inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195c37 : inc dword ptr [rax] ; test bh, ah ; call qword ptr [rax + 0x20fffc83]
0x000000000011d714 : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011d8fa : inc dword ptr [rbp + 0x31] ; rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x000000000019a66b : inc dword ptr [rbp + 0x69240001] ; clc ; call rsp
0x00000000001975eb : inc dword ptr [rbp + rsi*4 - 0x6b0c0000] ; in eax, dx ; jmp rsp
0x000000000003a6f3 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x00000000000fb69c : inc dword ptr [rbp - 0x76608a40] ; out dx, eax ; call 0xf78b9
0x0000000000063df9 : inc dword ptr [rbp - 0x76808b40] ; ret
0x00000000000684e8 : inc dword ptr [rbp - 0x76818b40] ; ret
0x00000000001219bf : inc dword ptr [rbp - 0x769b8740] ; ret
0x0000000000121d91 : inc dword ptr [rbp - 0x76a18740] ; ret
0x0000000000063ad1 : inc dword ptr [rbp - 0x76cd8b40] ; ret
0x0000000000068ac4 : inc dword ptr [rbp - 0x76e38b40] ; ret
0x000000000011d76a : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; lahf ; ret 0xc2e9
0x00000000000600b8 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000ffd0f : inc dword ptr [rbp - 0x7ce38b40] ; ret
0x00000000000ffd5a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000050eb6 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x50f3b ; ret 0x8945
0x0000000000053b28 : inc dword ptr [rbx + 0x394401c3] ; jrcxz 0x53bad ; ret
0x00000000000c59d2 : inc dword ptr [rbx + 0x634801c3] ; fisttp dword ptr [rax + 0x39] ; ret
0x0000000000195dbb : inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x00000000000d7a95 : inc dword ptr [rbx + rcx*4 + 0x73] ; sub al, 0x83 ; ret 0x4801
0x000000000005a2eb : inc dword ptr [rbx - 0x10b743] ; jmp qword ptr [rax]
0x000000000003338e : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000122fbf : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x000000000003afba : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x0000000000189e8b : inc dword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x00000000000d7c73 : inc dword ptr [rbx] ; cmp byte ptr [rcx + 8], 2 ; jne 0xd7c59 ; jmp 0xd7c49
0x00000000000aacd8 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000aabff : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000006588f : inc dword ptr [rcx + 0x80e2] ; add dh, dh ; ret
0x00000000000576c9 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000124d44 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x0000000000067491 : inc dword ptr [rcx - 0x44] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x63705
0x00000000000edca5 : inc dword ptr [rcx - 0x73] ; push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000000b7e22 : inc dword ptr [rcx - 0x77] ; fisttp qword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000000000002b76c : inc dword ptr [rcx - 0x77] ; ret
0x00000000000dbc0d : inc dword ptr [rcx - 0x77] ; ret 0x8b49
0x00000000000e3f8a : inc dword ptr [rcx - 0x77] ; ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x0000000000122aca : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000174579 : inc dword ptr [rcx] ; ja 0x174584 ; ret
0x00000000001bc5a6 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001bc440 : inc dword ptr [rcx] ; or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x00000000000df044 : inc dword ptr [rcx] ; ret
0x00000000000d6ef8 : inc dword ptr [rcx] ; ret 0x5589
0x00000000000dec4a : inc dword ptr [rcx] ; ret 0x8b49
0x00000000000c6580 : inc dword ptr [rdi + rcx + 0x49] ; ret
0x0000000000098f93 : inc dword ptr [rdi + rcx - 0x4a] ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000e0f77 : inc dword ptr [rdi + rcx - 0x4a] ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000019b99b : inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x0000000000195fcb : inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x00000000000dc0b6 : inc dword ptr [rdi] ; jbe 0xdc0c9 ; mov eax, 0xc ; ret
0x0000000000195807 : inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001962b3 : inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000198d43 : inc dword ptr [rdx + rdx*2 + 0x7f40001] ; hlt ; call rsp
0x000000000019ae23 : inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x00000000001961eb : inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000195cf3 : inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x00000000001961db : inc dword ptr [rdx] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x00000000001957f7 : inc dword ptr [rdx] ; pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195ce3 : inc dword ptr [rdx] ; xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x000000000014b92d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000195763 : inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x000000000019ac8b : inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x0000000000196187 : inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000189e9f : inc dword ptr [rsi*2 + 0x7538fff5] ; cmc ; call rdi
0x0000000000189beb : inc dword ptr [rsi] ; cmc ; jmp rsp
0x0000000000196177 : inc dword ptr [rsi] ; stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x000000000019af9b : inc dword ptr [rsp + rbp + 0x3340002] ; cli ; call rsp
0x0000000000187fe3 : inc eax ; add dh, dl ; jmp rax
0x0000000000187f93 : inc eax ; add dl, dh ; push rax ; add dl, dh ; jmp qword ptr [rax]
0x0000000000187fbb : inc eax ; add edx, esi ; jmp rax
0x0000000000187df7 : inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e2b : inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187e6b : inc eax ; out dx, al ; int1 ; call rax
0x0000000000187e4b : inc eax ; out dx, al ; int1 ; jmp rax
0x0000000000187ba7 : inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x000000000019608f : inc eax ; pop rcx ; cld ; jmp rax
0x0000000000034f19 : inc eax ; shr eax, 0x1f ; ret
0x0000000000195543 : inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000187f4b : inc eax ; std ; int1 ; jmp rax
0x00000000001954ef : inc eax ; sti ; call qword ptr [rax]
0x000000000018b057 : inc eax ; sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x0000000000196337 : inc eax ; test eax, 0xa950fffc ; cld ; jmp rax
0x000000000018a4b9 : inc ebx ; add dh, bh ; jmp rdi
0x0000000000140c3a : inc ebx ; mov eax, 0xffffffff ; ret
0x00000000000368cc : inc ebx ; nop ; mov eax, edx ; ret
0x0000000000074f5c : inc ebx ; nop ; xor eax, eax ; ret
0x00000000001722d9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000791c8 : inc ebx ; nop word ptr [rax + rax] ; ret
0x00000000001951ab : inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951a7 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x0000000000195187 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001950d7 : inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019518b : inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001950db : inc ecx ; mov bh, 0xfd ; jmp rcx
0x00000000001951cb : inc ecx ; mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000189143 : inc edi ; push rax ; hlt ; call rcx
0x0000000000189267 : inc edi ; push rbx ; hlt ; call rcx
0x000000000005cb56 : inc esi ; add al, 1 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000000fe579 : inc esi ; jmp qword ptr [r8]
0x000000000019811b : inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x0000000000198f43 : inc esp ; add word ptr [rax], ax ; mov ah, 0x40 ; cmc ; jmp rsp
0x0000000000199213 : inc esp ; jne 0x199220 ; add byte ptr [rdx + rcx - 0xa], dl ; jmp rsp
0x00000000001977fb : inc esp ; ret 0
0x000000000019a0bb : inc esp ; ret 1
0x000000000019a49b : inc esp ; salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000000d6ef7 : inc qword ptr [rcx] ; ret 0x5589
0x00000000001acd64 : insb byte ptr [rdi], dx ; adc al, byte ptr [rcx] ; add al, cl ; fpatan ; jmp qword ptr [rcx]
0x00000000001468a4 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000012de30 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000001bb826 : insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001af964 : insb byte ptr [rdi], dx ; add dword ptr ds:[rax], eax ; call 0x221aee92
0x0000000000034f9b : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x000000000003502a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000035008 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000351aa : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000035059 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000034f3a : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001bb064 : insb byte ptr [rdi], dx ; cmc ; add dword ptr [rax], eax ; test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001b0739 : insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000001b06c1 : insb byte ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x00000000001af364 : insb byte ptr [rdi], dx ; cmp byte ptr [rcx], al ; add al, cl ; std ; hlt ; jmp qword ptr [rcx]
0x00000000001baf64 : insb byte ptr [rdi], dx ; hlt ; add dword ptr [rax], eax ; js 0x1baf09 ; sti ; jmp qword ptr [rdx]
0x0000000000185dde : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000000f34f0 : insb byte ptr [rdi], dx ; mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x0000000000132372 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003670 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001ba164 : insb byte ptr [rdi], dx ; out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x0000000000197db9 : insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x00000000001b2964 : insb byte ptr [rdi], dx ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x000000000019a0f4 : insb byte ptr [rdi], dx ; ret
0x0000000000065d60 : insb byte ptr [rdi], dx ; ret 0
0x00000000000caaa8 : insb byte ptr [rdi], dx ; ret 0x2f
0x00000000001b5964 : insb byte ptr [rdi], dx ; sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x00000000000e3531 : insb byte ptr [rdi], dx ; shl rsi, 2 ; call 0x1f7f7
0x0000000000194f01 : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax - 0x1f000493]
0x00000000001b6464 : insb byte ptr [rdi], dx ; test eax, 0xe1f80001 ; sti ; call rsi
0x00000000001aed64 : insb byte ptr [rdi], dx ; xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x0000000000149510 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a2875 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x000000000009791f : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000014a410 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000006ce31 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fd1e], al ; ret 1
0x0000000000198bd9 : insd dword ptr [rdi], dx ; call rsp
0x0000000000196105 : insd dword ptr [rdi], dx ; cld ; jmp rax
0x00000000001b07f9 : insd dword ptr [rdi], dx ; cmc ; call qword ptr [rax]
0x00000000001b07c9 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rcx]
0x0000000000104a87 : insd dword ptr [rdi], dx ; enter 0x22e8, -0x79 ; cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000187b71 : insd dword ptr [rdi], dx ; int1 ; call qword ptr [rax]
0x00000000000f7b7f : insd dword ptr [rdi], dx ; jl 0xf7b7a ; dec dword ptr [rax - 0x77] ; ret
0x00000000000b72e4 : insd dword ptr [rdi], dx ; or eax, 0x3d8d4800 ; ret 0xdaa
0x00000000001a6621 : insd dword ptr [rdi], dx ; out dx, al ; jmp rdx
0x0000000000185ddf : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001bf4 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x000000000018418d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x0000000000181edc : insd dword ptr [rdi], dx ; sbb ebx, ebp ; jmp rsp
0x0000000000181ed8 : insd dword ptr [rdi], dx ; sbb ebx, ebp ; ljmp ptr [rbp + 0x19] ; jmp 0x181ee6
0x0000000000194f05 : insd dword ptr [rdi], dx ; sti ; jmp rax
0x000000000018509f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000fe0c2 : int 0x31
0x0000000000048613 : int 0x48
0x0000000000002c33 : int 0x80
0x00000000000c911f : int 0xa3
0x0000000000132fef : int 0xc2
0x00000000001064cf : int 0xc3
0x0000000000188e30 : int 0xc8
0x0000000000181d49 : int 0xea
0x00000000000843cf : int 0xf
0x0000000000106e03 : int 0xf4
0x00000000000038ab : int 3
0x00000000001aac2d : int1 ; add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x00000000000504c6 : int1 ; add eax, r8d ; ret
0x00000000000ba29a : int1 ; call 0x8f3b7
0x00000000000ba299 : int1 ; call 0x8f3b8
0x0000000000187b72 : int1 ; call qword ptr [rax]
0x00000000001a9ffa : int1 ; call qword ptr [rbx]
0x00000000001a93ca : int1 ; call qword ptr [rcx]
0x00000000001a9a0a : int1 ; call qword ptr [rdx]
0x00000000001a91ba : int1 ; call qword ptr [rsi]
0x0000000000187f66 : int1 ; call rax
0x000000000002185c : int1 ; call rbx
0x00000000001aa1f2 : int1 ; call rdi
0x00000000001aa54a : int1 ; call rsi
0x00000000001984a2 : int1 ; call rsp
0x0000000000110b18 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000102a8c : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102a98 ; call rbx
0x0000000000102d3f : int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d4b ; call rbx
0x00000000001048d7 : int1 ; dec dword ptr [rax - 0x75] ; jge 0x1048e3 ; call rbx
0x000000000010294a : int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d4d : int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102957 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102963 ; call rbx
0x0000000000102a7e : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102a8a ; call rbx
0x0000000000102bc1 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102bcd ; call rbx
0x0000000000102d31 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102d3d ; call rbx
0x000000000010454f : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x10455b ; call rbx
0x0000000000104677 : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x104683 ; call rbx
0x00000000001047ba : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1047c6 ; call rbx
0x00000000001048bb : int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1048c7 ; call rbx
0x000000000019865a : int1 ; dec esp ; and al, byte ptr [rcx] ; add byte ptr [rdi - 0xf], al ; jmp rsp
0x0000000000003a9f : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000187dc6 : int1 ; inc dword ptr [rax - 0x14] ; int1 ; push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x0000000000187e06 : int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187e32 : int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e7a : int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187bb6 : int1 ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000187f6a : int1 ; inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x0000000000187f32 : int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000187df6 : int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000187e2a : int1 ; inc eax ; in eax, dx ; int1 ; jmp rax
0x0000000000187e6a : int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000187e4a : int1 ; inc eax ; out dx, al ; int1 ; jmp rax
0x0000000000187ba6 : int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187f4a : int1 ; inc eax ; std ; int1 ; jmp rax
0x000000000009ebdd : int1 ; je 0x9ebd4 ; ret
0x00000000000aa58b : int1 ; jl 0xaa5dc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5ac : int1 ; jl 0xaa5fd ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5bf : int1 ; jl 0xaa610 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa694 : int1 ; jl 0xaa6e5 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa6ec : int1 ; jl 0xaa73d ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa789 : int1 ; jl 0xaa7da ; adc dword ptr [rsi + 7], edx ; ret
0x000000000005c46b : int1 ; jmp 0x5c432
0x000000000005c46a : int1 ; jmp 0x5c433
0x0000000000187f7a : int1 ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f62 : int1 ; jmp qword ptr [rax - 0x2f000e02]
0x0000000000187d9e : int1 ; jmp qword ptr [rax - 0x3f000e16]
0x0000000000187d7e : int1 ; jmp qword ptr [rax - 0x3f000e17]
0x0000000000187d5e : int1 ; jmp qword ptr [rax - 0x3f000e18]
0x0000000000187d6e : int1 ; jmp qword ptr [rax]
0x00000000001a90aa : int1 ; jmp qword ptr [rcx]
0x00000000001a9fca : int1 ; jmp qword ptr [rdi]
0x0000000000187da6 : int1 ; jmp rax
0x00000000000aac95 : int1 ; jmp rcx
0x00000000001a9612 : int1 ; jmp rdi
0x00000000001985ea : int1 ; jmp rsp
0x0000000000119cfb : int1 ; mov edx, 0x8948002a ; ret 0x8b48
0x000000000015ab1b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015359f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000012e78a : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012a26e : int1 ; mov rdi, r13 ; call r12
0x0000000000171db3 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000001bc540 : int1 ; or byte ptr [rbx], al ; ret
0x00000000000aacdb : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000009751e : int1 ; pop rbx ; pop rbp ; ret
0x0000000000187dca : int1 ; push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x0000000000187e66 : int1 ; push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187df2 : int1 ; push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000187f76 : int1 ; push qword ptr [rax - 1] ; int1 ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f5e : int1 ; push qword ptr [rax - 2] ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x0000000000187e02 : int1 ; push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x0000000000187e76 : int1 ; push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187bb2 : int1 ; push rax ; outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x000000000000260b : int1 ; ret
0x00000000001857b6 : int1 ; ret 0x5803
0x00000000000b194b : int1 ; ret 0xfff7
0x00000000001b5f99 : int1 ; sti ; call rcx
0x00000000001954ed : int1 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000171db7 : int1 ; sub eax, edx ; ret
0x00000000000481cd : int1 ; xor eax, eax ; pop rbx ; ret
0x000000000009742e : int1 ; xor eax, eax ; ret
0x00000000001979a5 : iretd ; add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x0000000000102949 : iretd ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102956 : iretd ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102964 ; call rbx
0x0000000000089269 : iretd ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000001048d5 : iretd ; scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x1048e5 ; call rbx
0x0000000000102955 : iretq ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102965 ; call rbx
0x0000000000105684 : ja 0x105693 ; ret
0x0000000000107344 : ja 0x107353 ; ret
0x0000000000107586 : ja 0x107592 ; ret
0x0000000000107638 : ja 0x107643 ; ret
0x0000000000107672 : ja 0x107683 ; ret
0x0000000000108223 : ja 0x108232 ; ret
0x00000000001083a3 : ja 0x1083b2 ; ret
0x000000000010883d : ja 0x108842 ; ret
0x00000000001088df : ja 0x1088ea ; ret
0x000000000010898f : ja 0x10899a ; ret
0x00000000001157f0 : ja 0x1157fb ; ret
0x0000000000115875 : ja 0x11584c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011589d : ja 0x1158bd ; ret
0x0000000000117562 : ja 0x117573 ; ret
0x0000000000117612 : ja 0x117623 ; ret
0x0000000000119057 : ja 0x11906a ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000123bd3 : ja 0x123bd8 ; ret
0x0000000000123f00 : ja 0x123eeb ; mov eax, 0xffffffff ; ret
0x0000000000123fa9 : ja 0x123fc0 ; shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012b751 : ja 0x12b7a4 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012e7ad : ja 0x12e79e ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000013bda7 : ja 0x13bdc3 ; ret
0x000000000013bf1f : ja 0x13bf42 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000013c1a0 : ja 0x13c1d0 ; mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000017457b : ja 0x174582 ; ret
0x0000000000185824 : ja 0x1857ab ; ret 0x48f
0x0000000000188839 : ja 0x188830 ; call rdx
0x000000000018883d : ja 0x188834 ; call rdx
0x0000000000188841 : ja 0x188838 ; call rdx
0x0000000000188845 : ja 0x18883c ; call rdx
0x0000000000188849 : ja 0x188840 ; call rdx
0x000000000018884d : ja 0x188844 ; call rdx
0x0000000000188851 : ja 0x188848 ; call rdx
0x0000000000188855 : ja 0x18884c ; call rdx
0x0000000000188859 : ja 0x188850 ; call rdx
0x000000000018885d : ja 0x188854 ; call rdx
0x0000000000188861 : ja 0x188858 ; call rdx
0x0000000000188865 : ja 0x18885c ; call rdx
0x0000000000188869 : ja 0x188860 ; call rdx
0x000000000018886d : ja 0x188864 ; call rdx
0x0000000000188871 : ja 0x188868 ; call rdx
0x0000000000188875 : ja 0x18886c ; call rdx
0x0000000000188879 : ja 0x188870 ; call rdx
0x000000000018887d : ja 0x188874 ; call rdx
0x0000000000188881 : ja 0x188878 ; call rdx
0x0000000000188891 : ja 0x188888 ; call rdx
0x0000000000188895 : ja 0x18888c ; call rdx
0x0000000000188899 : ja 0x188890 ; call rdx
0x000000000018889d : ja 0x188894 ; call rdx
0x00000000001888a1 : ja 0x188898 ; call rdx
0x00000000001888a5 : ja 0x18889c ; call rdx
0x00000000001888a9 : ja 0x1888a0 ; call rdx
0x00000000001888ad : ja 0x1888a4 ; call rdx
0x00000000001888b9 : ja 0x1888b0 ; call rdx
0x00000000001888bd : ja 0x1888b4 ; call rdx
0x00000000001888c1 : ja 0x1888b8 ; call rdx
0x00000000001888c5 : ja 0x1888bc ; call rdx
0x00000000001888c9 : ja 0x1888c0 ; call rdx
0x00000000001888cd : ja 0x1888c4 ; call rdx
0x00000000001888d1 : ja 0x1888c8 ; call rdx
0x00000000001888d5 : ja 0x1888cc ; call rdx
0x00000000001888d9 : ja 0x1888d0 ; call rdx
0x00000000001888dd : ja 0x1888d4 ; call rdx
0x00000000001888e1 : ja 0x1888d8 ; call rdx
0x00000000001888e5 : ja 0x1888dc ; call rdx
0x00000000001888e9 : ja 0x1888e0 ; call rdx
0x00000000001888ed : ja 0x1888e4 ; call rdx
0x00000000001888f1 : ja 0x1888e8 ; call rdx
0x00000000001888f5 : ja 0x1888ec ; call rdx
0x00000000001888f9 : ja 0x1888f0 ; call rdx
0x00000000001888fd : ja 0x1888f4 ; call rdx
0x0000000000188901 : ja 0x1888f8 ; call rdx
0x0000000000194f1d : ja 0x194f1c ; call qword ptr [rax]
0x0000000000195e51 : ja 0x195e51 ; call rax
0x0000000000195fcd : ja 0x195fcd ; call rsp
0x0000000000195fc9 : ja 0x195fcd ; inc dword ptr [rdi + rsi*2 - 4] ; call rsp
0x0000000000195fcc : ja 0x195fce ; call rsp
0x0000000000196089 : ja 0x196089 ; jmp qword ptr [rax]
0x000000000019608d : ja 0x196091 ; inc eax ; pop rcx ; cld ; jmp rax
0x000000000019b969 : ja 0x19b96a ; call rsp
0x000000000002daad : ja 0x2dac8 ; lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000003542e : ja 0x35453 ; ret
0x0000000000035736 : ja 0x35743 ; ret
0x00000000000357a2 : ja 0x357b3 ; ret
0x00000000000357ec : ja 0x357f2 ; ret
0x00000000000038ea : ja 0x394c ; clc ; salc ; jb 0x3972 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000048a8e : ja 0x48ae0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000504b7 : ja 0x5049e ; mov eax, r8d ; ret
0x000000000006182c : ja 0x617b9 ; ret 0x348
0x0000000000062b53 : ja 0x62ae0 ; ret 0x348
0x0000000000069c78 : ja 0x69c05 ; ret 0x348
0x0000000000073026 : ja 0x73033 ; ret
0x0000000000077c88 : ja 0x77ca1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f272 : ja 0x8f283 ; ret
0x0000000000094478 : ja 0x94472 ; ret 0x7401
0x0000000000096e3d : ja 0x96e1f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f85c : ja 0x9f875 ; mov rax, rdi ; ret
0x000000000009ffe3 : ja 0x9ffe7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0736 : ja 0xa073a ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a0e83 : ja 0xa0e87 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000a5d57 : ja 0xa5d5d ; ret
0x00000000000a5d73 : ja 0xa5d7d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5db4 : ja 0xa5dc3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e39 : ja 0xa5e4d ; ret
0x00000000000a5e8f : ja 0xa5ea7 ; ret
0x00000000000a5f11 : ja 0xa5f2d ; ret
0x00000000000a7357 : ja 0xa7361 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a7373 : ja 0xa7381 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73c4 : ja 0xa73d7 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a74a9 : ja 0xa74c1 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a751f : ja 0xa753b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a75a1 : ja 0xa75c1 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a8e37 : ja 0xa8e3d ; ret
0x00000000000a8e53 : ja 0xa8e5d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a8e94 : ja 0xa8ea3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a8f19 : ja 0xa8f2d ; ret
0x00000000000a8f6f : ja 0xa8f87 ; ret
0x00000000000a8ff1 : ja 0xa900d ; ret
0x00000000000a9907 : ja 0xa990d ; ret
0x00000000000a9923 : ja 0xa992d ; mov dword ptr [rdi], ecx ; ret
0x00000000000a9964 : ja 0xa9973 ; mov qword ptr [rdi], rcx ; ret
0x00000000000a99e9 : ja 0xa99fd ; ret
0x00000000000a9a3f : ja 0xa9a57 ; ret
0x00000000000a9ac1 : ja 0xa9add ; ret
0x00000000000aaf89 : ja 0xaafa9 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000ac822 : ja 0xac832 ; cmove rax, rcx ; ret
0x00000000000acc1c : ja 0xacc2c ; mov eax, edi ; ret
0x00000000000bc43d : ja 0xbc44b ; ret
0x00000000000c83dd : ja 0xc83eb ; pop rbx ; ret
0x00000000000c9657 : ja 0xc9662 ; ret
0x00000000000cbfe6 : ja 0xcbff2 ; ret
0x00000000000cc080 : ja 0xcc08a ; ret
0x00000000000cc171 : ja 0xcc17a ; ret
0x00000000000cd2c9 : ja 0xcd2d2 ; ret
0x00000000000cd339 : ja 0xcd342 ; ret
0x00000000000cd58d : ja 0xcd592 ; ret
0x00000000000cd60d : ja 0xcd612 ; ret
0x00000000000d8e0e : ja 0xd8e27 ; mov eax, 2 ; ret
0x00000000000f5f41 : ja 0xf5f4b ; xor eax, eax ; ret
0x00000000000f69de : ja 0xf6976 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f6a12 : ja 0xf6a03 ; ret
0x00000000000f6bbb : ja 0xf6bc3 ; ret
0x00000000000f6c0a : ja 0xf6c13 ; ret
0x00000000000f6c5b : ja 0xf6c63 ; ret
0x00000000000f6cb3 : ja 0xf6cc3 ; ret
0x00000000000f6d17 : ja 0xf6d23 ; ret
0x00000000000f6d70 : ja 0xf6d7b ; ret
0x00000000000f6f4f : ja 0xf6f5b ; ret
0x00000000000f7619 : ja 0xf7653 ; ret
0x00000000000f76bd : ja 0xf7707 ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fb563 : ja 0xfb578 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000fba98 : ja 0xfbaa3 ; ret
0x00000000000fbaec : ja 0xfbaf3 ; ret
0x00000000000fc240 : ja 0xfc24a ; ret
0x00000000000fc323 : ja 0xfc32f ; ret
0x00000000000fc379 : ja 0xfc385 ; ret
0x00000000000fc764 : ja 0xfc772 ; ret
0x00000000000fcdf3 : ja 0xfce23 ; ret
0x00000000000fd010 : ja 0xfd01a ; ret
0x00000000000fd0c0 : ja 0xfd0ca ; ret
0x00000000000fd16b : ja 0xfd172 ; ret
0x00000000000fd1db : ja 0xfd1e2 ; ret
0x00000000000fd25c : ja 0xfd262 ; ret
0x00000000000fd30c : ja 0xfd312 ; ret
0x00000000000fd85c : ja 0xfd863 ; ret
0x00000000000fef7d : ja 0xfef8b ; ret
0x00000000000ff011 : ja 0xff01b ; ret
0x00000000000ff0b1 : ja 0xff0bb ; ret
0x00000000000ff105 : ja 0xff113 ; ret
0x00000000000ff1e9 : ja 0xff1f5 ; ret
0x00000000000022df : ja 0xffffffffd6104b6b ; ret
0x000000000010149f : jae 0x1014a4 ; ret
0x000000000010170d : jae 0x101712 ; ret
0x000000000010173d : jae 0x101742 ; ret
0x0000000000101776 : jae 0x1017ab ; ret
0x00000000001017cd : jae 0x1017d2 ; ret
0x00000000001017fd : jae 0x101802 ; ret
0x0000000000101830 : jae 0x101835 ; ret
0x000000000010185d : jae 0x101862 ; ret
0x000000000010188d : jae 0x101892 ; ret
0x00000000001018bd : jae 0x1018c2 ; ret
0x00000000001018ed : jae 0x1018f2 ; ret
0x0000000000105fb0 : jae 0x105fb5 ; ret
0x0000000000105fdd : jae 0x105fe2 ; ret
0x000000000010600d : jae 0x106012 ; ret
0x0000000000106040 : jae 0x106045 ; ret
0x0000000000106070 : jae 0x106075 ; ret
0x000000000010609d : jae 0x1060a2 ; ret
0x00000000001060d0 : jae 0x1060d5 ; ret
0x00000000001060fd : jae 0x106102 ; ret
0x000000000010612d : jae 0x106132 ; ret
0x0000000000106160 : jae 0x106165 ; ret
0x000000000010618d : jae 0x106192 ; ret
0x00000000001061c0 : jae 0x1061c5 ; ret
0x00000000001072ad : jae 0x1072b2 ; ret
0x00000000001072dd : jae 0x1072e2 ; ret
0x000000000010740d : jae 0x107412 ; ret
0x000000000010744d : jae 0x107452 ; ret
0x000000000010747d : jae 0x107482 ; ret
0x00000000001074ad : jae 0x1074b2 ; ret
0x00000000001074dd : jae 0x1074e2 ; ret
0x0000000000107700 : jae 0x107705 ; ret
0x000000000010772d : jae 0x107732 ; ret
0x000000000010775d : jae 0x107762 ; ret
0x000000000010778d : jae 0x107792 ; ret
0x00000000001077d0 : jae 0x1077d5 ; ret
0x00000000001077fd : jae 0x107802 ; ret
0x000000000010782d : jae 0x107832 ; ret
0x000000000010785d : jae 0x107862 ; ret
0x000000000010788d : jae 0x107892 ; ret
0x00000000001078bd : jae 0x1078c2 ; ret
0x00000000001078ed : jae 0x1078f2 ; ret
0x000000000010791d : jae 0x107922 ; ret
0x000000000010794d : jae 0x107952 ; ret
0x0000000000107980 : jae 0x107985 ; ret
0x00000000001079b9 : jae 0x1079f1 ; ret
0x0000000000107a0d : jae 0x107a12 ; ret
0x0000000000107a40 : jae 0x107a45 ; ret
0x0000000000107a6d : jae 0x107a72 ; ret
0x0000000000107a9d : jae 0x107aa2 ; ret
0x0000000000107a9d : jae 0x107aa7 ; ret
0x0000000000107acd : jae 0x107ad2 ; ret
0x0000000000107acd : jae 0x107ad7 ; ret
0x0000000000107afd : jae 0x107b02 ; ret
0x0000000000107afd : jae 0x107b07 ; ret
0x0000000000107b2d : jae 0x107b32 ; ret
0x0000000000107b2d : jae 0x107b37 ; ret
0x0000000000107b60 : jae 0x107b65 ; ret
0x0000000000107b60 : jae 0x107b6a ; ret
0x0000000000107b90 : jae 0x107b95 ; ret
0x0000000000107bbd : jae 0x107bc2 ; ret
0x0000000000107bed : jae 0x107bf2 ; ret
0x0000000000107c20 : jae 0x107c25 ; ret
0x0000000000107c50 : jae 0x107c55 ; ret
0x0000000000107c80 : jae 0x107c85 ; ret
0x0000000000107cb9 : jae 0x107cf1 ; ret
0x0000000000107d0d : jae 0x107d12 ; ret
0x0000000000107d49 : jae 0x107d81 ; ret
0x0000000000107d9d : jae 0x107da2 ; ret
0x0000000000107dcd : jae 0x107dd2 ; ret
0x0000000000107e09 : jae 0x107e41 ; ret
0x0000000000107e5d : jae 0x107e62 ; ret
0x0000000000107e90 : jae 0x107e95 ; ret
0x0000000000107ebd : jae 0x107ec2 ; ret
0x0000000000107eed : jae 0x107ef2 ; ret
0x0000000000107f20 : jae 0x107f25 ; ret
0x0000000000107f56 : jae 0x107f8b ; ret
0x0000000000107fad : jae 0x107fb2 ; ret
0x0000000000107fe0 : jae 0x107fe5 ; ret
0x0000000000108010 : jae 0x108015 ; ret
0x0000000000108066 : jae 0x10809b ; ret
0x00000000001080bd : jae 0x1080c2 ; ret
0x00000000001080f6 : jae 0x10812b ; ret
0x000000000010814d : jae 0x108152 ; ret
0x000000000010817d : jae 0x108182 ; ret
0x00000000001081b0 : jae 0x1081b5 ; ret
0x00000000001081dd : jae 0x1081e2 ; ret
0x00000000001082d9 : jae 0x108311 ; ret
0x0000000000108336 : jae 0x10836b ; ret
0x0000000000108456 : jae 0x10848b ; ret
0x00000000001084b9 : jae 0x1084f1 ; ret
0x0000000000108510 : jae 0x108515 ; ret
0x000000000010853d : jae 0x108542 ; ret
0x000000000010856d : jae 0x108572 ; ret
0x00000000001085a0 : jae 0x1085a5 ; ret
0x0000000000108af9 : jae 0x108b31 ; ret
0x0000000000108b59 : jae 0x108b91 ; ret
0x0000000000108bad : jae 0x108bb2 ; ret
0x0000000000108bdd : jae 0x108be2 ; ret
0x0000000000108c0d : jae 0x108c12 ; ret
0x0000000000108c3d : jae 0x108c42 ; ret
0x0000000000108c70 : jae 0x108c75 ; ret
0x0000000000108ca0 : jae 0x108ca5 ; ret
0x0000000000108ccd : jae 0x108cd2 ; ret
0x0000000000108cfd : jae 0x108d02 ; ret
0x0000000000108d2d : jae 0x108d32 ; ret
0x0000000000108d5d : jae 0x108d62 ; ret
0x000000000010f42c : jae 0x10f457 ; cmp byte ptr [rax], dil ; je 0x10f461 ; mov rdx, rax ; jmp 0x10f44e
0x000000000010f737 : jae 0x10f75e ; cmp byte ptr [r8], r9b ; je 0x10f765 ; mov rdx, r8 ; jmp 0x10f755
0x000000000013be85 : jae 0x13be94 ; xor eax, eax ; ret
0x000000000013bec5 : jae 0x13bed4 ; xor eax, eax ; ret
0x0000000000140660 : jae 0x140665 ; ret
0x00000000001406b0 : jae 0x1406b5 ; ret
0x00000000001434b4 : jae 0x143497 ; mov eax, 1 ; ret
0x000000000017433c : jae 0x17434b ; call qword ptr [rbx]
0x000000000017433c : jae 0x17434f ; call qword ptr [rbx]
0x00000000001750f7 : jae 0x175114 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000183de2 : jae 0x183dc4 ; jo 0x183e60 ; mov ebp, 0xfb67d10d ; ret
0x0000000000184c7e : jae 0x184c59 ; push rsi ; pop rdx ; je 0x184c4e ; ret 0xacfc
0x0000000000189ec1 : jae 0x189eba ; call rbx
0x0000000000194f11 : jae 0x194f14 ; call qword ptr [rax + 0x10fffb74]
0x0000000000196901 : jae 0x1968ee ; jmp rsp
0x000000000019917d : jae 0x199186 ; add byte ptr [rbp + rax - 0xa], ah ; call rsp
0x000000000019b889 : jae 0x19b888 ; call rsp
0x00000000001a1429 : jae 0x1a1441 ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a1d75 : jae 0x1a1d8d ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x00000000001a2637 : jae 0x1a2645 ; ret
0x00000000001a66e9 : jae 0x1a66db ; jmp qword ptr [rdx]
0x00000000001a7551 : jae 0x1a7544 ; call rax
0x00000000001b0d19 : jae 0x1b0d12 ; call qword ptr [rsi]
0x00000000001b0d49 : jae 0x1b0d42 ; jmp qword ptr [rcx]
0x00000000001b0d79 : jae 0x1b0d72 ; jmp qword ptr [rcx]
0x00000000001b0d91 : jae 0x1b0d8a ; jmp qword ptr [rcx]
0x00000000001bc0e1 : jae 0x1bc0dd ; call qword ptr [rdi]
0x000000000002cb2a : jae 0x2cb46 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x000000000003576d : jae 0x35772 ; ret
0x0000000000035e2d : jae 0x35e32 ; ret
0x0000000000047b27 : jae 0x47b30 ; xor eax, eax ; ret
0x0000000000047b27 : jae 0x47b35 ; xor eax, eax ; ret
0x000000000006984c : jae 0x697d9 ; ret 0x348
0x000000000006b36d : jae 0x6b372 ; ret
0x000000000006b3a0 : jae 0x6b3a5 ; ret
0x0000000000079618 : jae 0x79625 ; movzx eax, byte ptr [rax] ; ret
0x000000000007b2d3 : jae 0x7b287 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007cc4b : jae 0x7cc75 ; movzx eax, byte ptr [rax] ; ret
0x000000000008964e : jae 0x8965e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bc51d : jae 0xbc522 ; ret
0x00000000000bf60d : jae 0xbf612 ; ret
0x00000000000bf63d : jae 0xbf642 ; ret
0x00000000000cbf3d : jae 0xcbf42 ; ret
0x00000000000cc130 : jae 0xcc135 ; ret
0x00000000000cc20d : jae 0xcc212 ; ret
0x00000000000cc296 : jae 0xcc2cb ; ret
0x00000000000cc2f6 : jae 0xcc32b ; ret
0x00000000000cc6f7 : jae 0xcc6fc ; ret
0x00000000000cc77d : jae 0xcc782 ; ret
0x00000000000cd28d : jae 0xcd292 ; ret
0x00000000000cd42d : jae 0xcd432 ; ret
0x00000000000cd45d : jae 0xcd462 ; ret
0x00000000000cd4bd : jae 0xcd4c2 ; ret
0x00000000000cd4ed : jae 0xcd4f2 ; ret
0x00000000000cd51d : jae 0xcd522 ; ret
0x00000000000cd54d : jae 0xcd552 ; ret
0x00000000000cfc06 : jae 0xcfc1e ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e0cda : jae 0xe0f26 ; movdqa xmm0, xmm2 ; jmp 0xe0ccc
0x00000000000ea73d : jae 0xea742 ; ret
0x00000000000ea76d : jae 0xea772 ; ret
0x00000000000ea79d : jae 0xea7a2 ; ret
0x00000000000ea7cd : jae 0xea7d2 ; ret
0x00000000000ea7fd : jae 0xea802 ; ret
0x00000000000ea82d : jae 0xea832 ; ret
0x00000000000ea85d : jae 0xea862 ; ret
0x00000000000ea88d : jae 0xea892 ; ret
0x00000000000f3fa9 : jae 0xf3fb2 ; add byte ptr [rax], al ; call 0x2027f
0x00000000000f5a49 : jae 0xf5a81 ; ret
0x00000000000f5aa9 : jae 0xf5ae1 ; ret
0x00000000000f6b1d : jae 0xf6b22 ; ret
0x00000000000f6dbd : jae 0xf6dc2 ; ret
0x00000000000f6ded : jae 0xf6df2 ; ret
0x00000000000f6ebd : jae 0xf6ec2 ; ret
0x00000000000f6eed : jae 0xf6ef2 ; ret
0x00000000000f6fad : jae 0xf6fb2 ; ret
0x00000000000f6fdd : jae 0xf6fe2 ; ret
0x00000000000f7016 : jae 0xf704b ; ret
0x00000000000f7236 : jae 0xf726b ; ret
0x00000000000f7296 : jae 0xf72cb ; ret
0x00000000000f72ed : jae 0xf72f2 ; ret
0x00000000000f777d : jae 0xf7782 ; ret
0x00000000000f78c6 : jae 0xf78fb ; ret
0x00000000000f791d : jae 0xf7922 ; ret
0x00000000000f794d : jae 0xf7952 ; ret
0x00000000000f797d : jae 0xf7982 ; ret
0x00000000000f79ad : jae 0xf79b2 ; ret
0x00000000000f79dd : jae 0xf79e2 ; ret
0x00000000000f7a16 : jae 0xf7a4b ; ret
0x00000000000f7a6d : jae 0xf7a72 ; ret
0x00000000000f7a9d : jae 0xf7aa2 ; ret
0x00000000000f7a9d : jae 0xf7aa7 ; ret
0x00000000000f82cd : jae 0xf82d2 ; ret
0x00000000000f82fd : jae 0xf8302 ; ret
0x00000000000f832d : jae 0xf8332 ; ret
0x00000000000f8360 : jae 0xf8365 ; ret
0x00000000000f893d : jae 0xf8942 ; ret
0x00000000000f8970 : jae 0xf8975 ; ret
0x00000000000f899d : jae 0xf89a2 ; ret
0x00000000000f89cd : jae 0xf89d2 ; ret
0x00000000000f89fd : jae 0xf8a02 ; ret
0x00000000000f8a30 : jae 0xf8a35 ; ret
0x00000000000f8a5d : jae 0xf8a62 ; ret
0x00000000000f8a8d : jae 0xf8a92 ; ret
0x00000000000f8abd : jae 0xf8ac2 ; ret
0x00000000000fb6f6 : jae 0xfb72b ; ret
0x00000000000fb784 : jae 0xfb7d7 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fba60 : jae 0xfba65 ; ret
0x00000000000fc1d9 : jae 0xfc211 ; ret
0x00000000000fc92d : jae 0xfc932 ; ret
0x00000000000fc95d : jae 0xfc962 ; ret
0x00000000000fc98d : jae 0xfc992 ; ret
0x00000000000fcd2d : jae 0xfcd32 ; ret
0x00000000000fcf0d : jae 0xfcf12 ; ret
0x00000000000fcf46 : jae 0xfcf7b ; ret
0x00000000000fcfa6 : jae 0xfcfdb ; ret
0x00000000000fd49d : jae 0xfd4a2 ; ret
0x00000000000fd53d : jae 0xfd542 ; ret
0x00000000000fd579 : jae 0xfd5b1 ; ret
0x00000000000fd5ac : jae 0xfd5b5 ; ret
0x00000000000fd6cd : jae 0xfd6d2 ; ret
0x00000000000fd6fd : jae 0xfd702 ; ret
0x00000000000fd736 : jae 0xfd76b ; ret
0x00000000000fd78d : jae 0xfd792 ; ret
0x00000000000fd7c6 : jae 0xfd7fb ; ret
0x00000000000fd81d : jae 0xfd822 ; ret
0x00000000000fdb8d : jae 0xfdb92 ; ret
0x00000000000fdbbd : jae 0xfdbc2 ; ret
0x00000000000fdbed : jae 0xfdbf2 ; ret
0x00000000000ff13d : jae 0xff142 ; ret
0x00000000000ff16d : jae 0xff172 ; ret
0x00000000000ffddb : jae 0xffe0f ; add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x0000000000122605 : jae 0xffffffff835a27d2 ; ret 0x3904
0x000000000010e98b : jb 0x10e99f ; mov eax, 1 ; ret
0x000000000011498d : jb 0x114984 ; xor eax, eax ; ret
0x0000000000115aaa : jb 0x115ad7 ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000123e88 : jb 0x123e7b ; mov eax, 0xffffffff ; ret
0x0000000000123e87 : jb 0x123e7c ; mov eax, 0xffffffff ; ret
0x000000000012e7b1 : jb 0x12e7d5 ; ret
0x000000000012e7ab : jb 0x12e7dd ; ja 0x12e7a0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000014da31 : jb 0x14da1a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014da94 : jb 0x14da7d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014db38 : jb 0x14db44 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014df21 : jb 0x14df0a ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014df84 : jb 0x14df6d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014e028 : jb 0x14e034 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000014e2c4 : jb 0x14e2ad ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014e324 : jb 0x14e30d ; vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x000000000014e3c8 : jb 0x14e3d4 ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000001515aa : jb 0x1515ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001516fa : jb 0x15170a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015184a : jb 0x15185a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015199a : jb 0x1519aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151aea : jb 0x151afa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c3a : jb 0x151c4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151d8a : jb 0x151d9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151eda : jb 0x151eea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015202a : jb 0x15203a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015217a : jb 0x15218a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001522ca : jb 0x1522da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015241a : jb 0x15242a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015256a : jb 0x15257a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526ba : jb 0x1526ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015280a : jb 0x15281a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f7a : jb 0x153f8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540ca : jb 0x1540da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015421a : jb 0x15422a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015436a : jb 0x15437a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544ba : jb 0x1544ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015460a : jb 0x15461a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015475a : jb 0x15476a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548aa : jb 0x1548ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001549fa : jb 0x154a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b4a : jb 0x154b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154c9a : jb 0x154caa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154dea : jb 0x154dfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f3a : jb 0x154f4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015508a : jb 0x15509a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001551da : jb 0x1551ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015694a : jb 0x15695a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156a9a : jb 0x156aaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156bea : jb 0x156bfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d3a : jb 0x156d4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156e8a : jb 0x156e9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156fda : jb 0x156fea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015712a : jb 0x15713a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015727a : jb 0x15728a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573ca : jb 0x1573da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015751a : jb 0x15752a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015766a : jb 0x15767a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577ba : jb 0x1577ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000015790a : jb 0x15791a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a5a : jb 0x157a6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157baa : jb 0x157bba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000172a27 : jb 0x172a37 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000172a33 : jb 0x172a49 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000172a43 : jb 0x172a4b ; mov byte ptr [rdi], cl ; ret
0x000000000017436b : jb 0x174361 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000175109 : jb 0x175108 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018746f : jb 0x187479 ; add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x00000000001961d0 : jb 0x19617c ; cld ; jmp rdx
0x000000000019dfd1 : jb 0x19dfbe ; jmp qword ptr [rsi]
0x000000000019dfd0 : jb 0x19dfbf ; jmp qword ptr [rsi]
0x00000000001b0c41 : jb 0x1b0c3a ; jmp qword ptr [rcx]
0x00000000001b0c71 : jb 0x1b0c6a ; jmp qword ptr [rcx]
0x00000000001b0c70 : jb 0x1b0c6b ; jmp qword ptr [rcx]
0x00000000001b0c89 : jb 0x1b0c82 ; jmp qword ptr [rcx]
0x00000000001b0cd1 : jb 0x1b0cca ; jmp qword ptr [rcx]
0x00000000001b6986 : jb 0x1b6994 ; ret
0x00000000001b6986 : jb 0x1b699a ; ret
0x0000000000002b80 : jb 0x2b20 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002da7e : jb 0x2da8b ; ret
0x00000000000038ee : jb 0x396e ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000071275 : jb 0x7129b ; mov dword ptr [rcx], eax ; ret
0x0000000000072d5c : jb 0x72d55 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000886a2 : jb 0x8868d ; xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000009fbbe : jb 0x9fbca ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0311 : jb 0xa031d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a0a5e : jb 0xa0a6a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a7cca : jb 0xa7cd9 ; add byte ptr [rax], al ; ret
0x00000000000aa5f5 : jb 0xaa604 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000aa600 : jb 0xaa613 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000aa60d : jb 0xaa615 ; mov byte ptr [rdi], cl ; ret
0x00000000000cdb9d : jb 0xcdba6 ; add byte ptr [rbp - 0x27], dh ; xor eax, eax ; ret
0x00000000000d72ed : jb 0xd726d ; pop rbx ; ret
0x00000000000fe4b8 : jb 0xfe4eb ; add byte ptr [rax - 0x77], cl ; ret 0x8feb
0x000000000012dd63 : jbe 0x12dd77 ; mov eax, 2 ; ret
0x000000000013c19d : jbe 0x13c1b9 ; add dword ptr [rdi + 0x28], esi ; mov rax, qword ptr [rdi + 0x18] ; ret
0x0000000000194f19 : jbe 0x194f1c ; call qword ptr [rax + 0x10fffb77]
0x0000000000195004 : jbe 0x194fb1 ; std ; call qword ptr [rsi]
0x0000000000195ed1 : jbe 0x195ed5 ; jmp qword ptr [rdx + 0x22fffc7e]
0x0000000000196941 : jbe 0x19692e ; jmp rsp
0x000000000019924d : jbe 0x199256 ; add ah, dl ; or al, 0xf6 ; call rsp
0x0000000000199619 : jbe 0x199613 ; jmp rsp
0x0000000000199618 : jbe 0x199614 ; jmp rsp
0x00000000001b0ee1 : jbe 0x1b0eda ; jmp qword ptr [rcx]
0x00000000001b0ef9 : jbe 0x1b0ef2 ; jmp qword ptr [rcx]
0x000000000002b767 : jbe 0x2b771 ; add byte ptr [rbx - 0x76be0008], al ; ret
0x0000000000002c0f : jbe 0x2be3 ; clc ; ret
0x000000000002cdd2 : jbe 0x2cddf ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000047f4b : jbe 0x47fc1 ; xor eax, eax ; ret
0x000000000004a49c : jbe 0x4a496 ; nop ; pop rbx ; ret
0x00000000000533bf : jbe 0x5334c ; ret 0x8166
0x000000000007228a : jbe 0x72200 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000008eb66 : jbe 0x8eba5 ; add rax, rdi ; ret
0x000000000008eb76 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb86 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008eb96 : jbe 0x8eba7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000944e3 : jbe 0x944fe ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x944d9 ; ret
0x00000000000a12a9 : jbe 0xa12a3 ; ret 0xf10
0x00000000000a2ec9 : jbe 0xa2ec3 ; ret 0xf10
0x00000000000dc0b8 : jbe 0xdc0c7 ; mov eax, 0xc ; ret
0x00000000000f68a8 : jbe 0xf68b3 ; ret
0x0000000000101468 : je 0x101479 ; mov dword ptr [rip + 0x2c2da0], edi ; ret
0x00000000001024b0 : je 0x1024bb ; pop rbx ; ret
0x00000000001039b0 : je 0x1039c2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000001053de : je 0x10547e ; call rax
0x0000000000105555 : je 0x105656 ; call rax
0x00000000001073a6 : je 0x1073ab ; ret
0x0000000000109574 : je 0x10957b ; pop rbp ; ret
0x000000000010997a : je 0x10998a ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x0000000000109bc9 : je 0x109bd7 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x000000000010c95b : je 0x10c970 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000010f431 : je 0x10f45c ; mov rdx, rax ; jmp 0x10f449
0x000000000010f73c : je 0x10f760 ; mov rdx, r8 ; jmp 0x10f750
0x0000000000112b52 : je 0x112b32 ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b26
0x00000000001132c3 : je 0x1132d7 ; mov eax, 7 ; ret
0x00000000001132e1 : je 0x113309 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001132f0 : je 0x113354 ; xor eax, eax ; pop rbx ; ret
0x0000000000114a0b : je 0x114a1b ; ret
0x00000000001150b9 : je 0x1150be ; ret
0x000000000011511d : je 0x115122 ; ret
0x000000000011553a : je 0x115542 ; ret
0x0000000000115832 : je 0x115862 ; call rax
0x0000000000115cb2 : je 0x115ccf ; sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001161ed : je 0x116200 ; lea rax, qword ptr [rip - 0x767b6] ; ret
0x000000000011622e : je 0x116240 ; lea rax, qword ptr [rip + 0x37c19] ; ret
0x00000000001162dd : je 0x1162f0 ; lea rax, qword ptr [rip - 0x76156] ; ret
0x000000000011631e : je 0x116330 ; lea rax, qword ptr [rip + 0x37ec9] ; ret
0x0000000000116367 : je 0x116379 ; lea rax, qword ptr [rip - 0x6be60] ; ret
0x0000000000116d0c : je 0x116d20 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011765c : je 0x11766e ; add rsp, 8 ; ret
0x000000000011820c : je 0x118220 ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000011fa67 : je 0x11fa73 ; mov rdi, rbx ; call rax
0x000000000011fd5f : je 0x11fd6b ; mov rdi, rbx ; call rax
0x000000000011fe6f : je 0x11fe83 ; lea rdi, qword ptr [rip + 0x2a8828] ; call rax
0x000000000011ff1a : je 0x11ff47 ; or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x0000000000122fc3 : je 0x122fbb ; pop rbx ; ret
0x0000000000128302 : je 0x12830a ; ret
0x0000000000128361 : je 0x12836a ; ret
0x000000000012835b : je 0x12836b ; cmp dword ptr [rdi + 0x10], 2 ; je 0x128370 ; ret
0x000000000012b003 : je 0x12afed ; xor eax, eax ; pop rbx ; ret
0x000000000012b843 : je 0x12b84f ; mov rdi, rsp ; call rax
0x000000000012b92e : je 0x12b93a ; mov rdi, rsp ; call rax
0x000000000012bfe9 : je 0x12c016 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000012c1e4 : je 0x12c1f0 ; mov rdi, rbp ; call rax
0x000000000012c568 : je 0x12c572 ; ret
0x000000000012d275 : je 0x12d281 ; mov rdi, r14 ; call rax
0x000000000012d7f3 : je 0x12d804 ; xor eax, eax ; ret
0x000000000012de02 : je 0x12de0e ; mov rdi, rbp ; call rdx
0x000000000012e307 : je 0x12e404 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000132252 : je 0x132266 ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x0000000000132c0a : je 0x132c16 ; mov rdi, r12 ; call rax
0x0000000000132deb : je 0x132df9 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000133784 : je 0x133794 ; xor eax, eax ; ret
0x000000000013418b : je 0x1340af ; mov rdi, rbp ; call rax
0x00000000001340c5 : je 0x1340d1 ; mov rdi, r13 ; call rax
0x00000000001341d3 : je 0x1341e7 ; mov eax, 1 ; ret
0x00000000001342b8 : je 0x1342c4 ; mov rdi, rbp ; call rax
0x00000000001344d8 : je 0x1344e4 ; mov rdi, rbp ; call rax
0x0000000000134fcf : je 0x134fdd ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x000000000013567b : je 0x135687 ; mov rdi, r12 ; call rax
0x00000000001359ef : je 0x1359fd ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000013827a : je 0x138208 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001381ff : je 0x13820b ; pop rbx ; ret
0x00000000001382a3 : je 0x1382b6 ; add rsp, 8 ; ret
0x00000000001386b1 : je 0x1386c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000138e8b : je 0x138e92 ; ret
0x0000000000138f6b : je 0x138f79 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000139684 : je 0x139692 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013aafd : je 0x13ab58 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013abbd : je 0x13ac18 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ac7d : je 0x13acd8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013ad3d : je 0x13ad98 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000013b5ab : je 0x13b5d7 ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b6ef : je 0x13b71b ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b83d : je 0x13b868 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b8fd : je 0x13b928 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013b9bd : je 0x13b9e8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013ba7d : je 0x13baa8 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x000000000013bd71 : je 0x13bd83 ; ret
0x000000000013dd38 : je 0x13dd44 ; xor eax, eax ; ret
0x0000000000142961 : je 0x142976 ; add rsp, 8 ; ret
0x0000000000144d33 : je 0x144cfd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000145a05 : je 0x145a0d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000145b03 : je 0x145acd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001469ea : je 0x1469f2 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000146b43 : je 0x146b0d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000148713 : je 0x1486dd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014a741 : je 0x14a728 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014aa33 : je 0x14a9fd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014c0c3 : je 0x14c08d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000016f787 : je 0x16f791 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000173e26 : je 0x173e2c ; call rdx
0x0000000000173f3e : je 0x173f49 ; call rax
0x0000000000174320 : je 0x174325 ; ret
0x0000000000183f48 : je 0x183f13 ; xor al, 0xd8 ; ret
0x0000000000184187 : je 0x184184 ; jmp 0x18415e
0x0000000000184c82 : je 0x184c4a ; ret 0xacfc
0x0000000000189ebd : je 0x189eb6 ; call rbx
0x0000000000194f15 : je 0x194f14 ; call qword ptr [rax]
0x00000000001985e9 : je 0x1985de ; jmp rsp
0x0000000000198f98 : je 0x198fdf ; cmc ; jmp rsp
0x00000000001995c9 : je 0x1995c3 ; jmp rsp
0x000000000019a120 : je 0x19a10d ; idiv edi ; cld ; ret
0x000000000019b034 : je 0x19b06e ; add al, byte ptr [rax] ; sbb edx, edi ; jmp rsp
0x000000000019b1c0 : je 0x19b203 ; cli ; jmp rsp
0x000000000019b618 : je 0x19b5e5 ; cli ; jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x000000000019b6a0 : je 0x19b66e ; cli ; jmp rsp
0x00000000001a1422 : je 0x1a1430 ; ret
0x00000000001a386c : je 0x1a38f2 ; add byte ptr [rax], al ; xor byte ptr [rax - 0x13], al ; jmp rsi
0x00000000001a45d9 : je 0x1a45ca ; call qword ptr [rcx]
0x00000000001a4c6c : je 0x1a4c06 ; add byte ptr [rax], al ; test bpl, bpl ; call qword ptr [rdx]
0x00000000001a5e6c : je 0x1a5e18 ; add byte ptr [rax], al ; and ah, 0xfc ; call qword ptr [rdx]
0x00000000001a7da0 : je 0x1a7da7 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret 0
0x00000000001aef6c : je 0x1aefa9 ; add dword ptr [rax], eax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c6c : je 0x1b0cc6 ; add dword ptr [rax], eax ; jb 0x1b0c6f ; jmp qword ptr [rcx]
0x00000000001b0dc1 : je 0x1b0dba ; jmp qword ptr [rcx]
0x0000000000001cba : je 0x1ce6 ; ret
0x000000000001fb05 : je 0x1faa6 ; jmp 0x1facf
0x0000000000021857 : je 0x21883 ; sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x0000000000024ff8 : je 0x25024 ; cmp byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000000000025b54 : je 0x25b83 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000026864 : je 0x26892 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000028044 : je 0x28072 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000282ab : je 0x282da ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000028f14 : je 0x28f42 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000029183 : je 0x291b2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002a698 : je 0x2a6a3 ; pop rbx ; ret
0x000000000002a693 : je 0x2a6a8 ; cmp esi, 3 ; je 0x2a6a8 ; pop rbx ; ret
0x000000000002b025 : je 0x2b02b ; call rax
0x000000000002b396 : je 0x2b39c ; call rcx
0x000000000002c37b : je 0x2c381 ; call rax
0x00000000000331ae : je 0x331d9 ; adc byte ptr [rcx - 0x77], cl ; ret 0x1274
0x00000000000334fe : je 0x3352d ; sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x0000000000034c5d : je 0x34c4c ; ret
0x0000000000034f55 : je 0x34f7f ; call 0xffffffffe28511e9
0x0000000000035046 : je 0x34fef ; ret
0x0000000000038380 : je 0x383ad ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x0000000000062913 : je 0x628a0 ; ret 0x348
0x000000000006ac46 : je 0x6ac68 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006b45a : je 0x6b463 ; ret
0x000000000006d82e : je 0x6d83d ; mov eax, edx ; pop rbx ; ret
0x000000000006db93 : je 0x6dbd1 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006dd97 : je 0x6ddb1 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006de67 : je 0x6de81 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006e0d8 : je 0x6e102 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x000000000006ee75 : je 0x6ee91 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f778 : je 0x6f7a3 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fdc3 : je 0x6fdd6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070107 : je 0x70115 ; mov eax, edx ; pop rbx ; ret
0x00000000000704f7 : je 0x70505 ; mov eax, esi ; pop rbx ; ret
0x0000000000070679 : je 0x70685 ; mov eax, esi ; pop rbx ; ret
0x0000000000070833 : je 0x70874 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070a76 : je 0x70a88 ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000070fed : je 0x70ffe ; mov eax, r8d ; pop rbx ; ret
0x0000000000071190 : je 0x711a5 ; mov eax, edx ; pop rbx ; ret
0x0000000000071327 : je 0x71335 ; mov eax, edx ; pop rbx ; ret
0x0000000000071cc6 : je 0x71d16 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000071cc5 : je 0x71d17 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000072aac : je 0x72ab2 ; ret
0x0000000000072ada : je 0x72b3c ; pop rbp ; pop r12 ; ret
0x0000000000072b7f : je 0x72be1 ; pop rbp ; pop r12 ; ret
0x0000000000072cbd : je 0x72cc8 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000072d01 : je 0x72d0c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000073238 : je 0x73247 ; mov eax, 0xffffffff ; ret
0x0000000000075b85 : je 0x75b95 ; mov eax, edx ; pop rbx ; ret
0x0000000000075f8a : je 0x75f95 ; mov eax, edx ; pop rbx ; ret
0x00000000000760ae : je 0x760bd ; mov eax, esi ; pop rbx ; ret
0x00000000000761f0 : je 0x76205 ; mov eax, esi ; pop rbx ; ret
0x00000000000764d5 : je 0x764e5 ; mov eax, edx ; pop rbx ; ret
0x0000000000076e7a : je 0x76e85 ; mov eax, edx ; pop rbx ; ret
0x00000000000774fb : je 0x7750d ; mov dword ptr [rdi], edx ; ret
0x000000000007781c : je 0x7782f ; mov eax, 0xffffffff ; ret
0x0000000000077b9c : je 0x77baf ; mov eax, 0xffffffff ; ret
0x0000000000078086 : je 0x78095 ; mov eax, edx ; pop rbx ; ret
0x000000000007841b : je 0x783c1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007848f : je 0x7849b ; pop rbx ; ret
0x000000000007b2b3 : je 0x7b26d ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b403 : je 0x7b3bd ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007b565 : je 0x7b572 ; ret
0x000000000007b597 : je 0x7b5a6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bf7a : je 0x7bf85 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007d9bd : je 0x7dbdf ; mov rdx, rax ; jmp 0x7d9e8
0x000000000007df86 : je 0x7df97 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e074 : je 0x7e07a ; call rax
0x000000000007eed7 : je 0x7eee4 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000845e2 : je 0x8460b ; call rax
0x0000000000084fb2 : je 0x84fde ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000008556b : je 0x85571 ; call rax
0x0000000000087609 : je 0x87612 ; ret
0x00000000000878a2 : je 0x878b7 ; mov eax, 0x16 ; ret
0x00000000000879ce : je 0x87b59 ; mov rsi, r14 ; call rax
0x0000000000088375 : je 0x88375 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000088f28 : je 0x88f32 ; ret
0x00000000000898ab : je 0x898bd ; lea rax, qword ptr [rip + 0x1777c] ; ret
0x0000000000089a98 : je 0x89aaa ; lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x000000000008b18b : je 0x8b19d ; lea rax, qword ptr [rip + 0xda44c] ; ret
0x000000000008b298 : je 0x8b2aa ; lea rax, qword ptr [rip + 0xbf30f] ; ret
0x000000000008b415 : je 0x8b43c ; movsx eax, dl ; ret
0x000000000008b415 : je 0x8b43d ; movsx eax, dl ; ret
0x000000000008b410 : je 0x8b469 ; cmp dl, 3 ; je 0x8b441 ; movsx eax, dl ; ret
0x000000000008b522 : je 0x8b536 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b754 : je 0x8b75e ; bsf eax, edx ; ret
0x000000000008b754 : je 0x8b75f ; bsf eax, edx ; ret
0x000000000008b7fd : je 0x8b815 ; bsf rax, rdx ; ret
0x000000000008b7fd : je 0x8b816 ; bsf rax, rdx ; ret
0x000000000008b79c : je 0x8b829 ; bsf rax, rdx ; ret
0x000000000008b9cc : je 0x8b9f5 ; bsf rax, rdx ; ret
0x000000000008b9cc : je 0x8b9f6 ; bsf rax, rdx ; ret
0x000000000008b95c : je 0x8ba09 ; bsf rax, rdx ; ret
0x000000000008bb0b : je 0x8bb1d ; lea rax, qword ptr [rip + 0x1713c] ; ret
0x000000000008d3eb : je 0x8d3fd ; lea rax, qword ptr [rip + 0xd999c] ; ret
0x000000000008d708 : je 0x8d71a ; lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x000000000008da98 : je 0x8daaa ; lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x000000000008ea5c : je 0x8eab3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008ebd5 : je 0x8ebe8 ; lea rax, qword ptr [rip + 0xdf812] ; ret
0x000000000008f1e7 : je 0x8f1f9 ; lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008f34d : je 0x8f360 ; lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000008f38e : je 0x8f3a0 ; lea rax, qword ptr [rip + 0xbee69] ; ret
0x000000000008f87b : je 0x8f88d ; lea rax, qword ptr [rip + 0xda08c] ; ret
0x000000000008f99b : je 0x8f9ad ; lea rax, qword ptr [rip + 0xdb77c] ; ret
0x000000000009440d : je 0x94420 ; lea rax, qword ptr [rip + 0xb63a] ; ret
0x0000000000094428 : je 0x9442d ; ret
0x0000000000094450 : je 0x94462 ; lea rax, qword ptr [rip + 0xbcb07] ; ret
0x0000000000095cfa : je 0x95d0e ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000966ea : je 0x96741 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000967a1 : je 0x967b9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000096c74 : je 0x96c87 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ebba : je 0x9ebb3 ; ret
0x000000000009ebb9 : je 0x9ebb4 ; ret
0x000000000009ebde : je 0x9ebd3 ; ret
0x000000000009ebda : je 0x9ebd7 ; cmp ecx, esi ; je 0x9ebd7 ; ret
0x000000000009ec2f : je 0x9ec13 ; ret
0x000000000009f1ac : je 0x9f188 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a6059 : je 0xa60aa ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a76e6 : je 0xa7737 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000a93fa : je 0xa944b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000aac0d : je 0xaabd6 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aabe5 : je 0xaabd8 ; movzx eax, cl ; pop rbx ; ret
0x00000000000aac0d : je 0xaabd8 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aad32 : je 0xaad44 ; xor eax, eax ; ret
0x00000000000aad2d : je 0xaad51 ; cmp eax, 2 ; je 0xaad49 ; xor eax, eax ; ret
0x00000000000aad7d : je 0xaad63 ; ret
0x00000000000aadc5 : je 0xaada3 ; ret
0x00000000000abcdf : je 0xabcd1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000abf19 : je 0xabf39 ; mov cl, dl ; and cl, 0xf ; je 0xabf49 ; ret
0x00000000000abf20 : je 0xabf42 ; ret
0x00000000000abf35 : je 0xabf56 ; add rax, 2 ; ret
0x00000000000ac566 : je 0xac5d6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac81f : je 0xac83c ; cmp esi, dword ptr [rdi + 8] ; cmove rax, rcx ; ret
0x00000000000ac875 : je 0xac888 ; lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00000000000aca38 : je 0xac9ed ; mov rax, rbx ; pop rbx ; ret
0x00000000000ad3ae : je 0xad3dd ; sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad666 : je 0xad695 ; sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000000ad916 : je 0xad945 ; sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000adac8 : je 0xadad5 ; test edx, edx ; jne 0xadac7 ; ret
0x00000000000adac7 : je 0xadad6 ; test edx, edx ; jne 0xadac8 ; ret
0x00000000000bbcf7 : je 0xbbd24 ; sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x00000000000bbdac : je 0xbbddb ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000bbe75 : je 0xbbea0 ; cmp byte ptr [rax + 1], cl ; ret 0x6348
0x00000000000bc266 : je 0xbc295 ; mov rdi, qword ptr [rsp + 0x68] ; call r12
0x00000000000be447 : je 0xbe472 ; cmp byte ptr [rcx + 1], cl ; ret
0x00000000000c3193 : je 0xc31ea ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000c7590 : je 0xc75ae ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cc3a1 : je 0xcc3a7 ; call rax
0x00000000000cc4f2 : je 0xcc4fb ; call rdx
0x00000000000cc583 : je 0xcc58c ; call rax
0x00000000000cdabd : je 0xcdb0c ; mov eax, 0x20 ; ret
0x00000000000cdb79 : je 0xcdba9 ; mov eax, 1 ; ret
0x00000000000cf50c : je 0xcf527 ; call 0x8b724
0x00000000000d6ebf : je 0xd6ee9 ; or byte ptr [rcx], ch ; ret
0x00000000000d72d0 : je 0xd7269 ; pop rbx ; ret
0x00000000000d7302 : je 0xd729d ; pop rbx ; ret
0x00000000000d72fd : je 0xd72c3 ; and ebx, 8 ; je 0xd72a2 ; pop rbx ; ret
0x00000000000d9242 : je 0xd9251 ; add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rcx], 0x83 ; ret 0x4001
0x00000000000daf31 : je 0xdaf45 ; xor eax, eax ; pop rbx ; ret
0x00000000000dc5a9 : je 0xdc5d7 ; or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00000000000e0fc3 : je 0xe0fff ; mov rdx, rax ; jmp 0xe0f63
0x00000000000e8468 : je 0xe84a4 ; xor eax, eax ; ret
0x00000000000e84c7 : je 0xe84d7 ; mov eax, 2 ; ret
0x00000000000e9187 : je 0xe91b3 ; enter 0xf41, -0x62 ; ret 0x844
0x00000000000efcb5 : je 0xefc93 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f07ee : je 0xf0819 ; cmp byte ptr [rax - 0x77], cl ; ret 0x8b44
0x00000000000f3fa7 : je 0xf4128 ; call 0x20281
0x00000000000f41e4 : je 0xf420f ; cmp byte ptr [rax - 0x77], cl ; ret 0x69e9
0x00000000000f5f1a : je 0xf5f23 ; ret
0x00000000000fba20 : je 0xfba3d ; neg eax ; pop rbx ; ret
0x00000000000fcb8f : je 0xfcbb9 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fcc48 : je 0xfcc72 ; sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000fd39e : je 0xfd3a5 ; ret
0x00000000000ff213 : je 0xff21e ; mov qword ptr [rax], rdx ; ret
0x00000000000ff2e2 : je 0xff2d7 ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000010039f : jg 0x1003a9 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x0000000000104725 : jg 0x1046df ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000133002 : jg 0x13304c ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133018 ; ret
0x0000000000139162 : jg 0x1391ac ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x139178 ; ret
0x000000000014da30 : jg 0x14daac ; loopne 0x14da01 ; jp 0x14dabd ; jp 0x14da30 ; ret
0x000000000014dadc : jg 0x14daed ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014df20 : jg 0x14df9c ; loopne 0x14def1 ; jp 0x14dfad ; jp 0x14df20 ; ret
0x000000000014dfcc : jg 0x14dfdd ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x000000000014e2c3 : jg 0x14e33f ; loopne 0x14e294 ; jp 0x14e350 ; jp 0x14e2c3 ; ret
0x000000000014e36c : jg 0x14e37d ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x0000000000153189 : jg 0x1531dc ; ret
0x000000000015320f : jg 0x15325a ; ret
0x0000000000153389 : jg 0x1533dc ; ret 0x894c
0x000000000015340f : jg 0x15345a ; ret 0x894c
0x0000000000155b59 : jg 0x155bac ; ret
0x0000000000155bdf : jg 0x155c2a ; ret
0x0000000000155d59 : jg 0x155dac ; ret 0x894c
0x0000000000155ddf : jg 0x155e2a ; ret 0x894c
0x0000000000158529 : jg 0x15857c ; ret
0x00000000001585af : jg 0x1585fa ; ret
0x0000000000158729 : jg 0x15877c ; ret 0x894c
0x00000000001587af : jg 0x1587fa ; ret 0x894c
0x000000000015aaf8 : jg 0x15ab49 ; loope 0x15aaf7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ab6f : jg 0x15abba ; ret 0xff2
0x000000000015ab88 : jg 0x15abd9 ; loop 0x15ab87 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015abff : jg 0x15ac4a ; ret
0x000000000015ac18 : jg 0x15ac69 ; jrcxz 0x15ac17 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aca8 : jg 0x15acf9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ad28 : jg 0x15ad79 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ada8 : jg 0x15adf9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ae28 : jg 0x15ae79 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aea8 : jg 0x15aef9 ; call 0x4f94beaa
0x000000000015af28 : jg 0x15af79 ; jmp 0x4f94bf2a
0x000000000015b0a8 : jg 0x15b0f9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b128 : jg 0x15b179 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b1b8 : jg 0x15b209 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b238 : jg 0x15b289 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b2ac : jg 0x15b2b7 ; ret
0x000000000015b306 : jg 0x15b319 ; ret
0x000000000015b301 : jg 0x15b351 ; psllq mm1, qword ptr [rdi] ; jg 0x15b31e ; ret
0x000000000015b376 : jg 0x15b389 ; ret
0x000000000015b3e6 : jg 0x15b3f9 ; ret
0x000000000015b3e1 : jg 0x15b431 ; or eax, 0xf7f0ff3 ; ret
0x000000000015b456 : jg 0x15b469 ; ret
0x000000000015b451 : jg 0x15b4a1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b4c6 : jg 0x15b4d9 ; ret
0x000000000015b4c1 : jg 0x15b511 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b536 : jg 0x15b549 ; ret
0x000000000015b531 : jg 0x15b581 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b5a6 : jg 0x15b5b9 ; ret
0x000000000015b5a1 : jg 0x15b5f1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b616 : jg 0x15b629 ; ret
0x000000000015b611 : jg 0x15b661 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b686 : jg 0x15b699 ; ret
0x000000000015b6f6 : jg 0x15b709 ; ret
0x000000000015b766 : jg 0x15b779 ; ret
0x000000000015b761 : jg 0x15b7b1 ; add eax, 0xf7f0ff3 ; ret
0x000000000015b7d6 : jg 0x15b7e9 ; ret
0x000000000015b7d1 : jg 0x15b821 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b846 : jg 0x15b859 ; ret
0x000000000015b841 : jg 0x15b891 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b8b6 : jg 0x15b8c9 ; ret
0x000000000015b8b1 : jg 0x15b901 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b926 : jg 0x15b939 ; ret
0x000000000015b921 : jg 0x15b971 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015d5c8 : jg 0x15d619 ; loope 0x15d5c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d63f : jg 0x15d68a ; ret 0xff2
0x000000000015d658 : jg 0x15d6a9 ; loop 0x15d657 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d6cf : jg 0x15d71a ; ret
0x000000000015d6e8 : jg 0x15d739 ; jrcxz 0x15d6e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d778 : jg 0x15d7c9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d7f8 : jg 0x15d849 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d878 : jg 0x15d8c9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d8f8 : jg 0x15d949 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d978 : jg 0x15d9c9 ; call 0x4f94e97a
0x000000000015d9f8 : jg 0x15da49 ; jmp 0x4f94e9fa
0x000000000015db78 : jg 0x15dbc9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dbf8 : jg 0x15dc49 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dc88 : jg 0x15dcd9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dd08 : jg 0x15dd59 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015dd7c : jg 0x15dd87 ; ret
0x000000000015ddd6 : jg 0x15dde9 ; ret
0x000000000015ddd1 : jg 0x15de21 ; psllq mm1, qword ptr [rdi] ; jg 0x15ddee ; ret
0x000000000015de46 : jg 0x15de59 ; ret
0x000000000015deb6 : jg 0x15dec9 ; ret
0x000000000015deb1 : jg 0x15df01 ; or eax, 0xf7f0ff3 ; ret
0x000000000015df26 : jg 0x15df39 ; ret
0x000000000015df21 : jg 0x15df71 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015df96 : jg 0x15dfa9 ; ret
0x000000000015df91 : jg 0x15dfe1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e006 : jg 0x15e019 ; ret
0x000000000015e001 : jg 0x15e051 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e076 : jg 0x15e089 ; ret
0x000000000015e071 : jg 0x15e0c1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e0e6 : jg 0x15e0f9 ; ret
0x000000000015e0e1 : jg 0x15e131 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e156 : jg 0x15e169 ; ret
0x000000000015e1c6 : jg 0x15e1d9 ; ret
0x000000000015e236 : jg 0x15e249 ; ret
0x000000000015e231 : jg 0x15e281 ; add eax, 0xf7f0ff3 ; ret
0x000000000015e2a6 : jg 0x15e2b9 ; ret
0x000000000015e2a1 : jg 0x15e2f1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e316 : jg 0x15e329 ; ret
0x000000000015e311 : jg 0x15e361 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e386 : jg 0x15e399 ; ret
0x000000000015e381 : jg 0x15e3d1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000015e3f6 : jg 0x15e409 ; ret
0x000000000015e3f1 : jg 0x15e441 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001600e8 : jg 0x160139 ; loope 0x1600e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016015f : jg 0x1601aa ; ret 0xff2
0x0000000000160178 : jg 0x1601c9 ; loop 0x160177 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001601ef : jg 0x16023a ; ret
0x0000000000160208 : jg 0x160259 ; jrcxz 0x160207 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160298 : jg 0x1602e9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160318 : jg 0x160369 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160398 : jg 0x1603e9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160418 : jg 0x160469 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160498 : jg 0x1604e9 ; call 0x4f95149a
0x0000000000160518 : jg 0x160569 ; jmp 0x4f95151a
0x0000000000160698 : jg 0x1606e9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160718 : jg 0x160769 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001607a8 : jg 0x1607f9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000160828 : jg 0x160879 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000016089c : jg 0x1608a7 ; ret
0x00000000001608f6 : jg 0x160909 ; ret
0x00000000001608f1 : jg 0x160941 ; psllq mm1, qword ptr [rdi] ; jg 0x16090e ; ret
0x0000000000160966 : jg 0x160979 ; ret
0x00000000001609d6 : jg 0x1609e9 ; ret
0x00000000001609d1 : jg 0x160a21 ; or eax, 0xf7f0ff3 ; ret
0x0000000000160a46 : jg 0x160a59 ; ret
0x0000000000160a41 : jg 0x160a91 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160ab6 : jg 0x160ac9 ; ret
0x0000000000160ab1 : jg 0x160b01 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160b26 : jg 0x160b39 ; ret
0x0000000000160b21 : jg 0x160b71 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160b96 : jg 0x160ba9 ; ret
0x0000000000160b91 : jg 0x160be1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160c06 : jg 0x160c19 ; ret
0x0000000000160c01 : jg 0x160c51 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160c76 : jg 0x160c89 ; ret
0x0000000000160ce6 : jg 0x160cf9 ; ret
0x0000000000160d56 : jg 0x160d69 ; ret
0x0000000000160d51 : jg 0x160da1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000160dc6 : jg 0x160dd9 ; ret
0x0000000000160dc1 : jg 0x160e11 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160e36 : jg 0x160e49 ; ret
0x0000000000160e31 : jg 0x160e81 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160ea6 : jg 0x160eb9 ; ret
0x0000000000160ea1 : jg 0x160ef1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000160f16 : jg 0x160f29 ; ret
0x0000000000160f11 : jg 0x160f61 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001728f5 : jg 0x172904 ; neg eax ; ret
0x0000000000172a02 : jg 0x172a12 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000172aa3 : jg 0x172af4 ; loopne 0x172af8 ; sub eax, edx ; vzeroupper ; ret
0x0000000000194f31 : jg 0x194f34 ; call qword ptr [rax + 0x10fffb80]
0x0000000000196a71 : jg 0x196a5e ; jmp rsp
0x000000000019b469 : jg 0x19b467 ; call rsp
0x00000000001a7911 : jg 0x1a7904 ; call qword ptr [rdi]
0x0000000000026cff : jg 0x26c8c ; ret 0x5c77
0x00000000000347bb : jg 0x3480d ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000034c5b : jg 0x34c62 ; je 0x34c4e ; ret
0x0000000000035042 : jg 0x3508c ; or eax, esi ; je 0x34ff3 ; ret
0x000000000003acb2 : jg 0x3acfb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000047bbb : jg 0x47c29 ; xor eax, eax ; ret
0x0000000000047d7e : jg 0x47c8f ; pop rbx ; ret
0x000000000004a1f4 : jg 0x4a201 ; ret 0x5488
0x0000000000058395 : jg 0x583ae ; test byte ptr [rbx - 0x7c00001b], bh ; ret
0x0000000000063dfd : jg 0x63d8a ; ret
0x00000000000774f7 : jg 0x77485 ; inc byte ptr [rdx] ; je 0x77511 ; mov dword ptr [rdi], edx ; ret
0x000000000008da9d : jg 0x8da70 ; or eax, dword ptr [rax] ; ret
0x000000000008f282 : jg 0x8f2d4 ; adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000008f427 : jg 0x8f440 ; jne 0x8f417 ; mov rax, rdi ; ret
0x00000000000944e7 : jg 0x944fe ; jne 0x944d5 ; ret
0x00000000000959b8 : jg 0x959a3 ; ret
0x000000000009fb64 : jg 0x9fb75 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009fb78 : jg 0x9fb89 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000009ffea : jg 0x9ffe6 ; ret
0x00000000000a02b7 : jg 0xa02c8 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000000a02cb : jg 0xa02dc ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a073d : jg 0xa0739 ; ret
0x00000000000a0a04 : jg 0xa0a15 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000000a0a18 : jg 0xa0a29 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000000a0e8a : jg 0xa0e86 ; ret
0x00000000000a5e26 : jg 0xa5e31 ; ret
0x00000000000a5e36 : jg 0xa5e44 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e4a : jg 0xa5e59 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5e69 : jg 0xa5e77 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5e79 : jg 0xa5e87 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e89 : jg 0xa5e9a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a5eaa : jg 0xa5eb9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5eca : jg 0xa5ed9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5eea : jg 0xa5ef9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5f0a : jg 0xa5f1c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a5f4d : jg 0xa5f5f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f6d : jg 0xa5f7f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f8b : jg 0xa5f9b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5fab : jg 0xa5fbb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fcb : jg 0xa5fdb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5feb : jg 0xa5ffb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6578 : jg 0xa6583 ; jne 0xa6e38 ; ret
0x00000000000a659c : jg 0xa65a8 ; jne 0xa6e38 ; ret
0x00000000000a65bf : jg 0xa65cc ; jne 0xa6e38 ; ret
0x00000000000a65da : jg 0xa65e8 ; jne 0xa6e38 ; ret
0x00000000000a65fd : jg 0xa660c ; jne 0xa6e38 ; ret
0x00000000000a6622 : jg 0xa6632 ; jne 0xa6e38 ; ret
0x00000000000a6640 : jg 0xa6651 ; jne 0xa6e38 ; ret
0x00000000000a665c : jg 0xa666e ; jne 0xa6e38 ; ret
0x00000000000a667f : jg 0xa6692 ; jne 0xa6e38 ; ret
0x00000000000a66a4 : jg 0xa66b8 ; jne 0xa6e38 ; ret
0x00000000000a66c2 : jg 0xa66d7 ; jne 0xa6e38 ; ret
0x00000000000a66e2 : jg 0xa66f8 ; jne 0xa6e38 ; ret
0x00000000000a6704 : jg 0xa671b ; jne 0xa6e38 ; ret
0x00000000000a6724 : jg 0xa673c ; jne 0xa6e38 ; ret
0x00000000000a6744 : jg 0xa675d ; jne 0xa6e38 ; ret
0x00000000000a675e : jg 0xa6778 ; jne 0xa6e38 ; ret
0x00000000000a6781 : jg 0xa679c ; jne 0xa6e38 ; ret
0x00000000000a67a6 : jg 0xa67c2 ; jne 0xa6e38 ; ret
0x00000000000a67c4 : jg 0xa67e1 ; jne 0xa6e38 ; ret
0x00000000000a67e4 : jg 0xa6802 ; jne 0xa6e38 ; ret
0x00000000000a6807 : jg 0xa6826 ; jne 0xa6e38 ; ret
0x00000000000a6826 : jg 0xa6846 ; jne 0xa6e38 ; ret
0x00000000000a6846 : jg 0xa6867 ; jne 0xa6e38 ; ret
0x00000000000a6866 : jg 0xa6888 ; jne 0xa6e38 ; ret
0x00000000000a6889 : jg 0xa68ac ; jne 0xa6e38 ; ret
0x00000000000a68be : jg 0xa68e2 ; jne 0xa6e38 ; ret
0x00000000000a68ec : jg 0xa6911 ; jne 0xa6e38 ; ret
0x00000000000a691c : jg 0xa6942 ; jne 0xa6e38 ; ret
0x00000000000a6948 : jg 0xa696f ; jne 0xa6e38 ; ret
0x00000000000a6978 : jg 0xa69a0 ; jne 0xa6e38 ; ret
0x00000000000a69a8 : jg 0xa69d1 ; jne 0xa6e38 ; ret
0x00000000000a69d8 : jg 0xa6a02 ; jne 0xa6e38 ; ret
0x00000000000a6af6 : jg 0xa6b01 ; ret
0x00000000000a6b09 : jg 0xa6b17 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a6b1a : jg 0xa6b29 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a6b39 : jg 0xa6b47 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b49 : jg 0xa6b57 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a6b5c : jg 0xa6b6d ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a6b7a : jg 0xa6b89 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a6b9a : jg 0xa6ba9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6bba : jg 0xa6bc9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a6bdd : jg 0xa6bef ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a6c1d : jg 0xa6c2f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a6c3d : jg 0xa6c4f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a6c5b : jg 0xa6c6b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a6c7b : jg 0xa6c8b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a6c9b : jg 0xa6cab ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a6cbb : jg 0xa6ccb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a6df2 : jg 0xa6dfd ; ret
0x00000000000a6f26 : jg 0xa6f5a ; ret
0x00000000000a7496 : jg 0xa74a5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a74a6 : jg 0xa74b8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a74d9 : jg 0xa74eb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74f9 : jg 0xa750b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a761f : jg 0xa767f ; or eax, 0x1c478d48 ; ret
0x00000000000a7c1b : jg 0xa7c26 ; jne 0xa8648 ; ret
0x00000000000a7c40 : jg 0xa7c4c ; jne 0xa8648 ; ret
0x00000000000a7c63 : jg 0xa7c70 ; jne 0xa8648 ; ret
0x00000000000a7c7e : jg 0xa7c8c ; jne 0xa8648 ; ret
0x00000000000a7ca1 : jg 0xa7cb0 ; jne 0xa8648 ; ret
0x00000000000a7cc6 : jg 0xa7cd6 ; jne 0xa8648 ; ret
0x00000000000a7ce4 : jg 0xa7cf5 ; jne 0xa8648 ; ret
0x00000000000a7d00 : jg 0xa7d12 ; jne 0xa8648 ; ret
0x00000000000a7d23 : jg 0xa7d36 ; jne 0xa8648 ; ret
0x00000000000a7d48 : jg 0xa7d5c ; jne 0xa8648 ; ret
0x00000000000a7d76 : jg 0xa7d8b ; jne 0xa8648 ; ret
0x00000000000a7d96 : jg 0xa7dac ; jne 0xa8648 ; ret
0x00000000000a7db8 : jg 0xa7dcf ; jne 0xa8648 ; ret
0x00000000000a7de8 : jg 0xa7e00 ; jne 0xa8648 ; ret
0x00000000000a7e18 : jg 0xa7e31 ; jne 0xa8648 ; ret
0x00000000000a7e42 : jg 0xa7e5c ; jne 0xa8648 ; ret
0x00000000000a7e65 : jg 0xa7e80 ; jne 0xa8648 ; ret
0x00000000000a7e8a : jg 0xa7ea6 ; jne 0xa8648 ; ret
0x00000000000a7eb8 : jg 0xa7ed5 ; jne 0xa8648 ; ret
0x00000000000a7ee8 : jg 0xa7f06 ; jne 0xa8648 ; ret
0x00000000000a7f1b : jg 0xa7f3a ; jne 0xa8648 ; ret
0x00000000000a7f4a : jg 0xa7f6a ; jne 0xa8648 ; ret
0x00000000000a7f7a : jg 0xa7f9b ; jne 0xa8648 ; ret
0x00000000000a7faa : jg 0xa7fcc ; jne 0xa8648 ; ret
0x00000000000a7fdd : jg 0xa8000 ; jne 0xa8648 ; ret
0x00000000000a8012 : jg 0xa8036 ; jne 0xa8648 ; ret
0x00000000000a8040 : jg 0xa8065 ; jne 0xa8648 ; ret
0x00000000000a8070 : jg 0xa8096 ; jne 0xa8648 ; ret
0x00000000000a809c : jg 0xa80c3 ; jne 0xa8648 ; ret
0x00000000000a80cc : jg 0xa80f4 ; jne 0xa8648 ; ret
0x00000000000a80fc : jg 0xa8125 ; jne 0xa8648 ; ret
0x00000000000a812c : jg 0xa8156 ; jne 0xa8648 ; ret
0x00000000000a82d6 : jg 0xa82e5 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a82e9 : jg 0xa82fb ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a8329 : jg 0xa833b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a8349 : jg 0xa835b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a846f : jg 0xa84cf ; or eax, 0x1d478d48 ; ret
0x00000000000a8602 : jg 0xa860d ; ret
0x00000000000a8736 : jg 0xa876e ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a8735 : jg 0xa87bd ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000a8f06 : jg 0xa8f11 ; ret
0x00000000000a8f16 : jg 0xa8f24 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a8f2a : jg 0xa8f39 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a8f49 : jg 0xa8f57 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f59 : jg 0xa8f67 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a8f69 : jg 0xa8f7a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8f8a : jg 0xa8f99 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a8faa : jg 0xa8fb9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8fca : jg 0xa8fd9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a8fea : jg 0xa8ffc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a902d : jg 0xa903f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a904d : jg 0xa905f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a906b : jg 0xa907b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a908b : jg 0xa909b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a90ab : jg 0xa90bb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a90cb : jg 0xa90db ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a99d6 : jg 0xa99e1 ; ret
0x00000000000a99e6 : jg 0xa99f4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a99fa : jg 0xa9a09 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a9a19 : jg 0xa9a27 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a29 : jg 0xa9a37 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9a39 : jg 0xa9a4a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a9a5a : jg 0xa9a69 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9a7a : jg 0xa9a89 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a9a : jg 0xa9aa9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9aba : jg 0xa9acc ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9afd : jg 0xa9b0f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9b1d : jg 0xa9b2f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9b3b : jg 0xa9b4b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a9b5b : jg 0xa9b6b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a9b7b : jg 0xa9b8b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a9b9b : jg 0xa9bab ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a9d46 : jg 0xa9d56 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9f1f : jg 0xa9f80 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f3f : jg 0xa9fa0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9fb6 : jg 0xa9fef ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9fb5 : jg 0xaa03e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000aa5d7 : jg 0xaa5e7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000000aa5cd : jg 0xaa5ed ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aaba0 : jg 0xaabdd ; ret 0x2b77
0x00000000000abc65 : jg 0xabc6d ; neg eax ; ret
0x00000000000beb60 : jg 0xbeb9b ; add byte ptr [rdx - 0x73], cl ; or al, 0x20 ; mov rdx, rax ; jmp 0xbeb79
0x00000000000c7887 : jg 0xc785a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cd95c : jg 0xcd962 ; add byte ptr [rax], al ; ret
0x00000000000cd9ab : jg 0xcd9b4 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000cd9ab : jg 0xcd9b5 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e1fc7 : jg 0xe1fdc ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000010295b : jge 0x10295f ; call rbx
0x0000000000102a82 : jge 0x102a86 ; call rbx
0x0000000000102a90 : jge 0x102a94 ; call rbx
0x0000000000102bc5 : jge 0x102bc9 ; call rbx
0x0000000000102d35 : jge 0x102d39 ; call rbx
0x0000000000102d43 : jge 0x102d47 ; call rbx
0x0000000000103196 : jge 0x103161 ; mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000104553 : jge 0x104557 ; call rbx
0x000000000010467b : jge 0x10467f ; call rbx
0x00000000001047be : jge 0x1047c2 ; call rbx
0x00000000001048bf : jge 0x1048c3 ; call rbx
0x00000000001048db : jge 0x1048df ; call rbx
0x0000000000132def : jge 0x132e03 ; call rax
0x0000000000138f6f : jge 0x138f83 ; call rax
0x0000000000139688 : jge 0x13969c ; call rax
0x0000000000172b30 : jge 0x172b45 ; call r12
0x000000000018a705 : jge 0x18a6ff ; call qword ptr [rdx]
0x000000000018a755 : jge 0x18a74f ; call rsi
0x0000000000194f2d : jge 0x194f2c ; call qword ptr [rax]
0x0000000000195edd : jge 0x195edd ; call qword ptr [rdx]
0x0000000000195ee1 : jge 0x195ee5 ; call qword ptr [rdx + 0x12fffc7c]
0x000000000019601d : jge 0x19601d ; jmp rax
0x000000000019605d : jge 0x19605d ; call rax
0x000000000019e559 : jge 0x19e546 ; jmp rsp
0x00000000001a386d : jge 0x1a3875 ; add byte ptr [rax], dh ; in eax, dx ; jmp rsi
0x0000000000038f6e : jge 0x38f73 ; call r14
0x000000000004727a : jge 0x47281 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000009f08f : jge 0x9f097 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000acb06 : jge 0xacb0b ; call r12
0x00000000000ccfdf : jge 0xccf91 ; call 0x1f8b0
0x00000000000d764a : jge 0xd7623 ; mov edx, eax ; jmp 0xd762c
0x00000000000f7812 : jge 0xf7864 ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000ff2f6 : jge 0xff32c ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000102df0 : jl 0x102e1e ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000001073a4 : jl 0x1073e9 ; je 0x1073ad ; ret
0x000000000011934b : jl 0x11937a ; or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x0000000000128629 : jl 0x128654 ; and byte ptr [rax - 0x77], cl ; ret
0x00000000001336b7 : jl 0x1336e2 ; or byte ptr [rax + 0x63], cl ; ret
0x000000000014365a : jl 0x143685 ; sbb al, ch ; ret 0xffed
0x000000000017084b : jl 0x170854 ; neg eax ; ret
0x00000000001888b4 : jl 0x188848 ; call rdx
0x000000000018a7c5 : jl 0x18a7bf ; call qword ptr [rsi]
0x000000000018a7c1 : jl 0x18a7bf ; push rdx ; jl 0x18a7c3 ; call qword ptr [rsi]
0x000000000018a7c4 : jl 0x18a7c0 ; call qword ptr [rsi]
0x000000000018a7c0 : jl 0x18a7c0 ; push rdx ; jl 0x18a7c4 ; call qword ptr [rsi]
0x0000000000194f29 : jl 0x194f2c ; call qword ptr [rax + 0x10fffb7d]
0x0000000000195ee5 : jl 0x195ee5 ; call qword ptr [rdx]
0x0000000000195ee9 : jl 0x195eed ; call qword ptr [rdx + 0x12fffc7b]
0x0000000000196025 : jl 0x196025 ; jmp rax
0x0000000000196065 : jl 0x196065 ; call rax
0x0000000000198e3c : jl 0x198ea2 ; add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x000000000019a0a4 : jl 0x19a071 ; add dword ptr [rax], eax ; test ah, bl ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019ab5c : jl 0x19ab73 ; add al, byte ptr [rax] ; stc ; call rsp
0x000000000019b884 : jl 0x19b892 ; add dword ptr [rax], eax ; and al, 0x73 ; sti ; call rsp
0x000000000019ba6c : jl 0x19ba3e ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x000000000019e529 : jl 0x19e516 ; jmp qword ptr [rsi]
0x00000000001a2874 : jl 0x1a28ea ; add byte ptr [rax], al ; fadd dword ptr [rdi] ; in eax, dx ; call rsi
0x00000000001a37b5 : jl 0x1a37bb ; add byte ptr [rsi], cl ; ret 0xffe7
0x00000000001a7e90 : jl 0x1a7e97 ; add byte ptr [rax], al ; pushfq ; ret
0x00000000001aa774 : jl 0x1aa769 ; add byte ptr [rax], al ; clc ; add dh, dl ; call rdi
0x00000000001b2b74 : jl 0x1b2bed ; add dword ptr [rax], eax ; call 0x271b249c
0x00000000001bc174 : jl 0x1bc183 ; add al, byte ptr [rax] ; pop rax ; xchg ebx, edi ; call rcx
0x0000000000024366 : jl 0x24394 ; sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d01 : jl 0x24d2f ; sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002510f : jl 0x2513d ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000025e3 : jl 0x2576 ; loop 0x25c1 ; ret 0x23cb
0x0000000000025f30 : jl 0x25f5e ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000026869 : jl 0x26892 ; call rbx
0x0000000000026ca9 : jl 0x26cd7 ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000027bfd : jl 0x27c2b ; and byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x000000000002a278 : jl 0x2a2a3 ; sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x00000000000517b8 : jl 0x51782 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000072a25 : jl 0x729c1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007a78b : jl 0x7a7d6 ; movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000879d0 : jl 0x879da ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x00000000000898b0 : jl 0x8992d ; add dword ptr [rax], eax ; ret
0x0000000000095125 : jl 0x95150 ; adc byte ptr [rcx + 1], cl ; ret 0x1b8
0x000000000009f11a : jl 0x9f185 ; add rax, rdi ; ret
0x000000000009f12a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000009f14a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000009f16a : jl 0x9f187 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009fae4 : jl 0x9fb33 ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fb20 : jl 0x9fb6f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000009fd1e : jl 0x9fd6d ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fe85 : jl 0x9fed4 ; adc dword ptr [rcx + 7], edi ; ret
0x000000000009ffe7 : jl 0xa0036 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000a0237 : jl 0xa0286 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0273 : jl 0xa02c2 ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a0471 : jl 0xa04c0 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a05d8 : jl 0xa0627 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a073a : jl 0xa0789 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000a0984 : jl 0xa09d3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a09c0 : jl 0xa0a0f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000000a0bbe : jl 0xa0c0d ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0d25 : jl 0xa0d74 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0e87 : jl 0xa0ed6 ; adc dword ptr [rdi - 8], edi ; ret
0x00000000000aa58c : jl 0xaa5db ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5ad : jl 0xaa5fc ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa5c0 : jl 0xaa60f ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa695 : jl 0xaa6e4 ; adc dword ptr [rsi - 1], edx ; ret
0x00000000000aa6ed : jl 0xaa73c ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000aa78a : jl 0xaa7d9 ; adc dword ptr [rsi + 7], edx ; ret
0x00000000000c0200 : jl 0xc0257 ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c45e9 : jl 0xc4614 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000c92b0 : jl 0xc92de ; sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000e1c69 : jl 0xe1c95 ; add rax, rdx ; jmp rax
0x00000000000e3180 : jl 0xe31ab ; and byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000e3e97 : jl 0xe3ec6 ; sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000000f2ada : jl 0xf2b07 ; and byte ptr [rbp + 0x31], al ; in al, -0x18 ; ret
0x00000000000f4365 : jl 0xf4390 ; sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f7644 : jl 0xf7670 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000f7644 : jl 0xf7671 ; test al, 2 ; cmove eax, edx ; ret
0x00000000000f7b80 : jl 0xf7b79 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000fb12f : jl 0xfb137 ; add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x00000000000ff412 : jl 0xff448 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x0000000000137c88 : jle 0x137ca0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014a6d6 : jle 0x14a5f1 ; movsxd rax, ecx ; ret
0x000000000014a91a : jle 0x14a85b ; ret
0x0000000000188761 : jle 0x188758 ; jmp qword ptr [rdi]
0x0000000000188761 : jle 0x18875c ; jmp qword ptr [rdi]
0x0000000000195ed5 : jle 0x195ed5 ; jmp qword ptr [rdx]
0x0000000000195ed9 : jle 0x195edd ; call qword ptr [rdx + 0x12fffc7d]
0x0000000000196055 : jle 0x196055 ; jmp rax
0x00000000001a67f1 : jle 0x1a67e3 ; jmp qword ptr [rcx]
0x00000000001a67f0 : jle 0x1a67e4 ; jmp qword ptr [rcx]
0x00000000001ac9c1 : jle 0x1ac9cf ; ret
0x000000000002a6e2 : jle 0x2a6f5 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000003180 : jle 0x317e ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000005c4f6 : jle 0x5c577 ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000000684ec : jle 0x68479 ; ret
0x000000000008b79e : jle 0x8b7a7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b79e : jle 0x8b7a8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000cd1fd : jle 0xcd20b ; ret
0x00000000000cda09 : jle 0xcda0f ; add byte ptr [rax], al ; ret
0x0000000000101e22 : jmp 0x101de8
0x0000000000106e02 : jmp 0x1062dc
0x000000000010876a : jmp 0x10879b
0x0000000000108769 : jmp 0x10879c
0x000000000010c8c4 : jmp 0x10c611
0x000000000010c8f4 : jmp 0x10c82c
0x000000000010dff7 : jmp 0x10df1e
0x000000000010e710 : jmp 0x10e6d6
0x0000000000112b59 : jmp 0x112b1f
0x0000000000118661 : jmp 0x118626
0x000000000011a392 : jmp 0x11a159
0x000000000011a752 : jmp 0x11a529
0x000000000011ab24 : jmp 0x11ab4e
0x000000000011cbbc : jmp 0x11cbe6
0x000000000011fe2d : jmp 0x11fe55
0x0000000000126a3c : jmp 0x126a01
0x000000000013227f : jmp 0x132245
0x00000000001369e1 : jmp 0x1369b1
0x000000000013852e : jmp 0x138538
0x0000000000142550 : jmp 0x14223c
0x00000000001748b9 : jmp 0x174872
0x0000000000175822 : jmp 0x175824
0x0000000000175821 : jmp 0x175825
0x0000000000175820 : jmp 0x175826
0x0000000000175826 : jmp 0x175828
0x0000000000175825 : jmp 0x175829
0x000000000017583a : jmp 0x17583c
0x0000000000175839 : jmp 0x17583d
0x0000000000175838 : jmp 0x17583e
0x000000000017584e : jmp 0x175850
0x000000000017584d : jmp 0x175851
0x0000000000181e0e : jmp 0x181e10
0x0000000000181e1a : jmp 0x181e1c
0x0000000000181e1e : jmp 0x181e20
0x0000000000181ede : jmp 0x181ee0
0x000000000018344a : jmp 0x183489
0x0000000000184189 : jmp 0x18415c
0x0000000000185180 : jmp 0x185114
0x000000000018517f : jmp 0x185115
0x0000000000197172 : jmp 0x197174
0x000000000019726a : jmp 0x19726c
0x00000000001972ba : jmp 0x1972bc
0x00000000001972b9 : jmp 0x1972bd
0x00000000001972b8 : jmp 0x1972be
0x00000000001972e2 : jmp 0x1972e4
0x00000000001a0682 : jmp 0x1a0684
0x00000000001a0681 : jmp 0x1a0685
0x00000000001a06d2 : jmp 0x1a06d4
0x00000000001a0a22 : jmp 0x1a0a24
0x00000000001a0ada : jmp 0x1a0adc
0x00000000001a0b5a : jmp 0x1a0b5c
0x000000000019d99a : jmp 0x1b9ca0
0x000000000019d999 : jmp 0x1b9ca1
0x000000000001fb07 : jmp 0x1facd
0x0000000000020496 : jmp 0x2045b
0x0000000000026a1b : jmp 0x2682e
0x0000000000037b81 : jmp 0x37b8b
0x00000000000038b3 : jmp 0x3879
0x000000000003af85 : jmp 0x39c63093
0x000000000009a60f : jmp 0x440b6899
0x0000000000048392 : jmp 0x483e4
0x00000000000e8240 : jmp 0x48d10b90
0x0000000000133b92 : jmp 0x48d2fe22
0x00000000000701a2 : jmp 0x48f58af5
0x0000000000049f72 : jmp 0x49fc4
0x000000000004f267 : jmp 0x4f243
0x000000000015af2a : jmp 0x4f94bf28
0x000000000015af29 : jmp 0x4f94bf29
0x000000000015d9fa : jmp 0x4f94e9f8
0x000000000015d9f9 : jmp 0x4f94e9f9
0x000000000016051a : jmp 0x4f951518
0x0000000000160519 : jmp 0x4f951519
0x000000000005f811 : jmp 0x5baf2
0x000000000005c46c : jmp 0x5c431
0x0000000000060852 : jmp 0x5ca99
0x000000000005fb8a : jmp 0x5fb4f
0x000000000006045e : jmp 0x60423
0x0000000000062809 : jmp 0x627ce
0x0000000000067498 : jmp 0x636fe
0x0000000000065b8b : jmp 0x63702
0x0000000000068daa : jmp 0x64b91
0x0000000000065aca : jmp 0x64bf7
0x0000000000065ac9 : jmp 0x64bf8
0x000000000006597b : jmp 0x653d3
0x0000000000069613 : jmp 0x6585f
0x0000000000069f5b : jmp 0x661e6
0x0000000000072feb : jmp 0x72fb1
0x0000000000072fea : jmp 0x72fb2
0x00000000001176d4 : jmp 0x76d3b024
0x0000000000117887 : jmp 0x76d3b1d7
0x000000000007b5de : jmp 0x7b5c0
0x000000000019680a : jmp 0x7ba517
0x000000000007ef54 : jmp 0x7ef7e
0x00000000001968a2 : jmp 0x820daf
0x0000000000083b65 : jmp 0x83b8e
0x0000000000086ae1 : jmp 0x86aa9
0x0000000000196a3a : jmp 0x883747
0x00000000000886e2 : jmp 0x886a8
0x000000000008885a : jmp 0x8881f
0x0000000000089b54 : jmp 0x89b1a
0x0000000000089ca8 : jmp 0x89c6d
0x0000000000196b52 : jmp 0x90285f
0x0000000000196ba2 : jmp 0x9128af
0x000000000009614b : jmp 0x95fa1
0x00000000000967fc : jmp 0x967c2
0x0000000000096948 : jmp 0x9690d
0x0000000000096af2 : jmp 0x96ab7
0x0000000000196d5a : jmp 0x983267
0x000000000009a944 : jmp 0x9a94e
0x000000000009ae20 : jmp 0x9ae2a
0x000000000009d9c2 : jmp 0x9d36a
0x000000000009e3fc : jmp 0x9d3f2
0x000000000009d4e1 : jmp 0x9d40f
0x000000000009e3fd : jmp 0x9e3f3
0x00000000000aa32e : jmp 0xaa2f4
0x00000000000aa3ff : jmp 0xaa3c5
0x00000000000aa46e : jmp 0xaa434
0x00000000000adfd4 : jmp 0xaddb7
0x00000000000ae3e3 : jmp 0xae217
0x00000000000b0ba2 : jmp 0xb068d
0x00000000000b7814 : jmp 0xb7861
0x00000000000bf715 : jmp 0xbb943
0x00000000000bf1eb : jmp 0xbf1b0
0x00000000000bf5a8 : jmp 0xbf5ba
0x00000000000c012c : jmp 0xbff1d
0x00000000000c254e : jmp 0xc23a0
0x00000000000c84c0 : jmp 0xc8486
0x00000000000ca7b7 : jmp 0xca686
0x00000000000cd215 : jmp 0xcf9db
0x00000000000d51a1 : jmp 0xd519b
0x00000000000d7c7b : jmp 0xd7c41
0x00000000000ef6d1 : jmp 0xeee30
0x0000000000107974 : jmp 0xf10797d
0x00000000000467dd : jmp 0xfc6fef4
0x00000000000ff621 : jmp 0xff628
0x000000000013773a : jmp 0xffffffff80d66e52
0x00000000001379c1 : jmp 0xffffffff80d670d9
0x0000000000003186 : jmp 0xffffffff88c2d331
0x00000000000be4d8 : jmp 0xffffffffbece6e28
0x000000000012a9e2 : jmp 0xffffffffc0987ded
0x00000000000da5f2 : jmp 0xffffffffc296e703
0x0000000000139926 : jmp 0xffffffffc29d992b
0x00000000000abb73 : jmp 0xffffffffc30abb7c
0x0000000000048a91 : jmp 0xffffffffc31413e6
0x0000000000099d43 : jmp 0xffffffffc332e64d
0x00000000000ad66b : jmp 0xfffffffffffa5fbc
0x00000000000fe57b : jmp qword ptr [r8]
0x0000000000188253 : jmp qword ptr [rax + 0x20fff229]
0x0000000000195b13 : jmp qword ptr [rax + 0x20fffc58]
0x00000000001968a3 : jmp qword ptr [rax + rbp*2 + 0x5d340000]
0x0000000000187f7b : jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f63 : jmp qword ptr [rax - 0x2f000e02]
0x0000000000187d9f : jmp qword ptr [rax - 0x3f000e16]
0x0000000000187d7f : jmp qword ptr [rax - 0x3f000e17]
0x0000000000187d5f : jmp qword ptr [rax - 0x3f000e18]
0x0000000000187b23 : jmp qword ptr [rax - 0x47000f32]
0x000000000004606e : jmp qword ptr [rax]
0x000000000019a0db : jmp qword ptr [rbx + rax*8]
0x000000000005ec58 : jmp qword ptr [rbx + rcx*4 + 1]
0x0000000000002563 : jmp qword ptr [rbx]
0x0000000000188adf : jmp qword ptr [rcx]
0x000000000019b61b : jmp qword ptr [rdi + rdx*2 - 0x3cebfffe]
0x00000000000f4863 : jmp qword ptr [rdi]
0x0000000000196403 : jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000195ed3 : jmp qword ptr [rdx + 0x22fffc7e]
0x00000000001957df : jmp qword ptr [rdx + 0x32fffc60]
0x000000000019a09b : jmp qword ptr [rdx + rax*8 + 1]
0x00000000000f47e2 : jmp qword ptr [rdx]
0x0000000000039f01 : jmp qword ptr [rsi + 0xf]
0x000000000019a023 : jmp qword ptr [rsi + rdi*4 + 1]
0x00000000000dc67d : jmp qword ptr [rsi - 0x70]
0x000000000018870f : jmp qword ptr [rsi]
0x000000000019a41b : jmp qword ptr [rsp + rdx*8 + 1]
0x0000000000001b62 : jmp r10
0x0000000000150f7d : jmp r9
0x00000000000c00b6 : jmp rax
0x00000000001a144b : jmp rbx
0x000000000002be4a : jmp rcx
0x000000000006caa4 : jmp rdi
0x0000000000001b63 : jmp rdx
0x000000000002e8f4 : jmp rsi
0x0000000000002a71 : jmp rsp
0x0000000000102d2f : jne 0x102d04 ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102d3f ; call rbx
0x0000000000103108 : jne 0x1030f0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000105cfa : jne 0x105cf8 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000105d6a : jne 0x105d68 ; add rsp, 0x78 ; pop rbx ; pop rbp ; ret
0x0000000000112cee : jne 0x112d27 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114a05 : jne 0x114a19 ; cmp qword ptr [rdi], 0 ; je 0x114a21 ; ret
0x0000000000114a78 : jne 0x114a87 ; mov eax, 1 ; ret
0x0000000000114aa8 : jne 0x114ab4 ; xor eax, eax ; ret
0x0000000000114ad8 : jne 0x114ae4 ; xor eax, eax ; ret
0x0000000000114b08 : jne 0x114b14 ; xor eax, eax ; ret
0x0000000000114b38 : jne 0x114b44 ; xor eax, eax ; ret
0x0000000000114b68 : jne 0x114b74 ; xor eax, eax ; ret
0x0000000000114b98 : jne 0x114ba4 ; xor eax, eax ; ret
0x0000000000114bc8 : jne 0x114bd4 ; xor eax, eax ; ret
0x0000000000114bf8 : jne 0x114c04 ; xor eax, eax ; ret
0x0000000000114c28 : jne 0x114c34 ; xor eax, eax ; ret
0x0000000000114c58 : jne 0x114c64 ; xor eax, eax ; ret
0x0000000000114c88 : jne 0x114c94 ; xor eax, eax ; ret
0x0000000000114cb8 : jne 0x114cc4 ; xor eax, eax ; ret
0x0000000000114ce8 : jne 0x114cf4 ; xor eax, eax ; ret
0x0000000000114d18 : jne 0x114d24 ; xor eax, eax ; ret
0x0000000000114d48 : jne 0x114d54 ; xor eax, eax ; ret
0x0000000000114d78 : jne 0x114d84 ; xor eax, eax ; ret
0x0000000000114da8 : jne 0x114db4 ; xor eax, eax ; ret
0x0000000000114dd8 : jne 0x114de4 ; xor eax, eax ; ret
0x0000000000114e08 : jne 0x114e14 ; xor eax, eax ; ret
0x0000000000114e38 : jne 0x114e44 ; xor eax, eax ; ret
0x0000000000114e98 : jne 0x114ea4 ; xor eax, eax ; ret
0x0000000000114ec8 : jne 0x114ed4 ; xor eax, eax ; ret
0x0000000000114ef8 : jne 0x114f04 ; xor eax, eax ; ret
0x0000000000114f28 : jne 0x114f34 ; xor eax, eax ; ret
0x0000000000114f58 : jne 0x114f64 ; xor eax, eax ; ret
0x0000000000114f88 : jne 0x114f94 ; xor eax, eax ; ret
0x0000000000114fb8 : jne 0x114fc4 ; xor eax, eax ; ret
0x0000000000114fe8 : jne 0x114ff4 ; xor eax, eax ; ret
0x0000000000115018 : jne 0x115024 ; xor eax, eax ; ret
0x0000000000115062 : jne 0x115059 ; pop rdx ; pop r10 ; ret
0x0000000000115155 : jne 0x115163 ; ret
0x0000000000115364 : jne 0x115343 ; ret
0x000000000011539f : jne 0x115397 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000001154f7 : jne 0x115497 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000115b04 : jne 0x115aef ; lea rdi, qword ptr [rip - 0x16d] ; call rax
0x0000000000115b33 : jne 0x115b2c ; xor eax, eax ; leave ; ret
0x0000000000116534 : jne 0x1164de ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001178aa : jne 0x1178c0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000117b76 : jne 0x117b2a ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000011ab22 : jne 0x11ab36 ; jmp 0x11ab50
0x000000000011cbba : jne 0x11cbce ; jmp 0x11cbe8
0x000000000011fd43 : jne 0x11fd33 ; pop rbx ; ret
0x000000000011fe2b : jne 0x11fe3d ; jmp 0x11fe57
0x000000000012357c : jne 0x123557 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000123da4 : jne 0x123df4 ; mov eax, r8d ; ret
0x000000000012664d : jne 0x12659a ; ret
0x000000000012873c : jne 0x128742 ; ret
0x000000000012877c : jne 0x128770 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012d8ad : jne 0x12d8f8 ; mov dword ptr [rsi], 0 ; ret
0x000000000012e165 : jne 0x12e178 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000012e26d : jne 0x12e207 ; xor eax, eax ; pop rbx ; ret
0x0000000000133008 : jne 0x133012 ; ret
0x0000000000138ee7 : jne 0x138ed3 ; pop rbx ; ret
0x0000000000139168 : jne 0x139172 ; ret
0x000000000013aa63 : jne 0x13aa5a ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013c442 : jne 0x13c457 ; mov eax, 1 ; ret
0x000000000013c482 : jne 0x13c497 ; mov eax, 1 ; ret
0x0000000000140e6c : jne 0x140e7d ; xor eax, eax ; pop rbx ; ret
0x000000000014364b : jne 0x14362e ; add rsp, 0x48 ; ret
0x000000000014362d : jne 0x143660 ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000001436f5 : jne 0x143708 ; xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000143768 : jne 0x143786 ; add rsp, 0x38 ; ret
0x0000000000144378 : jne 0x144384 ; xor eax, eax ; ret
0x00000000001443a8 : jne 0x1443b4 ; xor eax, eax ; ret
0x00000000001443d8 : jne 0x1443e4 ; xor eax, eax ; ret
0x0000000000144408 : jne 0x144414 ; xor eax, eax ; ret
0x0000000000144438 : jne 0x144444 ; xor eax, eax ; ret
0x0000000000144468 : jne 0x144474 ; xor eax, eax ; ret
0x0000000000168831 : jne 0x168de6 ; ret
0x000000000016f9cd : jne 0x16f9f7 ; xor eax, eax ; ret
0x000000000016efc1 : jne 0x16f9fb ; xor eax, eax ; ret
0x000000000016efe9 : jne 0x16fa07 ; xor eax, eax ; ret
0x000000000017080d : jne 0x170837 ; xor eax, eax ; ret
0x00000000001705f1 : jne 0x17083b ; xor eax, eax ; ret
0x0000000000170841 : jne 0x17084a ; xor eax, eax ; ret
0x0000000000170617 : jne 0x17084e ; xor eax, eax ; ret
0x0000000000170955 : jne 0x1708e6 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000170927 : jne 0x1708e6 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170926 : jne 0x1708e7 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001720b4 : jne 0x1722c8 ; xor eax, eax ; ret
0x00000000001722b9 : jne 0x1722d9 ; xor eax, eax ; ret
0x0000000000172161 : jne 0x1722dd ; xor eax, eax ; ret
0x00000000001722d1 : jne 0x1722de ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001728e6 : jne 0x1728f4 ; xor eax, eax ; ret
0x00000000001727bd : jne 0x1728f6 ; ret
0x00000000001735af : jne 0x17359f ; mov rdi, r14 ; call 0x1f8af
0x00000000001740ad : jne 0x17409e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174100 : jne 0x1740e0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017423d : jne 0x17422d ; pop rbx ; ret
0x00000000001742e5 : jne 0x1742cb ; pop rbx ; ret
0x0000000000174458 : jne 0x174463 ; ret
0x0000000000174539 : jne 0x17452c ; pop rbx ; ret
0x0000000000189ea5 : jne 0x189e9e ; call rdi
0x0000000000189ef0 : jne 0x189f70 ; cmc ; jmp rsi
0x0000000000199215 : jne 0x19921e ; add byte ptr [rdx + rcx - 0xa], dl ; jmp rsp
0x000000000019e1e1 : jne 0x19e1ce ; jmp qword ptr [rcx]
0x00000000001a75e1 : jne 0x1a75d4 ; jmp qword ptr [rax]
0x0000000000033bd4 : jne 0x33bb2 ; ret
0x0000000000034ad0 : jne 0x34ae6 ; add rsp, 0x28 ; ret
0x0000000000034e0b : jne 0x34e1e ; add rsp, 0x28 ; ret
0x0000000000035308 : jne 0x35313 ; ret
0x0000000000003796 : jne 0x3774 ; ret 0x975
0x000000000003a61c : jne 0x3a5e8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003a6cb : jne 0x3a6d3 ; pop rbx ; ret
0x0000000000047058 : jne 0x47056 ; mov rax, rbx ; pop rbx ; ret
0x0000000000048061 : jne 0x48047 ; mov eax, 1 ; ret
0x0000000000048087 : jne 0x4807c ; xor eax, eax ; ret
0x00000000000481f9 : jne 0x481df ; mov eax, 1 ; ret
0x000000000004821f : jne 0x48214 ; xor eax, eax ; ret
0x00000000000484c7 : jne 0x484b6 ; mov rax, rdx ; ret
0x0000000000048b7f : jne 0x48b76 ; mov rax, rdx ; ret
0x000000000004a6f1 : jne 0x4a6dd ; mov rax, rsi ; ret
0x000000000004a775 : jne 0x4a755 ; mov rax, rsi ; ret
0x000000000006acc1 : jne 0x6acd6 ; mov rax, rbx ; pop rbx ; ret
0x0000000000071c01 : jne 0x71bf3 ; ret
0x000000000007469c : jne 0x746a3 ; pop rbx ; ret
0x0000000000078160 : jne 0x78176 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a395 : jne 0x7a3a2 ; ret
0x000000000007af41 : jne 0x7af33 ; ret
0x000000000007bc61 : jne 0x7bc78 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007bfd2 : jne 0x7bfbd ; pop rbx ; ret
0x000000000007c00c : jne 0x7c005 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007c846 : jne 0x7c83b ; ret
0x000000000007d8bf : jne 0x7d891 ; mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007d8d7 : jne 0x7d908 ; xor edi, edi ; call qword ptr [r15]
0x000000000007ef52 : jne 0x7ef66 ; jmp 0x7ef80
0x0000000000083b63 : jne 0x83b76 ; jmp 0x83b90
0x0000000000083f8c : jne 0x83f53 ; ret
0x000000000008873f : jne 0x886f5 ; xor eax, eax ; pop rbx ; ret
0x00000000000895d1 : jne 0x895c3 ; ret
0x000000000008967b : jne 0x89673 ; ret
0x0000000000089cfb : jne 0x89d0d ; lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008b8c3 : jne 0x8b8ce ; xor rax, rax ; ret
0x000000000008bb57 : jne 0x8bb69 ; lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008d80e : jne 0x8d7d4 ; add rsp, 8 ; ret
0x000000000008d831 : jne 0x8d846 ; add rsp, 8 ; ret
0x000000000008eb19 : jne 0x8eb75 ; xor rax, rax ; ret
0x000000000008ead9 : jne 0x8eb99 ; xor rax, rax ; ret
0x000000000008ebc1 : jne 0x8ebd4 ; lea rax, qword ptr [rip + 0x26] ; ret
0x000000000008f2ea : jne 0x8f2d3 ; ret
0x000000000008f4d3 : jne 0x8f3bf ; mov rax, rdi ; ret
0x000000000008f429 : jne 0x8f415 ; mov rax, rdi ; ret
0x000000000008f9e7 : jne 0x8f9f9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x000000000008fa4a : jne 0x8fa5c ; lea rax, qword ptr [rip + 0xd] ; ret
0x0000000000091cd7 : jne 0x91ce9 ; lea rax, qword ptr [rip + 0x80] ; ret
0x0000000000091d3a : jne 0x91d4c ; lea rax, qword ptr [rip + 0xd] ; ret
0x000000000009443c : jne 0x9444f ; lea rax, qword ptr [rip + 0xb3db] ; ret
0x00000000000945a8 : jne 0x94480 ; ret
0x00000000000944e9 : jne 0x944d3 ; ret
0x0000000000096a46 : jne 0x96a31 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096af0 : jne 0x96aff ; jmp 0x96ab9
0x0000000000097385 : jne 0x9737d ; xor eax, eax ; pop rbx ; ret
0x0000000000097357 : jne 0x9738d ; mov rax, rdi ; pop rbx ; ret
0x000000000009742d : jne 0x97424 ; xor eax, eax ; ret
0x000000000009751d : jne 0x97514 ; pop rbx ; pop rbp ; ret
0x000000000009d9c0 : jne 0x9d9b9 ; jmp 0x9d36c
0x000000000009e3fa : jne 0x9e3f3 ; jmp 0x9d3f4
0x000000000009eae6 : jne 0x9eadb ; ret
0x000000000009eb2a : jne 0x9eb1b ; ret
0x000000000009eb84 : jne 0x9eb63 ; ret
0x000000000009ec2a : jne 0x9ec18 ; cmp r8d, ecx ; je 0x9ec18 ; ret
0x000000000009ec69 : jne 0x9ec5c ; xor eax, eax ; ret
0x000000000009ecc2 : jne 0x9eca4 ; xor eax, eax ; ret
0x000000000009ed22 : jne 0x9ed15 ; mov qword ptr [rdx], rcx ; ret
0x000000000009eddb : jne 0x9edd0 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee59 : jne 0x9ee41 ; pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000009f08d : jne 0x9f118 ; xor eax, eax ; ret
0x000000000009f0ca : jne 0x9f144 ; xor eax, eax ; ret
0x000000000009f80c : jne 0x9f7f6 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000a657a : jne 0xa6e36 ; ret
0x00000000000a7c1d : jne 0xa8646 ; ret
0x00000000000aa161 : jne 0xaa152 ; ret
0x00000000000aa211 : jne 0xaa202 ; ret
0x00000000000aa381 : jne 0xaa376 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000aa4d1 : jne 0xaa4c6 ; sub rax, 1 ; ret
0x00000000000aae17 : jne 0xaae0b ; ret
0x00000000000abbe6 : jne 0xabc62 ; ret
0x00000000000abb0f : jne 0xabc66 ; ret
0x00000000000abaee : jne 0xabc68 ; xor eax, eax ; ret
0x00000000000abc91 : jne 0xabca4 ; lea rax, qword ptr [rip + 0xf596] ; ret
0x00000000000ac053 : jne 0xac01b ; ret
0x00000000000ac096 : jne 0xac089 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000ac169 : jne 0xac155 ; xor eax, eax ; ret
0x00000000000ac54b : jne 0xac5a6 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac623 : jne 0xac5f3 ; ret
0x00000000000ac60d : jne 0xac603 ; ret
0x00000000000ac6dc : jne 0xac6d4 ; xor eax, eax ; ret
0x00000000000ac738 : jne 0xac716 ; mov rax, rdi ; ret
0x00000000000ac861 : jne 0xac874 ; lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000ac915 : jne 0xac922 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000ac953 : jne 0xac94b ; ret
0x00000000000ada8b : jne 0xada46 ; mov rax, rdx ; ret
0x00000000000adacc : jne 0xadac3 ; ret
0x00000000000bb223 : jne 0xbb200 ; ret
0x00000000000bb254 : jne 0xbb24b ; ret
0x00000000000bfe19 : jne 0xbfe31 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000cd991 : jne 0xcd95e ; ret
0x00000000000cd9d7 : jne 0xcd962 ; mov eax, 0x7d00 ; ret
0x00000000000cda99 : jne 0xcdac2 ; ret
0x00000000000cdb03 : jne 0xcdac6 ; mov eax, 0x40 ; ret
0x00000000000cdba0 : jne 0xcdb7f ; xor eax, eax ; ret
0x00000000000cdb9c : jne 0xcdc18 ; add byte ptr [rax], al ; jne 0xcdb83 ; xor eax, eax ; ret
0x00000000000d15d0 : jne 0xd15b4 ; ret
0x00000000000d1608 : jne 0xd15cd ; mov eax, 1 ; ret
0x00000000000d1618 : jne 0xd15e3 ; mov eax, 1 ; ret
0x00000000000d16de : jne 0xd169f ; mov eax, 1 ; ret
0x00000000000d16f6 : jne 0xd16bc ; mov eax, 1 ; ret
0x00000000000d186e : jne 0xd1860 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d731d : jne 0xd726d ; pop rbx ; ret
0x00000000000d731c : jne 0xd726e ; pop rbx ; ret
0x00000000000d72ca : jne 0xd72c9 ; xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd726f ; pop rbx ; ret
0x00000000000d7c79 : jne 0xd7c53 ; jmp 0xd7c43
0x00000000000ef8eb : jne 0xef8d9 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f7811 : jne 0xf7899 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000fb69f : jne 0xfb646 ; mov edi, ebp ; call 0xf78b6
0x00000000000fe0c1 : jne 0xfe095 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe282 : jne 0xfe255 ; xor eax, eax ; pop rbx ; ret
0x000000000016f27e : jno 0x16f28d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000197dd9 : jno 0x197dcb ; jmp rsp
0x000000000019cc91 : jno 0x19cc92 ; jmp qword ptr [rdi]
0x000000000019df31 : jno 0x19df1e ; call qword ptr [rcx]
0x000000000019df89 : jno 0x19df76 ; call qword ptr [rax]
0x00000000001a0ea6 : jno 0x1a0eb4 ; ret
0x00000000001a0ea6 : jno 0x1a0eba ; ret
0x00000000001a2c4d : jno 0x1a2c55 ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x00000000001a4569 : jno 0x1a455a ; call qword ptr [rsi]
0x00000000001b0bc9 : jno 0x1b0bc2 ; jmp qword ptr [rcx]
0x00000000001b0bf9 : jno 0x1b0bf2 ; jmp qword ptr [rcx]
0x00000000001b0c11 : jno 0x1b0c0a ; jmp qword ptr [rcx]
0x00000000001b2c05 : jno 0x1b2c0e ; add byte ptr [rax], bl ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2c1d : jno 0x1b2c26 ; add byte ptr [rax], dh ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000021d7 : jno 0x2224 ; ret 0x1dd4
0x0000000000003957 : jno 0x39a1 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000048984 : jno 0x489d6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000071271 : jno 0x7127f ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000008f199 : jno 0x8f1ad ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f198 : jno 0x8f1ae ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f199 : jno 0x8f1af ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000008f198 : jno 0x8f1b0 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000009fae0 : jno 0x9fae9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009fd1a : jno 0x9fd23 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009fe81 : jno 0x9fe92 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009ffe6 : jno 0xa006a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a0233 : jno 0xa023c ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a046d : jno 0xa0476 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a05d4 : jno 0xa05e5 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a0739 : jno 0xa07bd ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000a0980 : jno 0xa0989 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000000a0bba : jno 0xa0bc3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000000a0d21 : jno 0xa0d32 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000000a0e86 : jno 0xa0f0a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000000ac913 : jno 0xac922 ; jne 0xac924 ; mov dword ptr [r9 + 8], esi ; ret
0x00000000000ac919 : jno 0xac926 ; ret
0x00000000000c1585 : jno 0xc1512 ; ret 0xe283
0x00000000000c1612 : jno 0xc159f ; ret 0xe283
0x00000000000c16da : jno 0xc1667 ; ret 0xe283
0x00000000000c174a : jno 0xc16d7 ; ret 0xe283
0x00000000000c1a83 : jno 0xc1a10 ; ret 0xe283
0x00000000000c1afa : jno 0xc1a87 ; ret 0xe283
0x00000000000c1d4a : jno 0xc1cd7 ; ret 0xe283
0x00000000000c1dda : jno 0xc1d67 ; ret 0xe283
0x00000000000c2655 : jno 0xc264f ; ret
0x00000000000c2bc9 : jno 0xc2bc3 ; ret
0x00000000000c2c18 : jno 0xc2c12 ; ret
0x00000000000c2d03 : jno 0xc2c90 ; ret 0xe283
0x00000000000c2e9b : jno 0xc2e28 ; ret 0xe283
0x00000000000c2f2e : jno 0xc2ebb ; ret 0xe283
0x00000000000e2fd8 : jno 0xe2fde ; dec dword ptr [rax - 0x77] ; ret
0x000000000011fd3e : jnp 0x11fd90 ; test rdi, rdi ; jne 0x11fd38 ; pop rbx ; ret
0x0000000000134fd3 : jnp 0x13503f ; call rax
0x00000000001359f3 : jnp 0x135a4f ; call rax
0x0000000000183c65 : jnp 0x183c22 ; ret
0x0000000000189ef1 : jnp 0x189eea ; jmp rsi
0x0000000000189eed : jnp 0x189eea ; push qword ptr [rbp + 0x7b] ; cmc ; jmp rsi
0x0000000000189eec : jnp 0x189f70 ; cmc ; push qword ptr [rbp + 0x7b] ; cmc ; jmp rsi
0x000000000018a945 : jnp 0x18a93f ; call rdx
0x0000000000195eed : jnp 0x195eed ; call qword ptr [rdx]
0x0000000000195ef1 : jnp 0x195ef5 ; call qword ptr [rdx + 0x12fffc7a]
0x000000000019602d : jnp 0x19602d ; jmp rax
0x000000000019606d : jnp 0x19606d ; call rax
0x000000000019934d : jnp 0x199356 ; add byte ptr [rsp - 0xa], al ; call rsp
0x000000000019c1c1 : jnp 0x19c1c2 ; jmp qword ptr [rdx]
0x000000000019c1c0 : jnp 0x19c1c3 ; jmp qword ptr [rdx]
0x00000000001a36e5 : jnp 0x1a36ed ; add al, ch ; cmp al, 0xed ; jmp qword ptr [rdi]
0x00000000001b11a1 : jnp 0x1b119a ; jmp qword ptr [rcx]
0x00000000001b11b9 : jnp 0x1b11b2 ; jmp qword ptr [rcx]
0x00000000001b11d1 : jnp 0x1b11ca ; jmp qword ptr [rcx]
0x00000000001b11e9 : jnp 0x1b11e2 ; jmp qword ptr [rcx]
0x0000000000047055 : jnp 0x47061 ; add byte ptr [rbp - 0xa], dh ; mov rax, rbx ; pop rbx ; ret
0x00000000000fc708 : jnp 0x481beb5b ; add esp, 0x18 ; ret
0x00000000000f4b31 : jnp 0xf4b8b ; stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000fe421 : jnp 0xfe49e ; sub al, 0 ; add rsp, 8 ; ret
0x0000000000127fa5 : jns 0x127fb1 ; add al, ch ; ret
0x000000000012800d : jns 0x12801a ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000182d6e : jns 0x182d04 ; ret 0xf869
0x0000000000182d6d : jns 0x182d05 ; ret 0xf869
0x000000000018517e : jns 0x1851d5 ; jmp 0x185116
0x0000000000194f21 : jns 0x194f24 ; call qword ptr [rax + 0x10fffb7a]
0x0000000000195efd : jns 0x195efd ; call qword ptr [rdx]
0x000000000019603d : jns 0x19603d ; jmp rax
0x000000000019607d : jns 0x19607d ; call rax
0x0000000000001b2d : jns 0x1b38 ; ret
0x00000000001bc331 : jns 0x1bc32d ; call qword ptr [rcx]
0x0000000000020490 : jns 0x20380 ; jmp 0x20461
0x0000000000029ae4 : jns 0x29d4cceb ; ret
0x0000000000002be3 : jns 0x2bb1 ; clc ; ret
0x0000000000003267 : jns 0x3242 ; ret 0x5a51
0x00000000000038ef : jns 0x3942 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000005c4f7 : jns 0x5c534 ; add byte ptr [rax - 0x39], cl ; ret 0xfffe
0x000000000009fae7 : jns 0x9faea ; ret
0x000000000009fd21 : jns 0x9fd24 ; ret
0x000000000009fe88 : jns 0x9fe93 ; ret
0x00000000000a023a : jns 0xa023d ; ret
0x00000000000a0474 : jns 0xa0477 ; ret
0x00000000000a05db : jns 0xa05e6 ; ret
0x00000000000a0987 : jns 0xa098a ; ret
0x00000000000a0bc1 : jns 0xa0bc4 ; ret
0x00000000000a0d28 : jns 0xa0d33 ; ret
0x00000000000d7c76 : jns 0xd7c86 ; add dh, byte ptr [rbp - 0x2b] ; jmp 0xd7c46
0x00000000000fdc24 : jns 0xfdc32 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000137d20 : jns 0xffffffffc496c607 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a9c46 : jns 0xffffffffed3a9fac ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9ca8 : jns 0xffffffffed3aa40e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9cc8 : jns 0xffffffffed3aa52e ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000133313 : jo 0x133379 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000136e22 : jo 0x136e81 ; ret
0x0000000000183de4 : jo 0x183e5e ; mov ebp, 0xfb67d10d ; ret
0x0000000000187dcc : jo 0x187dbd ; int1 ; jmp qword ptr [rax]
0x0000000000187f60 : jo 0x187f67 ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x0000000000187f78 : jo 0x187f80 ; int1 ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000188e9c : jo 0x188e7d ; call rax
0x0000000000194df0 : jo 0x194dff ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000194e50 : jo 0x194e73 ; sti ; call qword ptr [rax]
0x0000000000194e70 : jo 0x194ea0 ; sti ; call qword ptr [rax]
0x0000000000194f0c : jo 0x194f6c ; sti ; call qword ptr [rax]
0x0000000000195270 : jo 0x195250 ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x00000000001952d4 : jo 0x1952b5 ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x00000000001952f0 : jo 0x1952cb ; sti ; jmp qword ptr [rax]
0x00000000001954ec : jo 0x1954e6 ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000195540 : jo 0x195541 ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000195980 : jo 0x1959d8 ; cld ; jmp rax
0x0000000000195b84 : jo 0x195bdb ; cld ; jmp rax
0x0000000000195e4c : jo 0x195dd2 ; cld ; call qword ptr [rax]
0x0000000000196358 : jo 0x196301 ; cld ; jmp rax
0x0000000000196544 : jo 0x1964e7 ; cld ; jmp rax
0x00000000001a2acb : jo 0x1a2ad6 ; mov ebp, 0x41380e0a ; ret
0x00000000001a2c50 : jo 0x1a2c6f ; in eax, dx ; call rdx
0x00000000001a61f0 : jo 0x1a6229 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a6639 : jo 0x1a662b ; jmp qword ptr [rdx]
0x00000000001a92e0 : jo 0x1a9309 ; int1 ; jmp rcx
0x00000000001ac0b8 : jo 0x1ac0c6 ; ret
0x00000000001ace10 : jo 0x1acdef ; jmp qword ptr [rcx]
0x00000000001ad7f0 : jo 0x1ad77c ; hlt ; call qword ptr [rax]
0x00000000001ae5d0 : jo 0x1ae5a6 ; hlt ; jmp rcx
0x00000000001b0ac1 : jo 0x1b0aba ; jmp qword ptr [rcx]
0x00000000001b0ad9 : jo 0x1b0ad2 ; jmp qword ptr [rcx]
0x00000000001b0af1 : jo 0x1b0aea ; jmp qword ptr [rcx]
0x00000000001b0b39 : jo 0x1b0b32 ; jmp qword ptr [rcx]
0x00000000001b0b51 : jo 0x1b0b4a ; jmp qword ptr [rcx]
0x00000000001b2b15 : jo 0x1b2b1e ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b45 : jo 0x1b2b4e ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b44 : jo 0x1b2b4f ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2b75 : jo 0x1b2b7e ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x00000000001b2bbd : jo 0x1b2bc6 ; add al, dl ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2bd5 : jo 0x1b2bde ; add al, ch ; and dh, dh ; jmp qword ptr [rsi]
0x00000000001b2bed : jo 0x1b2bf6 ; add byte ptr [rax], al ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001bb300 : jo 0x1bb29a ; sti ; jmp qword ptr [rdx]
0x00000000000292a6 : jo 0x292be ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002e0b3 : jo 0x2e104 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0b2 : jo 0x2e105 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000041923 : jo 0x418b7 ; sar dword ptr [rdx + 1], -0x77 ; ret
0x0000000000045096 : jo 0x450a1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000060dbc : jo 0x60d49 ; ret
0x0000000000071c7a : jo 0x71c92 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075ada : jo 0x75a67 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000075ad9 : jo 0x75a68 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000079834 : jo 0x79885 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ad294 : jo 0xad2e2 ; mov edi, ebp ; call rbx
0x00000000000ad81e : jo 0xad870 ; mov edi, esp ; call rbx
0x00000000000ba57c : jo 0xba590 ; xchg eax, ebp ; ret 0x8b4c
0x00000000000c012a : jo 0xc0133 ; jmp 0xbff1f
0x00000000000e2fd5 : jo 0xe2fc7 ; push rbp ; jno 0xe2fe1 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e3e38 : jo 0xe3e2a ; loop 0xe3ebc ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000001132e5 : jp 0x11333c ; mov rsi, rdx ; call rax
0x000000000012e78d : jp 0x12e7ed ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001322f2 : jp 0x1322fe ; ret
0x0000000000135062 : jp 0x13506e ; ret
0x000000000013507a : jp 0x135086 ; ret
0x00000000001358b2 : jp 0x1358be ; ret
0x00000000001358ca : jp 0x1358d6 ; ret
0x00000000001358fa : jp 0x135906 ; ret
0x000000000014da36 : jp 0x14da2a ; ret
0x000000000014da99 : jp 0x14da8d ; ret
0x000000000014da2f : jp 0x14dab9 ; jb 0x14da1c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014da34 : jp 0x14dab9 ; jp 0x14da2c ; ret
0x000000000014df26 : jp 0x14df1a ; ret
0x000000000014df89 : jp 0x14df7d ; ret
0x000000000014df1f : jp 0x14dfa9 ; jb 0x14df0c ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014df24 : jp 0x14dfa9 ; jp 0x14df1c ; ret
0x000000000014e2c9 : jp 0x14e2bd ; ret
0x000000000014e329 : jp 0x14e31d ; ret
0x000000000014e2c2 : jp 0x14e34c ; jb 0x14e2af ; vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014e2c7 : jp 0x14e34c ; jp 0x14e2bf ; ret
0x0000000000188e00 : jp 0x188dd8 ; jmp qword ptr [rcx]
0x000000000018aa05 : jp 0x18a9ff ; call rsp
0x0000000000194f25 : jp 0x194f24 ; call qword ptr [rax]
0x0000000000195e0c : jp 0x195d92 ; cld ; jmp qword ptr [rax]
0x0000000000195ef5 : jp 0x195ef5 ; call qword ptr [rdx]
0x0000000000195ef9 : jp 0x195efd ; call qword ptr [rdx + 0x12fffc79]
0x0000000000196035 : jp 0x196035 ; jmp rax
0x0000000000196075 : jp 0x196075 ; call rax
0x0000000000196a41 : jp 0x196a2e ; jmp rsp
0x000000000019e3c9 : jp 0x19e3b6 ; jmp qword ptr [rcx]
0x00000000001b1111 : jp 0x1b110a ; jmp qword ptr [rcx]
0x00000000001b1129 : jp 0x1b1122 ; jmp qword ptr [rcx]
0x00000000001b1141 : jp 0x1b113a ; jmp qword ptr [rcx]
0x00000000001b1159 : jp 0x1b1152 ; jmp qword ptr [rcx]
0x0000000000023653 : jp 0x2366d ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a8
0x0000000000002561 : jp 0x2545 ; jmp qword ptr [rbx]
0x0000000000002560 : jp 0x2546 ; jmp qword ptr [rbx]
0x000000000002cb28 : jp 0x2cb6b ; jae 0x2cb48 ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000003956 : jp 0x39d0 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000072fe9 : jp 0x7302e ; jmp 0x72fb3
0x000000000007f42d : jp 0x7f42f ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000008f3b5 : jp 0x8f3af ; ret 0x7401
0x00000000000bb641 : jp 0xbb656 ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000bf0b2 : jp 0xbf0e9 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff57b : jp 0xff5b0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ff5af : jp 0xff5e5 ; add byte ptr [rax - 0x76b7ffc8], al ; ret
0x00000000001019e9 : jrcxz 0x101a4a ; sub al, 0 ; add rsp, 8 ; ret
0x00000000001150b3 : jrcxz 0x115078 ; cmp r11d, 0xa ; je 0x1150c4 ; ret
0x000000000013a74f : jrcxz 0x13a794 ; call rsi
0x000000000015ac1a : jrcxz 0x15ac15 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ac19 : jrcxz 0x15ac16 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d6ea : jrcxz 0x15d6e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d6e9 : jrcxz 0x15d6e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016020a : jrcxz 0x160205 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160209 : jrcxz 0x160206 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000182bc5 : jrcxz 0x182c1f ; ret
0x0000000000195229 : jrcxz 0x19522c ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195228 : jrcxz 0x19522d ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195249 : jrcxz 0x195248 ; call qword ptr [rax]
0x00000000001952ed : jrcxz 0x1952f0 ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019a099 : jrcxz 0x19a096 ; jmp qword ptr [rdx + rax*8 + 1]
0x000000000019a0b9 : jrcxz 0x19a0b6 ; inc esp ; ret 1
0x00000000001a7c41 : jrcxz 0x1a7c34 ; call rsp
0x00000000001aebb1 : jrcxz 0x1aeba9 ; call qword ptr [rsi]
0x00000000001aebc9 : jrcxz 0x1aebc1 ; jmp qword ptr [rcx]
0x00000000001b5ac1 : jrcxz 0x1b5abb ; jmp qword ptr [rdi]
0x000000000004edde : jrcxz 0x4edee ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000050ebc : jrcxz 0x50f35 ; ret 0x8945
0x0000000000053b2e : jrcxz 0x53ba7 ; ret
0x00000000000567c8 : jrcxz 0x567c2 ; ret 0xf40
0x00000000000c47cf : jrcxz 0xc47e8 ; test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x00000000000d0c4e : jrcxz 0xd0c3b ; ret 0xfffb
0x00000000000d7300 : jrcxz 0xd730f ; je 0xd729f ; pop rbx ; ret
0x00000000000ef8ec : jrcxz 0xef93e ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000102b2c : js 0x102b02 ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000105cff : js 0x105d5f ; pop rbp ; ret
0x0000000000105d6f : js 0x105dcf ; pop rbp ; ret
0x000000000010a458 : js 0x10a3e4 ; loopne 0x10a46b ; movzx eax, ax ; ret
0x000000000010a588 : js 0x10a511 ; loopne 0x10a591 ; ret
0x000000000010a618 : js 0x10a5a4 ; loopne 0x10a625 ; movzx eax, ax ; ret
0x000000000010a918 : js 0x10a8a4 ; loopne 0x10a927 ; movzx eax, ax ; ret
0x000000000010adf1 : js 0x10ad7d ; loopne 0x10ae04 ; movzx eax, ax ; ret
0x000000000010aef1 : js 0x10ae7a ; loopne 0x10aefa ; ret
0x000000000010af71 : js 0x10aefd ; loopne 0x10af7e ; movzx eax, ax ; ret
0x000000000010b1f1 : js 0x10b17d ; loopne 0x10b200 ; movzx eax, ax ; ret
0x0000000000112384 : js 0x1123bf ; mov edx, 5 ; call 0x2e629
0x0000000000119374 : js 0x119389 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000001193f4 : js 0x119407 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000140c63 : js 0x140c78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000195e85 : js 0x195e85 ; jmp qword ptr [rax]
0x0000000000195fc5 : js 0x195fc5 ; call rsp
0x0000000000195fc4 : js 0x195fc6 ; call rsp
0x0000000000196991 : js 0x19697e ; call rsp
0x000000000019c2f9 : js 0x19c2e5 ; call qword ptr [rax]
0x000000000019c311 : js 0x19c2fd ; jmp qword ptr [rcx]
0x00000000001a6408 : js 0x1a645b ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6ab8 : js 0x1a6abc ; stc ; call qword ptr [rax]
0x00000000001a6bd8 : js 0x1a6b8e ; out dx, al ; call qword ptr [rax]
0x00000000001adee8 : js 0x1ade88 ; hlt ; jmp qword ptr [rcx]
0x00000000001aea38 : js 0x1aea1c ; hlt ; call qword ptr [rbx]
0x00000000001aedb8 : js 0x1aeda4 ; hlt ; jmp qword ptr [rcx]
0x00000000001aee48 : js 0x1aee35 ; hlt ; jmp qword ptr [rcx]
0x00000000001b0b38 : js 0x1b0bad ; cmc ; jmp qword ptr [rcx]
0x00000000001b0fa9 : js 0x1b0fa2 ; jmp qword ptr [rbx]
0x00000000001b0fa8 : js 0x1b0fa3 ; jmp qword ptr [rbx]
0x00000000001baf68 : js 0x1baf05 ; sti ; jmp qword ptr [rdx]
0x0000000000025b94 : js 0x25b9e ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc985
0x000000000002dd11 : js 0x2dc9d ; loopne 0x2dd24 ; movzx eax, ax ; ret
0x000000000002dd51 : js 0x2dcdd ; loopne 0x2dd5e ; movzx eax, ax ; ret
0x000000000002ddf1 : js 0x2dd7d ; loopne 0x2de00 ; movzx eax, ax ; ret
0x000000000002ded1 : js 0x2de5a ; loopne 0x2deda ; ret
0x000000000002df4a : js 0x2ded3 ; loopne 0x2df53 ; ret
0x000000000002df5a : js 0x2dee6 ; loopne 0x2df6d ; movzx eax, ax ; ret
0x000000000002df9a : js 0x2df26 ; loopne 0x2dfa7 ; movzx eax, ax ; ret
0x000000000002e03a : js 0x2dfc6 ; loopne 0x2e049 ; movzx eax, ax ; ret
0x000000000002e0c3 : js 0x2e114 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c2 : js 0x2e115 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000002f99 : js 0x2f4f ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000346be : js 0x346f0 ; call 0x1f8b0
0x0000000000075add : js 0x75aeb ; ret
0x0000000000085818 : js 0x85823 ; ret
0x0000000000088374 : js 0x883f0 ; stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000cdbf7 : js 0xcdc03 ; ret
0x00000000000e1a46 : js 0xe1a59 ; movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x00000000000e3e3b : js 0xe3e3c ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000e5108 : js 0xe511b ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000f5eec : js 0xf5f3e ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f6889 : js 0xf68db ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000fcebb : js 0xfce8d ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ff1e2 : js 0xff1f5 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000ff895 : js 0xff8cc ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a9be8 : js 0xffffffffed3a9e4e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c16 : js 0xffffffffed3aa07c ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c68 : js 0xffffffffed3aa4ce ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000024c23 : lahf ; add al, byte ptr [rax] ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x00000000000ffd58 : lahf ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000196381 : lahf ; cld ; call rax
0x0000000000196401 : lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x0000000000196541 : lahf ; cld ; push qword ptr [rax - 0x62] ; cld ; jmp rax
0x00000000001852a3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000fb6a0 : lahf ; mov edi, ebp ; call 0xf78b5
0x0000000000116535 : lahf ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000014b68d : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000004c5b6 : lahf ; ret
0x000000000007371e : lahf ; ret 0x3841
0x0000000000102e6e : lahf ; ret 0x3845
0x00000000000d5b6a : lahf ; ret 0x82eb
0x0000000000182afd : lahf ; ret 0x871e
0x000000000011d76f : lahf ; ret 0xc2e9
0x000000000005fc5c : lahf ; ret 0xd129
0x0000000000061f72 : lahf ; ret 0xd329
0x000000000005febc : lahf ; ret 0xd629
0x0000000000101b33 : lahf ; ret 0xe883
0x00000000000aab99 : lahf ; ret 0xea81
0x000000000014bd1d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000101fb7 : lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001951cf : lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187c9b : lcall ptr [rax] ; ret 0xfffd
0x00000000001231c5 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000011d0e5 : lcall ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000070b85 : lcall ptr [rbp + 0x41] ; pop rsp ; ret
0x0000000000189abb : lcall ptr [rbp + 6] ; cmc ; jmp qword ptr [rax]
0x0000000000189ab7 : lcall ptr [rbp + 6] ; cmc ; lcall ptr [rbp + 6] ; cmc ; jmp qword ptr [rax]
0x00000000001972b3 : lcall ptr [rbp + rbx*4 + 0x44640000] ; jmp 0x1972c3
0x00000000001886d7 : lcall ptr [rbp - 0x11000c84] ; test esi, ebx ; jmp qword ptr [rax]
0x0000000000188adb : lcall ptr [rbp - 0x51] ; jmp qword ptr [rcx]
0x000000000001fb73 : lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000073651 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000029e13 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000b65d1 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x0000000000039cf2 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000070450 : lcall ptr [rbx + 0x5d] ; ret
0x0000000000199eeb : lcall ptr [rbx + rsi*4 + 1] ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x00000000000865df : lcall ptr [rbx - 0x3d] ; mov eax, 0xfffffffe ; pop rbx ; ret
0x0000000000197cab : lcall ptr [rcx + 0x5e840000] ; out dx, al ; jmp rsp
0x00000000001959cb : lcall ptr [rcx + rdx*2 + 0x512cfffc] ; cld ; call rdx
0x00000000001892eb : lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x0000000000189223 : lcall ptr [rcx] ; push rbx ; hlt ; jmp qword ptr [rbx]
0x000000000011180a : lcall ptr [rdi + 0xf] ; xchg eax, esp ; ret 0x840
0x0000000000189fbb : lcall ptr [rdi + rax*8 - 0xb] ; call qword ptr [rsi - 0x1d000a3d]
0x000000000019776b : lcall ptr [rdi + rdi*4 - 0x447c0000] ; in eax, dx ; call rsp
0x000000000019b29b : lcall ptr [rdx + rax*2 + 0x53340002] ; cli ; call rsp
0x000000000019749b : lcall ptr [rdx + rbp*4 + 0x51b40000] ; in eax, dx ; jmp rsp
0x00000000001874b3 : lcall ptr [rsi + rcx*2 + 0x4dd4ffee] ; out dx, al ; call rsp
0x000000000018875f : lcall ptr [rsi + rdi*2 - 0x7ed8000d] ; jmp qword ptr [rsi]
0x000000000019b5fb : lcall ptr [rsi + rdx*2 - 0x40bbfffe] ; cli ; jmp rsp
0x0000000000189067 : lcall ptr [rsi - 0x24] ; push qword ptr [rdi] ; fcomi st(3) ; jmp qword ptr [rcx]
0x0000000000189be7 : lcall ptr [rsi] ; cmc ; inc dword ptr [rsi] ; cmc ; jmp rsp
0x00000000001882c3 : lcall ptr [rsi] ; sub dh, dl ; ljmp ptr [rcx + rbp] ; call qword ptr [rdi]
0x00000000001981d3 : lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x000000000019879b : lcall ptr [rsp + rbp + 0x52040001] ; call rsp
0x000000000019ae63 : lcall ptr [rsp - 0x2f0bfffe] ; stc ; call rsp
0x000000000015b2a6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000079944 : lds r11d, ptr [r11 + 0x5d] ; pop r12 ; ret
0x0000000000072d6f : lea eax, dword ptr [r8 - 1] ; ret
0x0000000000123ccc : lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000bb1e8 : lea eax, dword ptr [rax + rax - 1] ; ret
0x000000000008eb44 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb54 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000009f104 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008eb24 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x00000000000c7982 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000072d70 : lea eax, dword ptr [rax - 1] ; ret
0x0000000000123e50 : lea eax, dword ptr [rbp + rbx] ; pop rbx ; pop rbp ; ret
0x000000000012e24b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000ac9e8 : lea eax, dword ptr [rbx - 4] ; pop rbx ; ret
0x00000000001b261c : lea eax, dword ptr [rbx] ; mov es, word ptr [rdx] ; add ah, bh ; ret
0x0000000000123ccd : lea eax, dword ptr [rcx + rax + 2] ; pop rbx ; ret
0x000000000008d5ed : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000000aa384 : lea eax, dword ptr [rcx - 1] ; ret
0x00000000000a74ac : lea eax, dword ptr [rdi + 0x10] ; ret
0x00000000000a74c1 : lea eax, dword ptr [rdi + 0x11] ; ret
0x00000000000a74df : lea eax, dword ptr [rdi + 0x12] ; ret
0x00000000000a74ff : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000000a7522 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a7541 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a7561 : lea eax, dword ptr [rdi + 0x16] ; ret
0x00000000000a7581 : lea eax, dword ptr [rdi + 0x17] ; ret
0x00000000000a75a4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x00000000000a75c9 : lea eax, dword ptr [rdi + 0x19] ; ret
0x00000000000a75e7 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x00000000000a7607 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000000a7623 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000000a7643 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000000a7663 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x00000000000a7683 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a84d3 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a8739 : lea eax, dword ptr [rdi + 0x40] ; ret
0x00000000000a73fd : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000000a741d : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000000a743f : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000000a745f : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000000a747f : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000000a7499 : lea eax, dword ptr [rdi + 0xf] ; ret
0x000000000009ea64 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000009ea78 : lea eax, dword ptr [rdi + 2] ; ret
0x000000000009ea83 : lea eax, dword ptr [rdi + 3] ; ret
0x000000000009ea97 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000009eaa7 : lea eax, dword ptr [rdi + 5] ; ret
0x000000000009eab7 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a73ab : lea eax, dword ptr [rdi + 6] ; ret
0x000000000009ea57 : lea eax, dword ptr [rdi + 7] ; ret
0x00000000000a73ca : lea eax, dword ptr [rdi + 8] ; ret
0x0000000000122fe0 : lea eax, dword ptr [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000a73df : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008eb79 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb89 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008ea73 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a7 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000014a62a : lea eax, dword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x0000000000124150 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000002da65 : lea eax, dword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008d4e9 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000000ac43e : lea eax, dword ptr [rdi - 0x10] ; ret
0x00000000000ac5a1 : lea eax, dword ptr [rdi - 0xc] ; ret
0x00000000000ac5c1 : lea eax, dword ptr [rdi - 4] ; ret
0x00000000000ac5b1 : lea eax, dword ptr [rdi - 8] ; ret
0x00000000000a7333 : lea eax, dword ptr [rdi] ; ret
0x00000000001bc6d6 : lea eax, dword ptr [rdi] ; rol byte ptr [rcx], cl ; ret 0xa
0x000000000016b08d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000016b0ad : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000016b0cf : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000016b0ef : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000016b10f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000016af9f : lea eax, dword ptr [rdx + 0xf] ; ret
0x000000000016afc7 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000016afdd : lea eax, dword ptr [rdx + 2] ; ret
0x000000000016aff5 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000016b00b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000016b01d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000016b03b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000016af47 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000016b04d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000016b06d : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000072d5e : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000aac6c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000016afb5 : lea eax, dword ptr [rdx] ; ret
0x000000000008bb5a : lea eax, dword ptr [rip + 0x10] ; ret
0x000000000008f350 : lea eax, dword ptr [rip + 0x10e4a] ; ret
0x000000000002cb39 : lea eax, dword ptr [rip + 0x15ffa6] ; ret
0x0000000000020931 : lea eax, dword ptr [rip + 0x16bcf4] ; ret
0x0000000000020941 : lea eax, dword ptr [rip + 0x16dc23] ; ret
0x000000000008bb0e : lea eax, dword ptr [rip + 0x1713c] ; ret
0x00000000000898ae : lea eax, dword ptr [rip + 0x1777c] ; ret
0x000000000008f1ea : lea eax, dword ptr [rip + 0x1b330] ; ret
0x000000000008e646 : lea eax, dword ptr [rip + 0x1ba24] ; cmove rax, rdx ; ret
0x000000000008ebc4 : lea eax, dword ptr [rip + 0x26] ; ret
0x000000000012b979 : lea eax, dword ptr [rip + 0x29d3c1] ; pop rbx ; ret
0x000000000012b941 : lea eax, dword ptr [rip + 0x29d3f9] ; pop rbx ; ret
0x000000000012b882 : lea eax, dword ptr [rip + 0x29d4b8] ; pop rbx ; ret
0x0000000000101f2b : lea eax, dword ptr [rip + 0x2c532f] ; pop rbp ; pop r12 ; ret
0x00000000000fe2ee : lea eax, dword ptr [rip + 0x2c8ca4] ; ret
0x00000000000fe12e : lea eax, dword ptr [rip + 0x2c8e64] ; ret
0x000000000006ac84 : lea eax, dword ptr [rip + 0x35ba76] ; pop rbx ; pop rbp ; ret
0x0000000000116231 : lea eax, dword ptr [rip + 0x37c19] ; ret
0x0000000000116321 : lea eax, dword ptr [rip + 0x37ec9] ; ret
0x000000000012b0b1 : lea eax, dword ptr [rip + 0x61a2e] ; ret
0x000000000008f9ea : lea eax, dword ptr [rip + 0x80] ; ret
0x000000000009443f : lea eax, dword ptr [rip + 0xb3db] ; ret
0x0000000000094410 : lea eax, dword ptr [rip + 0xb63a] ; ret
0x0000000000094453 : lea eax, dword ptr [rip + 0xbcb07] ; ret
0x000000000008da9b : lea eax, dword ptr [rip + 0xbcd7f] ; ret
0x000000000008d70b : lea eax, dword ptr [rip + 0xbcfdf] ; ret
0x000000000008f391 : lea eax, dword ptr [rip + 0xbee69] ; ret
0x000000000008b29b : lea eax, dword ptr [rip + 0xbf30f] ; ret
0x00000000000abc9c : lea eax, dword ptr [rip + 0xc20ce] ; ret
0x00000000000ac878 : lea eax, dword ptr [rip + 0xc31b2] ; ret
0x00000000000ac880 : lea eax, dword ptr [rip + 0xc5a6a] ; ret
0x0000000000089cfe : lea eax, dword ptr [rip + 0xc] ; ret
0x000000000008d3ee : lea eax, dword ptr [rip + 0xd999c] ; ret
0x000000000008fa4d : lea eax, dword ptr [rip + 0xd] ; ret
0x000000000008f87e : lea eax, dword ptr [rip + 0xda08c] ; ret
0x000000000008b18e : lea eax, dword ptr [rip + 0xda44c] ; ret
0x000000000008f99e : lea eax, dword ptr [rip + 0xdb77c] ; ret
0x000000000008ebd8 : lea eax, dword ptr [rip + 0xdf812] ; ret
0x000000000008ebe0 : lea eax, dword ptr [rip + 0xe1f9a] ; ret
0x0000000000089a9b : lea eax, dword ptr [rip + 0xe6dbf] ; ret
0x00000000000ac864 : lea eax, dword ptr [rip + 0xe916] ; ret
0x00000000000abc94 : lea eax, dword ptr [rip + 0xf596] ; ret
0x00000000000569f6 : lea eax, dword ptr [rip - 0x2fa] ; add rax, rdx ; jmp rax
0x00000000000f6a36 : lea eax, dword ptr [rip - 0x4c] ; cmove rax, rdx ; ret
0x000000000011636a : lea eax, dword ptr [rip - 0x6be60] ; ret
0x00000000001162e0 : lea eax, dword ptr [rip - 0x76156] ; ret
0x00000000001161f0 : lea eax, dword ptr [rip - 0x767b6] ; ret
0x0000000000123fae : lea eax, dword ptr [rsi + 8] ; ret
0x00000000001a6f75 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e6a02] ; ret
0x00000000001bb5da : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x80e7002] ; ret
0x000000000007b5d8 : lea ebp, dword ptr [rdi + 0x83] ; jmp 0x7b5c6
0x0000000000045b5f : lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000047071 : lea ebx, dword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000598fb : lea ebx, dword ptr [rax - 0x7b000011] ; ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000001833b1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000acbb3 : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000accde : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000000ad11e : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000beb64 : lea ecx, dword ptr [rax] ; mov rdx, rax ; jmp 0xbeb75
0x00000000001bc67e : lea ecx, dword ptr [rax] ; rol byte ptr [rcx], cl ; ret 0xb
0x0000000000150fe0 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x00000000000a5bee : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000168896 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x168de9 ; ret
0x0000000000168b94 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x168de9 ; ret
0x0000000000168bb4 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x168de9 ; ret
0x0000000000168bd4 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x168de9 ; ret
0x0000000000168bf6 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x168de9 ; ret
0x0000000000168c16 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x168de9 ; ret
0x0000000000168c36 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x168de9 ; ret
0x0000000000168a8c : lea ecx, dword ptr [rdx + 1] ; jne 0x168de9 ; ret
0x0000000000168aae : lea ecx, dword ptr [rdx + 2] ; jne 0x168de9 ; ret
0x0000000000168ad4 : lea ecx, dword ptr [rdx + 3] ; jne 0x168de9 ; ret
0x0000000000168aec : lea ecx, dword ptr [rdx + 4] ; jne 0x168de9 ; ret
0x0000000000072161 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c6 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000168b12 : lea ecx, dword ptr [rdx + 5] ; jne 0x168de9 ; ret
0x0000000000168b34 : lea ecx, dword ptr [rdx + 6] ; jne 0x168de9 ; ret
0x0000000000168b52 : lea ecx, dword ptr [rdx + 7] ; jne 0x168de9 ; ret
0x000000000016882e : lea ecx, dword ptr [rdx + 8] ; jne 0x168de9 ; ret
0x0000000000168b74 : lea ecx, dword ptr [rdx + 9] ; jne 0x168de9 ; ret
0x0000000000048390 : lea ecx, dword ptr [rdx] ; jmp 0x483e6
0x0000000000049f70 : lea ecx, dword ptr [rdx] ; jmp 0x49fc6
0x0000000000059878 : lea ecx, dword ptr [rip - 0x7cc] ; add rax, rcx ; jmp rax
0x000000000010ad67 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000136eb9 : lea ecx, dword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe4 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012ca88 : lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750c0 : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136cca : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c996 : lea ecx, dword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad079 : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000000accd9 : lea ecx, dword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbae : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000138062 : lea ecx, dword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7bc : lea ecx, dword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf2b : lea ecx, dword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01c : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad55a : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e23 : lea ecx, dword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81b : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad291 : lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x0000000000132dee : lea edi, dword ptr [rbp + 0x10] ; call rax
0x00000000001359f2 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000134fd2 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000132255 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x0000000000038fec : lea edi, dword ptr [rbx + rsi] ; call rax
0x000000000008f426 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8f418 ; mov rax, rdi ; ret
0x00000000000944e6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x944d6 ; ret
0x00000000000a675d : lea edi, dword ptr [rdi + 0x10] ; jne 0xa6e39 ; ret
0x00000000000a7e41 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa8649 ; ret
0x00000000000a6780 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa6e39 ; ret
0x00000000000a7e64 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa8649 ; ret
0x00000000000a67a5 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa6e39 ; ret
0x00000000000a7e89 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa8649 ; ret
0x00000000000a67c3 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa6e39 ; ret
0x00000000000a7eb7 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa8649 ; ret
0x00000000000a67e3 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa6e39 ; ret
0x00000000000a7ee7 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa8649 ; ret
0x00000000000a6806 : lea edi, dword ptr [rdi + 0x15] ; jne 0xa6e39 ; ret
0x00000000000a7f1a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa8649 ; ret
0x00000000000a6825 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa6e39 ; ret
0x00000000000a7f49 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa8649 ; ret
0x00000000000a6845 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa6e39 ; ret
0x00000000000a7f79 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa8649 ; ret
0x00000000000a6865 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa6e39 ; ret
0x00000000000a7fa9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa8649 ; ret
0x00000000000a6888 : lea edi, dword ptr [rdi + 0x19] ; jne 0xa6e39 ; ret
0x00000000000a7fdc : lea edi, dword ptr [rdi + 0x19] ; jne 0xa8649 ; ret
0x00000000000a68bd : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa6e39 ; ret
0x00000000000a8011 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa8649 ; ret
0x00000000000a68eb : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa6e39 ; ret
0x00000000000a803f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa8649 ; ret
0x00000000000a691b : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa6e39 ; ret
0x00000000000a806f : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa8649 ; ret
0x00000000000a6947 : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa6e39 ; ret
0x00000000000a809b : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa8649 ; ret
0x00000000000a6977 : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa6e39 ; ret
0x00000000000a80cb : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa8649 ; ret
0x00000000000a69a7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa6e39 ; ret
0x00000000000a80fb : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa8649 ; ret
0x00000000000a69d7 : lea edi, dword ptr [rdi + 0x20] ; jne 0xa6e39 ; ret
0x00000000000a812b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa8649 ; ret
0x00000000000a66a3 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa6e39 ; ret
0x00000000000a7d47 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa8649 ; ret
0x00000000000a66c1 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa6e39 ; ret
0x00000000000a7d75 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa8649 ; ret
0x00000000000a66e1 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa6e39 ; ret
0x00000000000a7d95 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa8649 ; ret
0x00000000000a6703 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa6e39 ; ret
0x00000000000a7db7 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa8649 ; ret
0x00000000000a6723 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa6e39 ; ret
0x00000000000a7de7 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa8649 ; ret
0x00000000000a6743 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa6e39 ; ret
0x00000000000a7e17 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa8649 ; ret
0x00000000000a6577 : lea edi, dword ptr [rdi + 1] ; jne 0xa6e39 ; ret
0x00000000000a7c1a : lea edi, dword ptr [rdi + 1] ; jne 0xa8649 ; ret
0x00000000000a659b : lea edi, dword ptr [rdi + 2] ; jne 0xa6e39 ; ret
0x00000000000a7c3f : lea edi, dword ptr [rdi + 2] ; jne 0xa8649 ; ret
0x00000000000a65be : lea edi, dword ptr [rdi + 3] ; jne 0xa6e39 ; ret
0x00000000000a7c62 : lea edi, dword ptr [rdi + 3] ; jne 0xa8649 ; ret
0x00000000000a65d9 : lea edi, dword ptr [rdi + 4] ; jne 0xa6e39 ; ret
0x00000000000a7c7d : lea edi, dword ptr [rdi + 4] ; jne 0xa8649 ; ret
0x00000000000a65fc : lea edi, dword ptr [rdi + 5] ; jne 0xa6e39 ; ret
0x00000000000a7ca0 : lea edi, dword ptr [rdi + 5] ; jne 0xa8649 ; ret
0x00000000000a6621 : lea edi, dword ptr [rdi + 6] ; jne 0xa6e39 ; ret
0x00000000000a7cc5 : lea edi, dword ptr [rdi + 6] ; jne 0xa8649 ; ret
0x00000000000a663f : lea edi, dword ptr [rdi + 7] ; jne 0xa6e39 ; ret
0x00000000000a7ce3 : lea edi, dword ptr [rdi + 7] ; jne 0xa8649 ; ret
0x00000000000a665b : lea edi, dword ptr [rdi + 8] ; jne 0xa6e39 ; ret
0x00000000000a7cff : lea edi, dword ptr [rdi + 8] ; jne 0xa8649 ; ret
0x00000000000a667e : lea edi, dword ptr [rdi + 9] ; jne 0xa6e39 ; ret
0x00000000000a7d22 : lea edi, dword ptr [rdi + 9] ; jne 0xa8649 ; ret
0x0000000000023652 : lea edi, dword ptr [rdx + 0x10] ; mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a9
0x000000000004b511 : lea edi, dword ptr [rip + 0x1451a9] ; call 0x777f8
0x00000000001206d1 : lea edi, dword ptr [rip + 0x2a8025] ; call rax
0x000000000011fe72 : lea edi, dword ptr [rip + 0x2a8828] ; call rax
0x00000000000c00ad : lea edi, dword ptr [rip + 0xc8561] ; add rax, rdi ; jmp rax
0x0000000000115b07 : lea edi, dword ptr [rip - 0x16d] ; call rax
0x00000000000f6aa5 : lea edi, dword ptr [rsp + 0xc] ; call rax
0x000000000007c84b : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000368a9 : lea edx, dword ptr [rax - 1] ; mov dword ptr [rip + 0x38d7d6], edx ; ret
0x00000000001510b4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x000000000009ede8 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000072eed : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000089d96 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000010ab43 : lea edx, dword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001514a8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x000000000012dd71 : lea edx, dword ptr [rip + 0x295e09] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000137341 : lea edx, dword ptr [rip + 0x3609] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001162ab : lea edx, dword ptr [rip + 0x4003f] ; cmove rax, rdx ; ret
0x000000000008f196 : lea edx, dword ptr [rip + 0xc7164] ; cmove rax, rdx ; ret
0x00000000000720a1 : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000062053 : lea esi, dword ptr [rax - 0x77000005] ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000000de471 : lea esi, dword ptr [rbx + rbp] ; call 0x94479
0x0000000000071270 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002eea : lea esi, dword ptr [rdi] ; ret 0x793b
0x000000000004e617 : lea esi, dword ptr [rip + 0x1304] ; add rax, rsi ; jmp rax
0x00000000000450df : lea esi, dword ptr [rip + 0x1cb] ; call rax
0x000000000006f21a : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007bf0a : lea esi, dword ptr [rip - 0x15e0] ; call rax
0x000000000007c2fa : lea esi, dword ptr [rip - 0x19d0] ; call rax
0x000000000007c74a : lea esi, dword ptr [rip - 0x1e20] ; call rax
0x000000000006f513 : lea esi, dword ptr [rip - 0x2c9] ; call rax
0x000000000007ac3a : lea esi, dword ptr [rip - 0x310] ; call rax
0x000000000007aeaa : lea esi, dword ptr [rip - 0x580] ; call rax
0x000000000013b1fd : lea esi, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e665 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5aa : lea esi, dword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013ab6d : lea esi, dword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c2 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006d121 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000089d95 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000038feb : lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000150fdf : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000004838f : lea r9, qword ptr [rdx] ; jmp 0x483e7
0x0000000000049f6f : lea r9, qword ptr [rdx] ; jmp 0x49fc7
0x0000000000136eb8 : lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000074fe3 : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000012ca87 : lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x00000000000750bf : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000136cc9 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012c995 : lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x00000000000ad078 : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000accd8 : lea r9, qword ptr [rsp + 0x20] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000acbad : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000138061 : lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000012c7bb : lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000012cf2a : lea r9, qword ptr [rsp + 0x30] ; call qword ptr [rax]
0x00000000000bb01b : lea r9, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rax] ; call r14
0x00000000000ad559 : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000137e22 : lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000ad81a : lea r9, qword ptr [rsp + 0x70] ; mov rdi, r12 ; call rbx
0x00000000000ad290 : lea r9, qword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000cdbb9 : lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000008eb43 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008eb53 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000009f103 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008eb23 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000000c7981 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012e24a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000ac9e7 : lea rax, qword ptr [rbx - 4] ; pop rbx ; ret
0x000000000008d5ec : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000000aa383 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000000a74ab : lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a74c0 : lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a74de : lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74fe : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a7521 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a7540 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a7560 : lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a7580 : lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a75a3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a75c8 : lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a75e6 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7606 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a7622 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a7642 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a7662 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a7682 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84d2 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a8738 : lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a73fc : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a741c : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a743e : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a745e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a747e : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a7498 : lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009ea63 : lea rax, qword ptr [rdi + 1] ; ret
0x000000000009ea77 : lea rax, qword ptr [rdi + 2] ; ret
0x000000000009ea82 : lea rax, qword ptr [rdi + 3] ; ret
0x000000000009ea96 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000009eaa6 : lea rax, qword ptr [rdi + 5] ; ret
0x000000000009eab6 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a73aa : lea rax, qword ptr [rdi + 6] ; ret
0x000000000009ea56 : lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a73c9 : lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a73de : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008eb78 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb88 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008ea72 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000967a6 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000014a629 : lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x000000000012414f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000002da64 : lea rax, qword ptr [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000008d4e8 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000000ac43d : lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac5a0 : lea rax, qword ptr [rdi - 0xc] ; ret
0x00000000000ac5c0 : lea rax, qword ptr [rdi - 4] ; ret
0x00000000000ac5b0 : lea rax, qword ptr [rdi - 8] ; ret
0x00000000000a7332 : lea rax, qword ptr [rdi] ; ret
0x000000000016b08c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016b0ac : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016b0ce : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016b0ee : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016b10e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000016af9e : lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000016afc6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000016afdc : lea rax, qword ptr [rdx + 2] ; ret
0x000000000016aff4 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000016b00a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000016b01c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000016b03a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000016af46 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000016b04c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000016b06c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000016afb4 : lea rax, qword ptr [rdx] ; ret
0x000000000008bb59 : lea rax, qword ptr [rip + 0x10] ; ret
0x000000000008f34f : lea rax, qword ptr [rip + 0x10e4a] ; ret
0x000000000002cb38 : lea rax, qword ptr [rip + 0x15ffa6] ; ret
0x0000000000020930 : lea rax, qword ptr [rip + 0x16bcf4] ; ret
0x0000000000020940 : lea rax, qword ptr [rip + 0x16dc23] ; ret
0x000000000008bb0d : lea rax, qword ptr [rip + 0x1713c] ; ret
0x00000000000898ad : lea rax, qword ptr [rip + 0x1777c] ; ret
0x000000000008f1e9 : lea rax, qword ptr [rip + 0x1b330] ; ret
0x000000000008ebc3 : lea rax, qword ptr [rip + 0x26] ; ret
0x000000000012b978 : lea rax, qword ptr [rip + 0x29d3c1] ; pop rbx ; ret
0x000000000012b940 : lea rax, qword ptr [rip + 0x29d3f9] ; pop rbx ; ret
0x000000000012b881 : lea rax, qword ptr [rip + 0x29d4b8] ; pop rbx ; ret
0x00000000000fe2ed : lea rax, qword ptr [rip + 0x2c8ca4] ; ret
0x00000000000fe12d : lea rax, qword ptr [rip + 0x2c8e64] ; ret
0x000000000006ac83 : lea rax, qword ptr [rip + 0x35ba76] ; pop rbx ; pop rbp ; ret
0x0000000000116230 : lea rax, qword ptr [rip + 0x37c19] ; ret
0x0000000000116320 : lea rax, qword ptr [rip + 0x37ec9] ; ret
0x000000000012b0b0 : lea rax, qword ptr [rip + 0x61a2e] ; ret
0x000000000008f9e9 : lea rax, qword ptr [rip + 0x80] ; ret
0x000000000009443e : lea rax, qword ptr [rip + 0xb3db] ; ret
0x000000000009440f : lea rax, qword ptr [rip + 0xb63a] ; ret
0x0000000000094452 : lea rax, qword ptr [rip + 0xbcb07] ; ret
0x000000000008da9a : lea rax, qword ptr [rip + 0xbcd7f] ; ret
0x000000000008d70a : lea rax, qword ptr [rip + 0xbcfdf] ; ret
0x000000000008f390 : lea rax, qword ptr [rip + 0xbee69] ; ret
0x000000000008b29a : lea rax, qword ptr [rip + 0xbf30f] ; ret
0x00000000000abc9b : lea rax, qword ptr [rip + 0xc20ce] ; ret
0x00000000000ac877 : lea rax, qword ptr [rip + 0xc31b2] ; ret
0x00000000000ac87f : lea rax, qword ptr [rip + 0xc5a6a] ; ret
0x0000000000089cfd : lea rax, qword ptr [rip + 0xc] ; ret
0x000000000008d3ed : lea rax, qword ptr [rip + 0xd999c] ; ret
0x000000000008fa4c : lea rax, qword ptr [rip + 0xd] ; ret
0x000000000008f87d : lea rax, qword ptr [rip + 0xda08c] ; ret
0x000000000008b18d : lea rax, qword ptr [rip + 0xda44c] ; ret
0x000000000008f99d : lea rax, qword ptr [rip + 0xdb77c] ; ret
0x000000000008ebd7 : lea rax, qword ptr [rip + 0xdf812] ; ret
0x000000000008ebdf : lea rax, qword ptr [rip + 0xe1f9a] ; ret
0x0000000000089a9a : lea rax, qword ptr [rip + 0xe6dbf] ; ret
0x00000000000ac863 : lea rax, qword ptr [rip + 0xe916] ; ret
0x00000000000abc93 : lea rax, qword ptr [rip + 0xf596] ; ret
0x0000000000116369 : lea rax, qword ptr [rip - 0x6be60] ; ret
0x00000000001162df : lea rax, qword ptr [rip - 0x76156] ; ret
0x00000000001161ef : lea rax, qword ptr [rip - 0x767b6] ; ret
0x00000000000ac579 : lea rax, qword ptr es:[rdi - 0x10] ; ret
0x0000000000047070 : lea rbx, qword ptr [rax + 1] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a5bed : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000acbb2 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000accdd : lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000ad11d : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000000beb63 : lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbeb76
0x00000000000705c5 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000010ad66 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000132ded : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001359f1 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000134fd1 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000132254 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008f425 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8f419 ; mov rax, rdi ; ret
0x00000000000944e5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x944d7 ; ret
0x000000000004b510 : lea rdi, qword ptr [rip + 0x1451a9] ; call 0x777f9
0x00000000001206d0 : lea rdi, qword ptr [rip + 0x2a8025] ; call rax
0x000000000011fe71 : lea rdi, qword ptr [rip + 0x2a8828] ; call rax
0x0000000000115b06 : lea rdi, qword ptr [rip - 0x16d] ; call rax
0x00000000000f6aa4 : lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000001510b3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000010ab42 : lea rdx, qword ptr [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001514a7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000000450de : lea rsi, qword ptr [rip + 0x1cb] ; call rax
0x000000000006f219 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007bf09 : lea rsi, qword ptr [rip - 0x15e0] ; call rax
0x000000000007c2f9 : lea rsi, qword ptr [rip - 0x19d0] ; call rax
0x000000000007c749 : lea rsi, qword ptr [rip - 0x1e20] ; call rax
0x000000000006f512 : lea rsi, qword ptr [rip - 0x2c9] ; call rax
0x000000000007ac39 : lea rsi, qword ptr [rip - 0x310] ; call rax
0x000000000007aea9 : lea rsi, qword ptr [rip - 0x580] ; call rax
0x000000000013b1fc : lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e664 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013b5a9 : lea rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; call qword ptr [rax]
0x000000000013ab6c : lea rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000398c1 : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000dc59b : leave ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000019ba6d : leave ; add dword ptr [rax], eax ; xor al, 0xdf ; std ; call rsp
0x0000000000029a74 : leave ; call r15
0x0000000000002bec : leave ; clc ; ret
0x000000000019b6a1 : leave ; cli ; jmp rsp
0x000000000008d7b6 : leave ; cmove rax, rdx ; ret
0x000000000014a661 : leave ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000001a1641 : leave ; in al, dx ; call rsp
0x000000000002b395 : leave ; je 0x2b39d ; call rcx
0x000000000006b459 : leave ; je 0x6b464 ; ret
0x000000000012664c : leave ; jne 0x12659b ; ret
0x000000000009eb29 : leave ; jne 0x9eb1c ; ret
0x000000000009ec68 : leave ; jne 0x9ec5d ; xor eax, eax ; ret
0x00000000000aa160 : leave ; jne 0xaa153 ; ret
0x00000000000aa210 : leave ; jne 0xaa203 ; ret
0x00000000000aa4d0 : leave ; jne 0xaa4c7 ; sub rax, 1 ; ret
0x00000000000ac60c : leave ; jne 0xac604 ; ret
0x00000000000ada8a : leave ; jne 0xada47 ; mov rax, rdx ; ret
0x000000000014a628 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000a56d1 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000034a71 : leave ; mov dword ptr [rdi], ecx ; ret
0x00000000000aae14 : leave ; mov dword ptr [rdx], ecx ; jne 0xaae0e ; ret
0x0000000000126a36 : leave ; mov eax, 0x200000 ; jmp 0x126a07
0x000000000009ea2f : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009e98f : leave ; movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x00000000000218e0 : leave ; not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000042351 : leave ; ret
0x000000000019ae29 : leave ; stc ; call rsp
0x000000000019536d : leave ; sti ; jmp qword ptr [rax]
0x000000000008958b : leave ; test eax, 0x89480033 ; add al, 0x24 ; call qword ptr [rdx]
0x00000000000ad075 : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000007a851 : les r9d, ptr [r8 + 0x29] ; ret 0x8948
0x000000000018c15b : ljmp ptr [rax + 0x40fffa89] ; mov bh, dl ; call rax
0x0000000000198fc3 : ljmp ptr [rax + rbp*2 + 0x44840001] ; cmc ; jmp rsp
0x000000000018882f : ljmp ptr [rax - 0x53000c73] ; xchg eax, ebx ; call rdx
0x000000000019538f : ljmp ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x000000000018997b : ljmp ptr [rax] ; add eax, 0x528fff5 ; cmc ; jmp rax
0x00000000001899ff : ljmp ptr [rax] ; add eax, 0x590fff5 ; cmc ; jmp rax
0x000000000018695f : ljmp ptr [rax] ; test al, 0xed ; call rsi
0x000000000018695b : ljmp ptr [rax] ; test al, 0xed ; ljmp ptr [rax] ; test al, 0xed ; call rsi
0x0000000000181edb : ljmp ptr [rbp + 0x19] ; jmp 0x181ee3
0x000000000019b2cb : ljmp ptr [rbx + rax*2 + 0x56140002] ; cli ; jmp rsp
0x0000000000188833 : ljmp ptr [rbx + rdx*4 + 0x77d2fff3] ; call rdx
0x0000000000186c7f : ljmp ptr [rbx - 0x5400122e] ; shr ch, cl ; call rax
0x0000000000198a83 : ljmp ptr [rcx + rax*2 + 0x46d40001] ; jmp rsp
0x00000000001882c7 : ljmp ptr [rcx + rbp] ; call qword ptr [rdi]
0x00000000001959cf : ljmp ptr [rcx + rdx*2] ; cld ; call rdx
0x0000000000188e97 : ljmp ptr [rcx - 0x2f] ; push qword ptr [rax - 0x24] ; call rax
0x000000000018a4b5 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x0000000000197dd3 : ljmp ptr [rdi + 0x71140000] ; out dx, al ; jmp rsp
0x000000000019aca3 : ljmp ptr [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x0000000000186a6b : ljmp ptr [rdi] ; pop rsi ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000188693 : ljmp ptr [rdx + rcx*4] ; dec dword ptr [rdi] ; mov ebx, esi ; jmp rdx
0x00000000001874a7 : ljmp ptr [rsi + rcx*2 + 0x4dd4ffee] ; out dx, al ; call rsp
0x000000000019b463 : ljmp ptr [rsp + rcx*2 + 2] ; add ah, al ; jg 0x19b46d ; call rsp
0x000000000006d713 : lock add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x000000000016e7ce : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001aab9d : lock add byte ptr [rax], al ; nop ; adc esi, edx ; jmp qword ptr [rcx]
0x000000000010de0e : lock add dword ptr [rax + 0x470f3af9], eax ; ret 0xc084
0x0000000000086644 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000fc194 : lock and byte ptr [rax - 0x77], cl ; ret
0x00000000001224ef : lodsb al, byte ptr [rsi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000019b2cc : lodsb al, byte ptr [rsi] ; add al, byte ptr [r8] ; adc al, 0x56 ; cli ; jmp rsp
0x0000000000145740 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000171d60 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001a67ed : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jle 0x1a67e7 ; jmp qword ptr [rcx]
0x00000000001b0aa4 : lodsb al, byte ptr [rsi] ; add qword ptr [r8], r8 ; call 0x221b0023
0x00000000001439ec : lodsb al, byte ptr [rsi] ; and al, 0x70 ; add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000003ea8b : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b5c11 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000000b67c2 : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e06fa : lodsb al, byte ptr [rsi] ; and al, 0xa4 ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x000000000013c80a : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002b0ac : lodsb al, byte ptr [rsi] ; clc ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xfffb
0x00000000001961e1 : lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x0000000000196125 : lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x0000000000174564 : lodsb al, byte ptr [rsi] ; cmp esp, dword ptr [rip] ; add bl, dh ; ret
0x00000000001a6ba4 : lodsb al, byte ptr [rsi] ; mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x0000000000199f24 : lodsb al, byte ptr [rsi] ; mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000007b2d4 : lodsb al, byte ptr [rsi] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008d7d8 : lodsb al, byte ptr [rsi] ; nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000145d64 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185a3d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000197dd4 : lodsb al, byte ptr [rsi] ; out 0, eax ; add byte ptr [rcx + rsi*2], dl ; out dx, al ; jmp rsp
0x00000000001874a8 : lodsb al, byte ptr [rsi] ; out dx, al ; call rsp
0x0000000000198fc4 : lodsb al, byte ptr [rsi] ; push 0x44840001 ; cmc ; jmp rsp
0x00000000001b0fa4 : lodsb al, byte ptr [rsi] ; push rsp ; add dword ptr [rax], eax ; js 0x1b0fa7 ; jmp qword ptr [rbx]
0x00000000001977f4 : lodsb al, byte ptr [rsi] ; ret 0
0x0000000000039978 : lodsb al, byte ptr [rsi] ; ret 0x38
0x000000000019a0b4 : lodsb al, byte ptr [rsi] ; ret 1
0x00000000001095f2 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001095e5 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000109571 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; je 0x10957e ; pop rbp ; ret
0x0000000000188834 : lodsb al, byte ptr [rsi] ; xchg eax, ebx ; call rdx
0x00000000000892d4 : lodsb al, byte ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000004617c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000ae466 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d777 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001961dd : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rdx + 0x22fffcac]
0x0000000000196159 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rsi]
0x0000000000196319 : lodsd eax, dword ptr [rsi] ; cld ; call rax
0x0000000000196315 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x0000000000196299 : lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x00000000001b0738 : lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; cmc ; call qword ptr [rcx]
0x00000000000aca39 : lodsd eax, dword ptr [rsi] ; mov rax, rbx ; pop rbx ; ret
0x00000000001498d0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000048af2 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000109523 : lodsd eax, dword ptr [rsi] ; sub eax, dword ptr [rax] ; pop rbx ; ret
0x000000000008921c : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x00000000000ae465 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001302fc : loop 0x130386 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00000000001375e6 : loop 0x137578 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000137779 : loop 0x13770b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000015ab8a : loop 0x15ab85 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015ab89 : loop 0x15ab86 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d65a : loop 0x15d655 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d659 : loop 0x15d656 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000016017a : loop 0x160175 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000160179 : loop 0x160176 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000185dda : loop 0x185e2f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000194f78 : loop 0x194f1e ; std ; jmp rdx
0x0000000000195269 : loop 0x195268 ; jmp rax
0x00000000001952c9 : loop 0x1952c8 ; jmp qword ptr [rax]
0x0000000000197cdd : loop 0x197ce5 ; add byte ptr [rdx - 0x12], ah ; call rsp
0x00000000001aeaf9 : loop 0x1aeaf1 ; jmp qword ptr [rcx]
0x00000000001b5aa9 : loop 0x1b5aa3 ; call rcx
0x00000000000025e5 : loop 0x25bf ; ret 0x23cb
0x000000000003a689 : loop 0x3a6b3 ; mov rax, rcx ; or rax, rdx ; ret
0x0000000000055d0d : loop 0x55c9a ; ret
0x000000000005f10b : loop 0x5f114 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a8
0x0000000000065891 : loop 0x65819 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000006bcc2 : loop 0x6bc54 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000759b4 : loop 0x759bb ; mov eax, edx ; ret
0x0000000000075aa4 : loop 0x75aab ; mov eax, edx ; ret
0x000000000008699d : loop 0x869f0 ; mov esi, ebx ; mov rdi, rbp ; call 0x82bd9
0x0000000000087bf4 : loop 0x87c46 ; mov edi, edi ; call rax
0x000000000009f80d : loop 0x9f845 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000a684a : loop 0xa6855 ; add byte ptr [rax], al ; ret
0x00000000000aac55 : loop 0xaac6f ; movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000ad28f : loop 0xad2e6 ; lea ecx, dword ptr [rsp + 0x70] ; mov rdi, rbp ; call rbx
0x00000000000ad558 : loop 0xad5af ; lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000c1cef : loop 0xc1cf5 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000e3e3a : loop 0xe3eba ; cli ; dec dword ptr [rcx - 0x77] ; ret 0x448b
0x00000000000e4fdc : loop 0xe4fe8 ; xor esi, esi ; call 0x8f248
0x00000000000e512f : loop 0xe5134 ; add esi, esi ; ret
0x00000000000eeb12 : loop 0xeea9b ; ret 0x850f
0x00000000001110d6 : loope 0x1110e4 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000120f93 : loope 0x120fe1 ; sub al, byte ptr [rax] ; ret
0x000000000013221e : loope 0x1321b3 ; ret
0x000000000015aafa : loope 0x15aaf5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015aaf9 : loope 0x15aaf6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d5ca : loope 0x15d5c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015d5c9 : loope 0x15d5c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001600ea : loope 0x1600e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001600e9 : loope 0x1600e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000168bfb : loope 0x168c02 ; add byte ptr [rax], al ; ret
0x0000000000170a8b : loope 0x170a95 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000001742e6 : loope 0x174345 ; ret
0x00000000001860b9 : loope 0x1860bc ; jmp qword ptr [rdi]
0x0000000000186139 : loope 0x18613c ; jmp qword ptr [rdi]
0x00000000001861b9 : loope 0x1861bc ; jmp qword ptr [rdi]
0x0000000000186239 : loope 0x18623c ; jmp qword ptr [rdi]
0x00000000001862b9 : loope 0x1862bc ; jmp qword ptr [rdi]
0x0000000000186339 : loope 0x18633c ; jmp qword ptr [rdi]
0x0000000000186f99 : loope 0x186f8e ; inc dword ptr [rax] ; shr ebp, cl ; jmp rcx
0x000000000018ab89 : loope 0x18ab93 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000195245 : loope 0x195244 ; call qword ptr [rax]
0x00000000001952e9 : loope 0x1952e8 ; jmp rax
0x0000000000196b59 : loope 0x196b46 ; call rsp
0x00000000001b6469 : loope 0x1b6468 ; call rsi
0x0000000000035d6e : loope 0x35d77 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000048987 : loope 0x489d9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000489b8 : loope 0x48a0b ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000048a2d : loope 0x48a80 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000758c1 : loope 0x75896 ; mov dword ptr [rdi], ecx ; ret
0x00000000000948eb : loope 0x948fd ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000094a92 : loope 0x94ae9 ; or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000094b5b : loope 0x94b6d ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000aa059 : loope 0xaa0c8 ; nop dword ptr [rax + rax] ; ret
0x00000000000aac97 : loope 0xaac58 ; or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000aad7e : loope 0xaad75 ; ret
0x00000000000abf1e : loope 0xabf33 ; je 0xabf44 ; ret
0x00000000000b1946 : loope 0xb1951 ; add byte ptr [rax], al ; call 0x2dc46
0x00000000000c89bd : loope 0xc894a ; ret 0xf631
0x00000000000d7289 : loope 0xd728e ; add esi, esi ; ret
0x0000000000101e20 : loopne 0x101e26 ; jmp 0x101dea
0x0000000000105f2e : loopne 0x105f94 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010a43e : loopne 0x10a444 ; ret
0x000000000010a45a : loopne 0x10a469 ; movzx eax, ax ; ret
0x000000000010a4ce : loopne 0x10a4d4 ; ret
0x000000000010a56e : loopne 0x10a574 ; ret
0x000000000010a58a : loopne 0x10a58f ; ret
0x000000000010a5fe : loopne 0x10a604 ; ret
0x000000000010a61a : loopne 0x10a623 ; movzx eax, ax ; ret
0x000000000010a68e : loopne 0x10a694 ; ret
0x000000000010a71e : loopne 0x10a724 ; ret
0x000000000010a7be : loopne 0x10a7c4 ; ret
0x000000000010a85e : loopne 0x10a864 ; ret
0x000000000010a8fe : loopne 0x10a904 ; ret
0x000000000010a91a : loopne 0x10a925 ; movzx eax, ax ; ret
0x000000000010a98e : loopne 0x10a994 ; ret
0x000000000010aa29 : loopne 0x10aa2f ; ret
0x000000000010aabe : loopne 0x10aac4 ; ret
0x000000000010ac9a : loopne 0x10aca0 ; ret
0x000000000010ade0 : loopne 0x10ade6 ; ret
0x000000000010adf3 : loopne 0x10ae02 ; movzx eax, ax ; ret
0x000000000010ae60 : loopne 0x10ae66 ; ret
0x000000000010aee0 : loopne 0x10aee6 ; ret
0x000000000010aef3 : loopne 0x10aef8 ; ret
0x000000000010af60 : loopne 0x10af66 ; ret
0x000000000010af73 : loopne 0x10af7c ; movzx eax, ax ; ret
0x000000000010afe0 : loopne 0x10afe6 ; ret
0x000000000010b060 : loopne 0x10b066 ; ret
0x000000000010b0e0 : loopne 0x10b0e6 ; ret
0x000000000010b160 : loopne 0x10b166 ; ret
0x000000000010b1e0 : loopne 0x10b1e6 ; ret
0x000000000010b1f3 : loopne 0x10b1fe ; movzx eax, ax ; ret
0x000000000010b260 : loopne 0x10b266 ; ret
0x000000000010b2dd : loopne 0x10b2e3 ; ret
0x000000000010b360 : loopne 0x10b366 ; ret
0x000000000010b50a : loopne 0x10b510 ; ret
0x00000000001149eb : loopne 0x1149f0 ; ret
0x0000000000115118 : loopne 0x11512d ; cmp eax, 4 ; je 0x115127 ; ret
0x00000000001152e9 : loopne 0x1152fc ; pop rbp ; pop r12 ; ret
0x0000000000115b05 : loopne 0x115b57 ; lea edi, dword ptr [rip - 0x16d] ; call rax
0x0000000000122fe4 : loopne 0x122fe3 ; add eax, 0x10 ; ret
0x000000000012411b : loopne 0x124128 ; cdqe ; shr rax, 4 ; ret
0x0000000000138367 : loopne 0x138370 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000013c6c1 : loopne 0x13c731 ; nop dword ptr [rax + rax] ; ret
0x000000000014da32 : loopne 0x14d9ff ; jp 0x14dabb ; jp 0x14da2e ; ret
0x000000000014df22 : loopne 0x14deef ; jp 0x14dfab ; jp 0x14df1e ; ret
0x000000000014e2c5 : loopne 0x14e292 ; jp 0x14e34e ; jp 0x14e2c1 ; ret
0x0000000000151501 : loopne 0x151518 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151500 : loopne 0x151519 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151651 : loopne 0x151668 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151650 : loopne 0x151669 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517a1 : loopne 0x1517b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001517a0 : loopne 0x1517b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001518f1 : loopne 0x151908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001518f0 : loopne 0x151909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a41 : loopne 0x151a58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151a40 : loopne 0x151a59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151b91 : loopne 0x151ba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151b90 : loopne 0x151ba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151ce1 : loopne 0x151cf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151ce0 : loopne 0x151cf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e2f : loopne 0x151e46 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151e2e : loopne 0x151e47 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151f81 : loopne 0x151f98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000151f80 : loopne 0x151f99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001520d1 : loopne 0x1520e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001520d0 : loopne 0x1520e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152221 : loopne 0x152238 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152220 : loopne 0x152239 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152371 : loopne 0x152388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152370 : loopne 0x152389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001524c1 : loopne 0x1524d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001524c0 : loopne 0x1524d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152611 : loopne 0x152628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152610 : loopne 0x152629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152761 : loopne 0x152778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000152760 : loopne 0x152779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153ed1 : loopne 0x153ee8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000153ed0 : loopne 0x153ee9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154021 : loopne 0x154038 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154020 : loopne 0x154039 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154171 : loopne 0x154188 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154170 : loopne 0x154189 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001542c1 : loopne 0x1542d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001542c0 : loopne 0x1542d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154411 : loopne 0x154428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154410 : loopne 0x154429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154561 : loopne 0x154578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154560 : loopne 0x154579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001546b1 : loopne 0x1546c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001546b0 : loopne 0x1546c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001547ff : loopne 0x154816 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001547fe : loopne 0x154817 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154951 : loopne 0x154968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154950 : loopne 0x154969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154aa1 : loopne 0x154ab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154aa0 : loopne 0x154ab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154bf1 : loopne 0x154c08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154bf0 : loopne 0x154c09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154d41 : loopne 0x154d58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154d40 : loopne 0x154d59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154e91 : loopne 0x154ea8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154e90 : loopne 0x154ea9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154fe1 : loopne 0x154ff8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000154fe0 : loopne 0x154ff9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155131 : loopne 0x155148 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000155130 : loopne 0x155149 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568a1 : loopne 0x1568b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001568a0 : loopne 0x1568b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001569f1 : loopne 0x156a08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001569f0 : loopne 0x156a09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b41 : loopne 0x156b58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156b40 : loopne 0x156b59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156c91 : loopne 0x156ca8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156c90 : loopne 0x156ca9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156de1 : loopne 0x156df8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156de0 : loopne 0x156df9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f31 : loopne 0x156f48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000156f30 : loopne 0x156f49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157081 : loopne 0x157098 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157080 : loopne 0x157099 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001571cf : loopne 0x1571e6 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001571ce : loopne 0x1571e7 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157321 : loopne 0x157338 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157320 : loopne 0x157339 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157471 : loopne 0x157488 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157470 : loopne 0x157489 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001575c1 : loopne 0x1575d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001575c0 : loopne 0x1575d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157711 : loopne 0x157728 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157710 : loopne 0x157729 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157861 : loopne 0x157878 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157860 : loopne 0x157879 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001579b1 : loopne 0x1579c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001579b0 : loopne 0x1579c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157b01 : loopne 0x157b18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000157b00 : loopne 0x157b19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000172aa5 : loopne 0x172af6 ; sub eax, edx ; vzeroupper ; ret
0x0000000000172aa4 : loopne 0x172af7 ; sub eax, edx ; vzeroupper ; ret
0x00000000001833b4 : loopne 0x183394 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000187dc0 : loopne 0x187db0 ; int1 ; call qword ptr [rax]
0x0000000000187e30 : loopne 0x187e26 ; int1 ; inc dword ptr [rax] ; out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187f30 : loopne 0x187f35 ; int1 ; inc dword ptr [rax] ; std ; int1 ; jmp qword ptr [rax]
0x0000000000187fe8 : loopne 0x187ff3 ; inc dword ptr [rax] ; add esi, edx ; jmp qword ptr [rax]
0x000000000018b060 : loopne 0x18b08d ; cli ; call qword ptr [rax]
0x0000000000194e44 : loopne 0x194e62 ; sti ; call rax
0x0000000000194f08 : loopne 0x194f7f ; sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x0000000000195264 : loopne 0x195249 ; sti ; jmp rax
0x0000000000195268 : loopne 0x19524f ; sti ; jmp rax
0x0000000000195265 : loopne 0x195264 ; jmp rax
0x00000000001952c5 : loopne 0x1952c4 ; jmp qword ptr [rax]
0x00000000001952e4 : loopne 0x1952c8 ; sti ; jmp rax
0x00000000001952e8 : loopne 0x1952ce ; sti ; jmp rax
0x00000000001952ec : loopne 0x1952d8 ; sti ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x000000000019534c : loopne 0x195324 ; sti ; jmp qword ptr [rax]
0x00000000001954bc : loopne 0x1954c4 ; cld ; call rax
0x0000000000195e48 : loopne 0x195dd2 ; cld ; push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x00000000001960cc : loopne 0x196140 ; cld ; jmp qword ptr [rax]
0x0000000000197c85 : loopne 0x197c8d ; add byte ptr [rcx + rbx*2], dl ; out dx, al ; call rsp
0x00000000001a5299 : loopne 0x1a52a5 ; add ecx, dword ptr [rip + 0x380e0a03] ; ret
0x00000000001a6620 : loopne 0x1a6692 ; out dx, al ; jmp rdx
0x00000000001acd80 : loopne 0x1acd5e ; jmp qword ptr [rcx]
0x00000000001adbc0 : loopne 0x1adb58 ; hlt ; jmp qword ptr [rcx]
0x00000000001add00 : loopne 0x1adc9a ; hlt ; jmp qword ptr [rcx]
0x00000000001af380 : loopne 0x1af382 ; hlt ; jmp qword ptr [rcx]
0x00000000001b09d0 : loopne 0x1b0a43 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d90 : loopne 0x1b0e08 ; cmc ; jmp qword ptr [rcx]
0x00000000001bc68a : loopne 0x1bc699 ; ret 0xb
0x00000000001bc6e2 : loopne 0x1bc6f0 ; ret 0xa
0x000000000002dd13 : loopne 0x2dd22 ; movzx eax, ax ; ret
0x000000000002dd53 : loopne 0x2dd5c ; movzx eax, ax ; ret
0x000000000002ddf3 : loopne 0x2ddfe ; movzx eax, ax ; ret
0x000000000002ded3 : loopne 0x2ded8 ; ret
0x000000000002df4c : loopne 0x2df51 ; ret
0x000000000002df5c : loopne 0x2df6b ; movzx eax, ax ; ret
0x000000000002df9c : loopne 0x2dfa5 ; movzx eax, ax ; ret
0x000000000002df23 : loopne 0x2dfa6 ; ret
0x000000000002e03c : loopne 0x2e047 ; movzx eax, ax ; ret
0x0000000000034e75 : loopne 0x34e81 ; ret
0x0000000000035187 : loopne 0x3516e ; fsub dword ptr [rip + 0x200] ; ret
0x0000000000036084 : loopne 0x360d4 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000045a25 : loopne 0x45a4a ; or eax, edx ; ret
0x0000000000045ce4 : loopne 0x45d26 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0xde8
0x0000000000046072 : loopne 0x4608c ; test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000004846d : loopne 0x48476 ; sub eax, 1 ; ret
0x0000000000052fc5 : loopne 0x52f52 ; ret 0xe680
0x0000000000054f3e : loopne 0x54ecb ; ret 0xe680
0x0000000000005ec0 : loopne 0x5eca ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x26
0x000000000006c47b : loopne 0x6c4dd ; pop rbp ; pop r12 ; ret
0x000000000006c4a5 : loopne 0x6c507 ; pop rbp ; pop r12 ; ret
0x000000000006cb8b : loopne 0x6cbed ; pop rbp ; pop r12 ; ret
0x000000000006cc0d : loopne 0x6cc6f ; pop rbp ; pop r12 ; ret
0x000000000006dd9c : loopne 0x6dda2 ; add byte ptr [rax], al ; jmp rax
0x000000000006ddd8 : loopne 0x6ddde ; add byte ptr [rax], al ; call rax
0x000000000006de2a : loopne 0x6de30 ; add byte ptr [rax], al ; call rax
0x000000000006de6c : loopne 0x6de72 ; add byte ptr [rax], al ; jmp rax
0x000000000006de71 : loopne 0x6dee2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000007206e : loopne 0x72007 ; mov eax, 0xffffffff ; ret
0x00000000000779c8 : loopne 0x77a2a ; pop rbp ; pop r12 ; ret
0x0000000000077f06 : loopne 0x77f0b ; ret
0x0000000000077f16 : loopne 0x77f1b ; ret
0x0000000000078fb9 : loopne 0x79020 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000079067 : loopne 0x790ce ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008f09d : loopne 0x8f101 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008f132 : loopne 0x8f196 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000094d5d : loopne 0x94db5 ; mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a47 : loopne 0x96a9d ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000096a4a : loopne 0x96aac ; pop rbp ; pop r12 ; ret
0x00000000000a694c : loopne 0xa6956 ; add byte ptr [rax], al ; ret
0x00000000000aac8d : loopne 0xaaca7 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000bea6c : loopne 0xbea0a ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cd6b0 : loopne 0xcd716 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d1772 : loopne 0xd17d4 ; pop rbp ; pop r12 ; ret
0x00000000000d1872 : loopne 0xd18d4 ; pop rbp ; pop r12 ; ret
0x00000000000d6538 : loopne 0xd653d ; ret
0x00000000000d71b9 : loopne 0xd71c2 ; add eax, 8 ; ret
0x00000000000d7205 : loopne 0xd720b ; ret
0x00000000000d72b9 : loopne 0xd72bf ; pop rbx ; ret
0x00000000000d9273 : loopne 0xd9287 ; ret
0x00000000000d9b1d : loopne 0xd9b8e ; nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000de2bc : loopne 0xde2d9 ; hlt ; dec dword ptr [rcx - 0x77] ; ret 0x8949
0x00000000000e45a7 : loopne 0xe456f ; call 0x66d0cebb
0x000000000019a9fc : mov ah, 0 ; add al, byte ptr [rax] ; in al, 0x3b ; stc ; jmp rsp
0x00000000001322b7 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001acdac : mov ah, 0x12 ; add dword ptr [rax], eax ; adc dl, bl ; jmp qword ptr [rcx]
0x0000000000182dca : mov ah, 0x13 ; ret
0x000000000019d4ac : mov ah, 0x19 ; add byte ptr [rax], al ; ror byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x0000000000198d80 : mov ah, 0x20 ; hlt ; call rsp
0x00000000000b5773 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; ret 0x8341
0x00000000000db0a8 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x947c
0x00000000000bc209 : mov ah, 0x24 ; mov eax, 0x41000000 ; call rsp
0x00000000001aebac : mov ah, 0x30 ; add dword ptr [rax], eax ; xor bl, ah ; hlt ; call qword ptr [rsi]
0x00000000001989dc : mov ah, 0x3a ; add dword ptr [rax], eax ; and al, 0xf3 ; jmp rsp
0x00000000001af9ac : mov ah, 0x3e ; add dword ptr [rax], eax ; xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000198f48 : mov ah, 0x40 ; cmc ; jmp rsp
0x000000000019b858 : mov ah, 0x40 ; sti ; call rsp
0x00000000001b05ac : mov ah, 0x4a ; add dword ptr [rax], eax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x00000000001974a0 : mov ah, 0x51 ; in eax, dx ; jmp rsp
0x0000000000186a24 : mov ah, 0x6e ; in eax, dx ; call rcx
0x0000000000186a44 : mov ah, 0x6e ; in eax, dx ; call rdx
0x00000000001869ec : mov ah, 0x6e ; in eax, dx ; jmp qword ptr [rdi]
0x00000000001b3bac : mov ah, 0x80 ; add dword ptr [rax], eax ; xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000195db8 : mov ah, 0x83 ; cld ; inc dword ptr [rbx + rax*4 - 4] ; call rsp
0x000000000019aacc : mov ah, 0xa ; add al, byte ptr [rax] ; adc al, 0x52 ; stc ; call rsp
0x0000000000183270 : mov ah, 0xa5 ; ret
0x00000000001962b0 : mov ah, 0xaa ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x000000000019a644 : mov ah, 0xe4 ; add dword ptr [rax], eax ; push rsp ; clc ; jmp rsp
0x000000000019a100 : mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x00000000000b7c1b : mov ah, 0xe9 ; ret
0x0000000000197e6c : mov ah, 0xee ; add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x00000000001b5439 : mov ah, 0xf6 ; call rsi
0x0000000000197f6c : mov ah, 0xf7 ; add byte ptr [rax], al ; test byte ptr [rdi], bl ; out dx, eax ; jmp rsp
0x0000000000182bc4 : mov ah, bl ; push rsi ; ret
0x00000000001a6b75 : mov al, 0 ; add byte ptr [rax + 0x1a], ch ; cli ; call qword ptr [rax]
0x00000000001a6bd5 : mov al, 0 ; add byte ptr [rax - 0x4f], bh ; out dx, al ; call qword ptr [rax]
0x00000000001a6b2d : mov al, 0 ; add byte ptr [rax - 0x71], al ; out dx, al ; jmp qword ptr [rsi]
0x00000000001a6b15 : mov al, 0 ; add byte ptr [rax - 0x71], cl ; out dx, al ; call qword ptr [rax]
0x00000000000ebf2e : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001a6ba5 : mov al, 0 ; add byte ptr [rax], cl ; push rsp ; cli ; call qword ptr [rax]
0x00000000001baae0 : mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x0000000000140e8c : mov al, 0x1a ; sub byte ptr [rax], al ; ret
0x00000000001aafd0 : mov al, 0x22 ; jmp qword ptr [rcx]
0x000000000012e0fc : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000012e0b4 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000001a5ed0 : mov al, 0x29 ; out dx, al ; jmp qword ptr [rdi]
0x0000000000135869 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000cdcde : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000000c52d5 : mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000012366f : mov al, 0x48 ; mov edi, ebx ; mov dword ptr [rbp - 0x44], eax ; call 0x1f8b1
0x000000000013c6b8 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000012670d : mov al, 0x49 ; mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00000000001b0520 : mov al, 0x5a ; cmc ; jmp qword ptr [rcx]
0x0000000000195930 : mov al, 0x5e ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x0000000000195718 : mov al, 0x61 ; cld ; inc dword ptr [rax + 0x61] ; cld ; call rax
0x00000000001b0750 : mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x00000000001b09a0 : mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c10 : mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x0000000000196088 : mov al, 0x77 ; cld ; jmp qword ptr [rax]
0x0000000000195e84 : mov al, 0x78 ; cld ; jmp qword ptr [rax]
0x0000000000189f9c : mov al, 0x81 ; cmc ; call rax
0x0000000000195c44 : mov al, 0x82 ; cld ; inc dword ptr [rax - 0x7e] ; cld ; call rax
0x0000000000195e1c : mov al, 0x86 ; cld ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x000000000019638c : mov al, 0x9d ; cld ; jmp qword ptr [rsi]
0x00000000001bc685 : mov al, 0xa ; sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x0000000000195080 : mov al, 0xa7 ; std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x000000000019613c : mov al, 0xa9 ; cld ; inc dword ptr [rax - 0x57] ; cld ; call rax
0x0000000000196314 : mov al, 0xad ; cld ; inc dword ptr [rax - 0x53] ; cld ; call rax
0x0000000000187dbc : mov al, 0xeb ; int1 ; jmp rax
0x0000000000187df4 : mov al, 0xec ; int1 ; inc eax ; in al, dx ; int1 ; call rax
0x0000000000185076 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x0000000000187e68 : mov al, 0xee ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x00000000001047ac : mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000001047b9 : mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x1047c7 ; call rbx
0x00000000000fde13 : mov al, 0xf3 ; ret
0x00000000001a3fa5 : mov al, 1 ; add ah, byte ptr [rbx + 0x41180e0a] ; ret
0x00000000001a9dc5 : mov al, 1 ; add bl, byte ptr [rax + 0x41180e0a] ; ret
0x0000000000187fb8 : mov al, 1 ; inc eax ; add edx, esi ; jmp rax
0x0000000000187fa8 : mov al, 1 ; jmp rax
0x00000000001a4d40 : mov al, 2 ; std ; jmp rsp
0x0000000000188004 : mov al, 3 ; call rax
0x00000000000a697c : mov al, 4 ; add byte ptr [rax], al ; ret
0x0000000000188024 : mov al, 4 ; call rax
0x00000000000a657c : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000001bc6dd : mov al, 9 ; sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x00000000001a45d5 : mov al, byte ptr [rax] ; add byte ptr [rax], ch ; je 0x1a45ce ; call qword ptr [rcx]
0x00000000000a2aab : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000a2ad9 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a2b5d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000016afb0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2a85 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001a15f8 : mov al, cl ; in al, dx ; call qword ptr [rax]
0x00000000000a2a95 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000197625 : mov bh, 0 ; add byte ptr [rsp + rbx*4 - 0x13], dl ; call rsp
0x000000000015b8c1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000002a21b : mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x0000000000029d92 : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x000000000006caa0 : mov bh, 0x48 ; add edi, esi ; jmp rdi
0x0000000000033411 : mov bh, 0x48 ; add esi, edi ; jmp rsi
0x0000000000170928 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x000000000002da67 : mov bh, 0x8b ; add al, 0x10 ; ret
0x0000000000002be8 : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00000000001840a4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002dd16 : mov bh, 0xc0 ; ret
0x00000000001193cc : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000019ad99 : mov bh, 0xf9 ; call rsp
0x0000000000003790 : mov bh, 0xfa ; add ebx, ebp ; in al, -0x12 ; jne 0x377a ; ret 0x975
0x00000000001951ad : mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951a9 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x0000000000195189 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001950d9 : mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019518d : mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001950dd : mov bh, 0xfd ; jmp rcx
0x00000000001951cd : mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000108a33 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010a456 : mov bh, 4 ; js 0x10a3e6 ; loopne 0x10a46d ; movzx eax, ax ; ret
0x000000000010a586 : mov bh, 4 ; js 0x10a513 ; loopne 0x10a593 ; ret
0x000000000010a616 : mov bh, 4 ; js 0x10a5a6 ; loopne 0x10a627 ; movzx eax, ax ; ret
0x000000000010a916 : mov bh, 4 ; js 0x10a8a6 ; loopne 0x10a929 ; movzx eax, ax ; ret
0x000000000010adef : mov bh, 4 ; js 0x10ad7f ; loopne 0x10ae06 ; movzx eax, ax ; ret
0x000000000010aeef : mov bh, 4 ; js 0x10ae7c ; loopne 0x10aefc ; ret
0x000000000010af6f : mov bh, 4 ; js 0x10aeff ; loopne 0x10af80 ; movzx eax, ax ; ret
0x000000000010b1ef : mov bh, 4 ; js 0x10b17f ; loopne 0x10b202 ; movzx eax, ax ; ret
0x000000000002dd0f : mov bh, 4 ; js 0x2dc9f ; loopne 0x2dd26 ; movzx eax, ax ; ret
0x000000000002dd4f : mov bh, 4 ; js 0x2dcdf ; loopne 0x2dd60 ; movzx eax, ax ; ret
0x000000000002ddef : mov bh, 4 ; js 0x2dd7f ; loopne 0x2de02 ; movzx eax, ax ; ret
0x000000000002decf : mov bh, 4 ; js 0x2de5c ; loopne 0x2dedc ; ret
0x000000000002df48 : mov bh, 4 ; js 0x2ded5 ; loopne 0x2df55 ; ret
0x000000000002df58 : mov bh, 4 ; js 0x2dee8 ; loopne 0x2df6f ; movzx eax, ax ; ret
0x000000000002df98 : mov bh, 4 ; js 0x2df28 ; loopne 0x2dfa9 ; movzx eax, ax ; ret
0x000000000002e038 : mov bh, 4 ; js 0x2dfc8 ; loopne 0x2e04b ; movzx eax, ax ; ret
0x00000000001857b3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f5f01 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000076f91 : mov bh, bh ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x000000000019aca9 : mov bh, cl ; call rsp
0x000000000018c155 : mov bh, dl ; call rax
0x000000000018c151 : mov bh, dl ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x000000000017221e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000006bc81 : mov bl, 0x11 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000ada8c : mov bl, 0x48 ; mov eax, edx ; ret
0x00000000000e510c : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x0000000000185183 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000196751 : mov bl, 0xe8 ; call rsp
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001044bb : mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010454e : mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x10455c ; call rbx
0x0000000000199821 : mov bl, 0xf6 ; jmp rsp
0x0000000000003af9 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000f34f1 : mov bl, 0xf9 ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x000000000008783c : mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000199eed : mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x000000000005057d : mov bl, byte ptr [rsi - 0x76fffff6] ; ret 0xe680
0x000000000011d12d : mov bl, dh ; lcall ptr [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000126711 : mov byte ptr [r11], 0 ; ret
0x0000000000082f10 : mov byte ptr [r8 + rbx], r9b ; mov rax, r8 ; pop rbx ; ret
0x000000000007763c : mov byte ptr [r8 - 0x75], r9b ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ff289 : mov byte ptr [r8 - 1], 0 ; ret
0x000000000002fa5c : mov byte ptr [rax + 0x39], ah ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000013d6bc : mov byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000082f11 : mov byte ptr [rax + rbx], cl ; mov rax, r8 ; pop rbx ; ret
0x0000000000024208 : mov byte ptr [rax + rcx*2], 0x83 ; ret
0x0000000000045af9 : mov byte ptr [rax + rdx], 0 ; ret
0x00000000001a7ff8 : mov byte ptr [rax + rsi*8], bh ; jmp qword ptr [rbx]
0x000000000019c2f8 : mov byte ptr [rax - 0x18], bh ; call qword ptr [rax]
0x000000000007763d : mov byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000ff28a : mov byte ptr [rax - 1], 0 ; ret
0x0000000000121576 : mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000010e70d : mov byte ptr [rax], 0x20 ; jmp 0x10e6d9
0x0000000000104bee : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003596d : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x00000000000358d5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a56d2 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000189ebc : mov byte ptr [rbp + rsi*8 - 1], dh ; sal dword ptr [rbx - 0xb], cl ; call rbx
0x000000000004f2aa : mov byte ptr [rbp - 0x4e8], dl ; call 0x8b5a8
0x000000000004f2a9 : mov byte ptr [rbp - 0x4e8], r10b ; call 0x8b5a9
0x00000000001a0ad8 : mov byte ptr [rbx - 0x15], dl ; call rcx
0x00000000001b05f8 : mov byte ptr [rbx - 0xb], bl ; jmp qword ptr [rcx]
0x00000000000fdc26 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000126712 : mov byte ptr [rbx], 0 ; ret
0x0000000000002f96 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000977a4 : mov byte ptr [rcx + 0xf], 0x94 ; ret 0x8440
0x0000000000168c73 : mov byte ptr [rcx + 2], dl ; ret
0x0000000000168c92 : mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cd3 : mov byte ptr [rcx + 8], dl ; ret
0x000000000009ea33 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x000000000002be46 : mov byte ptr [rcx + rax - 0x3f], cl ; jmp rcx
0x000000000009edeb : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x000000000009ed30 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009ee6a : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000004821a : mov byte ptr [rcx], 0x48 ; cmp esi, edx ; jne 0x48219 ; xor eax, eax ; ret
0x000000000002d50c : mov byte ptr [rcx], 0x83 ; ret
0x00000000000e45c1 : mov byte ptr [rcx], 0xf ; test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x00000000001a69d0 : mov byte ptr [rcx], al ; ret
0x0000000000168c50 : mov byte ptr [rcx], dl ; ret
0x00000000000a9d4a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a82eb : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a6b0b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a9d5b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a74a8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a5e38 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a9d60 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d82 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9da0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dc0 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a751e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a5e8e : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a8371 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a6b61 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a9de1 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9de6 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e02 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e22 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e42 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a83f3 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a6be3 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a9e63 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a75a0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a5f10 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a9e68 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e8a : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec8 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee4 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f04 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f24 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f44 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a6ce5 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a9f65 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9f6a : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9fba : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c90 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cae : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9cce : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cf0 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d10 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d30 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc6 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000123bd2 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000123bd1 : mov byte ptr [rdi + 1], sil ; ret
0x0000000000123da0 : mov byte ptr [rdi + 2], 0 ; jne 0x123df8 ; mov eax, r8d ; ret
0x000000000009ea73 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009e9e3 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a9bd8 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000a7356 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5d56 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8179 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6a29 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a9be9 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9bee : mov byte ptr [rdi + 3], ch ; ret
0x000000000009ea92 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ea02 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a9c06 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000a7372 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a5d72 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a81a7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6a47 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a9c17 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c1c : mov byte ptr [rdi + 5], ch ; ret
0x000000000009ea19 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a9c2e : mov byte ptr [rdi + 6], ch ; ret
0x0000000000130302 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a9c4c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d5910 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d58d1 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d5940 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d5967 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d59b0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d599d : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d5900 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d58e0 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a9c58 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000a5db3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000a81f9 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6a89 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a9c69 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9c6e : mov byte ptr [rdi + 9], ch ; ret
0x0000000000123db6 : mov byte ptr [rdi + rdx], 0 ; ret
0x000000000009e976 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000152b2b : mov byte ptr [rdi - 1], dl ; ret
0x00000000001bbf08 : mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000001bc028 : mov byte ptr [rdi - 8], ch ; call rcx
0x000000000009e9c0 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000d5930 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000d5989 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000a9bb2 : mov byte ptr [rdi], ch ; ret
0x000000000009fbc2 : mov byte ptr [rdi], cl ; ret
0x000000000009e911 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x00000000000a7330 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x00000000000a5d30 : mov byte ptr [rdi], dh ; ret
0x00000000000a8152 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6a02 : mov byte ptr [rdi], dl ; ret
0x00000000000a9bc2 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a585a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000016afd9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000000a2aae : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000016b007 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x00000000000a2adc : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000a57f0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000a2b60 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000011d098 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000105df1 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000b90ad : mov byte ptr [rdx], 0x83 ; ret 0x4102
0x000000000016afb2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000000a2a87 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000000713fa : mov byte ptr [rdx], bh ; movzx eax, dil ; ret
0x0000000000077f3a : mov byte ptr [rdx], bh ; ret
0x000000000011fe28 : mov byte ptr [rdx], ch ; add byte ptr [rbp + 0xa], dh ; jmp 0x11fe5a
0x00000000001035c4 : mov byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000713f9 : mov byte ptr [rdx], dil ; movzx eax, dil ; ret
0x0000000000077f39 : mov byte ptr [rdx], dil ; ret
0x000000000002cae8 : mov byte ptr [rip + 0x398faf], dl ; ret
0x0000000000002478 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x00000000001240fb : mov byte ptr [rsi + 3], bl ; pop rbx ; ret
0x00000000001240fa : mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x00000000000959b4 : mov byte ptr [rsi + rdx + 1], al ; jg 0x959a7 ; ret
0x000000000004a773 : mov byte ptr [rsi], al ; jne 0x4a757 ; mov rax, rsi ; ret
0x000000000004a6ef : mov byte ptr [rsi], dl ; jne 0x4a6df ; mov rax, rsi ; ret
0x00000000001975ed : mov ch, 0 ; add ah, dh ; xchg eax, esp ; in eax, dx ; jmp rsp
0x000000000007550f : mov ch, 0 ; add byte ptr [rax], al ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x000000000006e537 : mov ch, 0 ; add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000182bc2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000183f03 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000101ef7 : mov ch, 0x38 ; sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018529f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000ffd57 : mov ch, 0x9f ; clc ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x0000000000185c4a : mov ch, 0xab ; ret
0x000000000000378f : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x377b ; ret 0x975
0x00000000001742a7 : mov ch, 0xea ; push rbx ; ret
0x00000000001b1e19 : mov ch, 0xf5 ; call rdi
0x00000000001a7b69 : mov ch, 0xfb ; call qword ptr [rax]
0x0000000000199f25 : mov ch, 1 ; add byte ptr [rbx - 9], dh ; jmp rsp
0x000000000016f346 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a6cc5 : mov cl, 0 ; add byte ptr [rax - 0x23], bl ; out dx, al ; jmp qword ptr [rsi]
0x000000000008eadb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006c3f7 : mov cl, 0x11 ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x000000000017431a : mov cl, 0x15 ; pop rax ; and eax, 0x1740025 ; ret
0x0000000000003bac : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000caaa6 : mov cl, 0x35 ; insb byte ptr [rdi], dx ; ret 0x2f
0x0000000000039976 : mov cl, 0x35 ; lodsb al, byte ptr [rsi] ; ret 0x38
0x000000000007ef57 : mov cl, 0x35 ; ret
0x0000000000002be9 : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x00000000000c78ae : mov cl, 0x90 ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000142fa0 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001a6bd9 : mov cl, 0xee ; call qword ptr [rax]
0x0000000000104726 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000000d64b9 : mov cl, byte ptr [rax + 0x39] ; ret
0x000000000002c852 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000091c75 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x000000000009e993 : mov cl, byte ptr [rcx + 1] ; ret 0xff41
0x0000000000089d94 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x0000000000185072 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009fbc0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000abf1b : mov cl, dl ; and cl, 0xf ; je 0xabf47 ; ret
0x000000000018532c : mov cs, edi ; ret 0x8b36
0x000000000014b19e : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000a5d50 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001bd744 : mov dh, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x000000000007a60e : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d6 : mov dh, 0 ; pop rbx ; ret
0x0000000000077f63 : mov dh, 0 ; ret
0x000000000015b931 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008ecc4 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000033bd0 : mov dh, 0x17 ; test dl, dl ; jne 0x33bb6 ; ret
0x00000000000e3a6a : mov dh, 0x34 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4001
0x0000000000025944 : mov dh, 0x34 ; adc dword ptr [rax + 0x39], ecx ; ret 0x8840
0x000000000006c206 : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000012de42 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000000d7646 : mov dh, 0x41 ; cmp eax, esi ; jge 0xd7627 ; mov edx, eax ; jmp 0xd7630
0x00000000000cf265 : mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000000ceb89 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000006c853 : mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000046273 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000099b81 : mov dh, 0x45 ; ret
0x000000000009dab9 : mov dh, 0x45 ; ret 0x8348
0x0000000000099b72 : mov dh, 0x45 ; ret 0x8349
0x000000000004bc83 : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000171df1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171de1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171db1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000171dd1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171dc1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x00000000000e0f7a : mov dh, 0x48 ; xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x0000000000025c59 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d18f1 : mov dh, 0x4b ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000184062 : mov dh, 0x4e ; ret 0x474c
0x000000000010de23 : mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x0000000000123ebd : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000006ce29 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x00000000000d45cb : mov dh, 0x55 ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000099567 : mov dh, 0x55 ; ret
0x000000000009bb75 : mov dh, 0x55 ; ret 0x8348
0x0000000000099559 : mov dh, 0x55 ; ret 0x8349
0x0000000000171df5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000171de5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000171db5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000056807 : mov dh, 0x56 ; or al, 0x83 ; ret
0x000000000005678a : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf08
0x0000000000171dc5 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000195760 : mov dh, 0x60 ; cld ; inc dword ptr [rsi + 0x60] ; cld ; call rsi
0x000000000005e59e : mov dh, 0x75 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ec0e1 : mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x0000000000196184 : mov dh, 0xa8 ; cld ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000089385 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000012e658 : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b80c : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e1dd : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ea9af : mov dh, 0xc0 ; cmova eax, edx ; ret
0x00000000000bb1e6 : mov dh, 0xc0 ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cdbb7 : mov dh, 0xc0 ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003522d : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000d3faf : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c0eeb : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d0 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c2ff : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000010ebc1 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000006b31a : mov dh, 0xc0 ; neg eax ; ret
0x0000000000133986 : mov dh, 0xc0 ; pop rbp ; pop r12 ; ret
0x000000000012f5ab : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000c75bc : mov dh, 0xc0 ; pop rbx ; ret
0x0000000000035f2a : mov dh, 0xc0 ; ret
0x00000000000aabe8 : mov dh, 0xc1 ; pop rbx ; ret
0x00000000000aac10 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000007a78e : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001193be : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000077f33 : mov dh, 0xc7 ; mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000c3256 : mov dh, 0xc7 ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000713fe : mov dh, 0xc7 ; ret
0x00000000001852a4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000c31db : mov dh, 0xd1 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000008ecea : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000e1260 : mov dh, 0xd6 ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x000000000008b141 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016e424 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000005c1eb : mov dh, 0xe4 ; movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x000000000005c418 : mov dh, 0xe4 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d9b13 : mov dh, 0xed ; movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000acb02 : mov dh, 0xf3 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000003340c : mov dh, 0xf6 ; movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x000000000007a621 : mov dh, 2 ; ret
0x00000000000e5702 : mov dh, 4 ; adc byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d71dc : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000016e421 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecc1 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008b144 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000188695 : mov dh, bl ; dec dword ptr [rdi] ; mov ebx, esi ; jmp rdx
0x0000000000188709 : mov dh, bl ; push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x000000000007cb14 : mov dh, byte ptr [rax + rax] ; ret
0x000000000006dcb8 : mov dh, byte ptr [rax] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x00000000000aad7c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000001a6941 : mov dh, ch ; call qword ptr [rsi]
0x00000000001a6971 : mov dh, ch ; jmp rbx
0x000000000018c154 : mov dil, dl ; call rax
0x0000000000003aa4 : mov dl, 0x1e ; ret
0x00000000000ac87a : mov dl, 0x31 ; or al, 0 ; ret
0x00000000000c5263 : mov dl, 0x48 ; add edx, esi ; jmp rdx
0x0000000000195a04 : mov dl, 0x52 ; cld ; jmp qword ptr [rdx]
0x0000000000195804 : mov dl, 0x5c ; cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x00000000001747ad : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000195cf0 : mov dl, 0x84 ; cld ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x00000000001961e8 : mov dl, 0xab ; cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x0000000000065d59 : mov dl, 0xeb ; xchg eax, ecx ; mov rdi, r15 ; call 0x71fd8
0x00000000001045e3 : mov dl, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000104684 : mov dl, 0xf1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000104676 : mov dl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x104684 ; call rbx
0x0000000000073d16 : mov dl, 1 ; add byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], cl ; ret 0x2b48
0x000000000010ab45 : mov dl, 3 ; add al, 0xa ; ret
0x00000000000ad172 : mov dl, byte ptr [rax + 0x31] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000a6a23 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a6a42 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6a83 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x0000000000152bb0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000a8150 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a6a00 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a9bc0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x0000000000189fa1 : mov dr0, ebp ; jmp rsi
0x000000000011f34e : mov dr1, word ptr [rdx + 0x448b0006] ; ret 0x4804
0x00000000001073d2 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000cd224 : mov dword ptr [0x2d0], eax ; ret
0x00000000000bb63f : mov dword ptr [r10 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000007ef06 : mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x00000000000bf1e3 : mov dword ptr [r12], 1 ; jmp 0xbf1b8
0x000000000012d8ae : mov dword ptr [r14], 0 ; ret
0x0000000000065ac7 : mov dword ptr [r14], r13d ; jmp 0x64bfa
0x0000000000123f60 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x000000000003acb3 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000123ec4 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000001157d0 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000ac917 : mov dword ptr [r9 + 8], esi ; ret
0x000000000009fbb6 : mov dword ptr [r9 - 2], ecx ; ret
0x000000000009fba1 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000071c39 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c79 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077469 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x0000000000071c3d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000072c77 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000023acc : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000023acf : mov dword ptr [rax + 0x54], edx ; ret
0x000000000006b46b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000007bb1a : mov dword ptr [rax + 8], 0 ; ret
0x000000000008f30e : mov dword ptr [rax + rdx - 2], ecx ; ret
0x000000000005bd92 : mov dword ptr [rax - 0x7d], ecx ; ret 0x8d01
0x000000000013c50d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000fd2c8 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000001025a8 : mov dword ptr [rax], 0x16 ; ret
0x00000000000bb740 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000033ea0 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x000000000008241b : mov dword ptr [rax], 0xc ; mov rax, rcx ; ret
0x0000000000082d88 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001a8205 : mov dword ptr [rax], 0xf0472800 ; jmp qword ptr [rdi]
0x00000000000fce14 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000c80d8 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000021228 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x00000000000abbd3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001a4405 : mov dword ptr [rax], eax ; add byte ptr [rax], bl ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rcx]
0x00000000000ea914 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x0000000000072165 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705ca : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000005fb88 : mov dword ptr [rax], edi ; jmp 0x5fb51
0x0000000000062807 : mov dword ptr [rax], edi ; jmp 0x627d0
0x00000000000ff1c1 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000123f61 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000084116 : mov dword ptr [rax], edi ; ret
0x0000000000107293 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ac951 : mov dword ptr [rax], edx ; jne 0xac94d ; ret
0x0000000000123cca : mov dword ptr [rax], edx ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x000000000003acb4 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000ea96a : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000720a5 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000123ec5 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x000000000002d9d3 : mov dword ptr [rax], edx ; ret
0x0000000000072ef1 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000ea913 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000120ae3 : mov dword ptr [rbp + 0x2a], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x00000000000f5c21 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d30e4 : mov dword ptr [rbp - 0x2888], esi ; sub r10, rax ; jmp 0xd310b
0x0000000000123673 : mov dword ptr [rbp - 0x44], eax ; call 0x1f8ad
0x000000000004d64e : mov dword ptr [rbp - 0x4e8], esi ; jmp rax
0x0000000000069f55 : mov dword ptr [rbp - 0x518], ecx ; jmp 0x661ec
0x0000000000023656 : mov dword ptr [rbp - 0x58], edx ; call 0x1f8a5
0x0000000000113d8d : mov dword ptr [rbp - 0x70], eax ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000001146c3 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r13 ; call rax
0x000000000011491c : mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000113d93 : mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000011433a : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000114800 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000001142d4 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x0000000000113e63 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x000000000005224f : mov dword ptr [rbp - 0xb8], ecx ; mov rdi, rbx ; call rax
0x0000000000141f3d : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044c91 : mov dword ptr [rbp], ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000119275 : mov dword ptr [rbp], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a5fa : mov dword ptr [rbp], edx ; call rax
0x0000000000070982 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070981 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002a6d1 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078457 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000c84b8 : mov dword ptr [rbx + 0x10], eax ; mov rsi, rbp ; xor edx, edx ; jmp 0xc848e
0x00000000001435b6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010ec74 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013c185 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000014356e : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000010eca4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000076ba5 : mov dword ptr [rbx + 0x18], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a3 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000013c1d9 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e838b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000077495 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000891b9 : mov dword ptr [rbx + 0x30], ecx ; call rcx
0x00000000000891b8 : mov dword ptr [rbx + 0x30], r9d ; call rcx
0x000000000003522f : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000fc1b1 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x000000000008926e : mov dword ptr [rbx + 0x48], ecx ; call rcx
0x000000000007b20b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000072dba : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079832 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000071cc4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000072ad8 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000078327 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000002a6e7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000010ec44 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000035e08 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007b42a : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008964d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102592 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000000d21d1 : mov dword ptr [rbx], eax ; add byte ptr [rcx - 0x77], al ; ret
0x000000000013c3a3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000007b52c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001437e1 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013822f : mov dword ptr [rbx], eax ; pop rbx ; ret
0x0000000000102532 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000136f10 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006df3a : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000072bdc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000891b6 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x0000000000047d7c : mov dword ptr [rbx], edx ; jg 0x47c91 ; pop rbx ; ret
0x00000000000896d3 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a6 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000008926b : mov dword ptr [rbx], esi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000001322d4 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00000000001350c8 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x0000000000135025 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x00000000001350f5 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000002057d : mov dword ptr [rcx + 0x968], eax ; ret
0x0000000000168cb2 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000ac050 : mov dword ptr [rcx + 4], eax ; jne 0xac01e ; ret
0x0000000000168ca3 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000ac04f : mov dword ptr [rcx + 4], r8d ; jne 0xac01f ; ret
0x0000000000168d14 : mov dword ptr [rcx + 5], edx ; ret
0x0000000000168d24 : mov dword ptr [rcx + 6], edx ; ret
0x0000000000168cf3 : mov dword ptr [rcx + 7], edx ; ret
0x0000000000168ce4 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000ac918 : mov dword ptr [rcx + 8], esi ; ret
0x000000000009e946 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x00000000000481cb : mov dword ptr [rcx + rsi*8], eax ; xor eax, eax ; pop rbx ; ret
0x000000000010902f : mov dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x000000000009fbb7 : mov dword ptr [rcx - 2], ecx ; ret
0x000000000009fba2 : mov dword ptr [rcx - 4], ecx ; ret
0x000000000009fb91 : mov dword ptr [rcx - 8], ecx ; ret
0x00000000000d15cc : mov dword ptr [rcx], 0xdf75d284 ; ret
0x0000000000199615 : mov dword ptr [rcx], eax ; add byte ptr [rsi + rsi*2 - 0xa], ah ; jmp rsp
0x00000000000d6cb2 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000006045c : mov dword ptr [rcx], eax ; jmp 0x60425
0x000000000003577a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000071277 : mov dword ptr [rcx], eax ; ret
0x0000000000075664 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000123f64 : mov dword ptr [rcx], ecx ; ret
0x00000000000710d1 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000123f38 : mov dword ptr [rcx], edi ; ret
0x000000000008e837 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x0000000000168c71 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168c90 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x0000000000168cd1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168cb0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x0000000000168cf1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d01 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d11 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d21 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d31 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d41 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000007d722 : mov dword ptr [rcx], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000168ca0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x0000000000168ce1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000123ec8 : mov dword ptr [rcx], edx ; ret
0x00000000000f688b : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f68c2 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x00000000000a74bd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a830d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a74fb : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a834b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a757d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a83cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a5e8b : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a6b5e : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5f0d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000048b3f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a9d7d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9dbb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9e3d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a6be0 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5f50 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f70 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f31 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000f68b0 : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x00000000000a75e3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a8433 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a5f53 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a9ea3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000013bde0 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000007b133 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077837 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000a75c5 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8415 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a7603 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a8453 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a5f35 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a9e85 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec3 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013be72 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000013bda6 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000bf70e : mov dword ptr [rdi + 0x20], 0 ; jmp 0xbb94a
0x000000000010e70a : mov dword ptr [rdi + 0x28], ecx ; mov byte ptr [rax], 0x20 ; jmp 0x10e6dc
0x00000000001358dc : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000013bf21 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d6b9a : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d6b99 : mov dword ptr [rdi + 0x2c], r8d ; mov dword ptr [rdi + 0x30], r8d ; ret
0x00000000000d6b9e : mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d6b9d : mov dword ptr [rdi + 0x30], r8d ; ret
0x0000000000094cd1 : mov dword ptr [rdi + 0x38], ecx ; ret
0x0000000000135894 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000208ed : mov dword ptr [rdi + 0x48], 0x4804e7c1 ; add edi, ebp ; call rax
0x000000000007b163 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007eacb : mov dword ptr [rdi + 0x58], ecx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036049 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000f5eee : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000ac252 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012300f : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000a753d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a838d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a5ead : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a9dfd : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a74db : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a832b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a755d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a83ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a5e6b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9d9b : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9e1d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b775 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b5b8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b858 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000015b705 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b548 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003b373 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000a73a7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a81d7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000015b695 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b4d8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5d97 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a9c47 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x000000000009ea53 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e9b3 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007eace : mov dword ptr [rdi + 4], eax ; ret
0x000000000003b36d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000009eaa3 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81b9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000015b468 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009e9a3 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000a5d89 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a9c29 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000f5f40 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009ea52 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009e9b2 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a743b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a827b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015b3f8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dfb : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a9ceb : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a745b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a829b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015b388 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e0b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a9d0b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a73f9 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8239 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a747b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a82bb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015b318 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dd9 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a9ca9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9d2b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ff1f8 : mov dword ptr [rdi + 8], 0 ; ret
0x00000000000aca35 : mov dword ptr [rdi + 8], eax ; je 0xac9f0 ; mov rax, rbx ; pop rbx ; ret
0x000000000007b137 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000048ac4 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000000a821b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a7419 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8259 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a73db : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000482f4 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000003ac94 : mov dword ptr [rdi + 8], edx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac85 : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a9c8b : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cc9 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000fc322 : mov dword ptr [rdi + 8], esi ; ret
0x0000000000036472 : mov dword ptr [rdi + rax*8], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000124048 : mov dword ptr [rdi + rdx + 0x10], edx ; ret
0x0000000000124043 : mov dword ptr [rdi + rdx + 8], ecx ; mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000014db33 : mov dword ptr [rdi + rdx - 2], ecx ; ret
0x000000000008f315 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000008f31e : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x0000000000152875 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528b3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048a2f : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000152bfc : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015adc8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152ddc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad48 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fcc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015acc8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015319d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac39 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015339d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015aba9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015359d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab19 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a6d20 : mov dword ptr [rdi - 1], edx ; ret
0x0000000000152f7d : mov dword ptr [rdi - 2], ecx ; ret
0x0000000000152d95 : mov dword ptr [rdi - 2], edx ; ret
0x0000000000152f79 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000009e8ff : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x0000000000153359 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152a2f : mov dword ptr [rdi - 4], edx ; ret
0x000000000009e95b : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000153356 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e8e5 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000153556 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e979 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000153756 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000489ba : mov dword ptr [rdi - 8], ecx ; ret
0x00000000001528b7 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000152a2c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b28 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152a74 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae48 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000003a7a0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x00000000000c038c : mov dword ptr [rdi], eax ; jmp 0xbff1f
0x00000000000ff1e5 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60b : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x00000000000489b4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048abe : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000003655b : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000054d86 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009e922 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x000000000009ea80 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a7375 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73c7 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a7354 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5d54 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a8177 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a6a27 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009ea00 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a81a5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a6a45 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a81f7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a6a87 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a73a5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000000a81d5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a5d95 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009e9b0 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000a73f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a8237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a5dd7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a7417 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000000a8257 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a5de7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008f313 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000aa5f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000a5df8 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5e08 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5e18 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008f31b : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009e9f0 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009e9a0 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a5d86 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5dc8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000aa603 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000094a97 : mov dword ptr [rdi], ecx ; pop rbx ; ret
0x000000000001f9c3 : mov dword ptr [rdi], ecx ; ret
0x00000000000a7344 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8164 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a7362 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a8192 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a73b4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6d40 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a6d81 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6da1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6db1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dc1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dd1 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d50 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a6d91 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000034dd6 : mov dword ptr [rdi], edx ; ret
0x00000000000a9bd4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9c02 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c54 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000350c9 : mov dword ptr [rdi], esi ; fld xword ptr [rsp - 0x18] ; ret
0x000000000009ea61 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9e1 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x000000000009fb9f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000014db1b : mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000004a07d : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009fb8e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014dafe : mov dword ptr [rdi], esi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000009e9d1 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x000000000009fbb3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000014db30 : mov dword ptr [rdi], esi ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000004a0a3 : mov dword ptr [rdi], esi ; ret
0x00000000000f5f21 : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x000000000013599c : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000006dcb7 : mov dword ptr [rdx + 0x130], ecx ; ret
0x00000000000784b5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000094d5f : mov dword ptr [rdx + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000710ce : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071274 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000012e7b0 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000012e78c : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012e790 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000132370 : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x000000000013587c : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00000000000bb640 : mov dword ptr [rdx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000016b037 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x00000000000a2b1c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000016b019 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afe : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000016b0cb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000016b049 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000166cf9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000016b0eb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000016b069 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000166d09 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000016b089 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000016b10b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000000a2ba0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000006b414 : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016b0a9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000016af9b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000a2b82 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000001322f1 : mov dword ptr [rdx + 8], edi ; ret
0x000000000008e67b : mov dword ptr [rdx - 0x76b3ffcd], eax ; ret 0x8348
0x000000000006e574 : mov dword ptr [rdx], 5 ; pop rbx ; ret
0x00000000000fc6df : mov dword ptr [rdx], eax ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000016afc4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000016aff2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000016af44 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000078961 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003545a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x000000000004a07f : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000c9f7d : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000000791c0 : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000a2a99 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000c9762 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000002e19d : mov dword ptr [rdx], eax ; ret
0x00000000000762df : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000aae15 : mov dword ptr [rdx], ecx ; jne 0xaae0d ; ret
0x0000000000071f86 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000ea667 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x000000000009ed25 : mov dword ptr [rdx], ecx ; ret
0x00000000000e7acb : mov dword ptr [rdx], edi ; ret
0x00000000000c9dd3 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x00000000001322ee : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000094f87 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c9f7c : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x00000000001742df : mov dword ptr [rip + 0x25245b], ebx ; jne 0x1742d1 ; pop rbx ; ret
0x0000000000115aa8 : mov dword ptr [rip + 0x2b2672], eax ; pop rbp ; ret
0x0000000000109520 : mov dword ptr [rip + 0x2bad1a], ebx ; pop rbx ; ret
0x000000000010146a : mov dword ptr [rip + 0x2c2da0], edi ; ret
0x00000000000fe4b5 : mov dword ptr [rip + 0x2c72e5], eax ; mov rdx, rax ; jmp 0xfe457
0x00000000000368bb : mov dword ptr [rip + 0x38d7cb], eax ; mov eax, edx ; ret
0x00000000000368ac : mov dword ptr [rip + 0x38d7d6], edx ; ret
0x000000000001f928 : mov dword ptr [rip + 0x3a99da], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000e8874 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003b296 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003ac00 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003ac04 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000077f36 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rdx], dil ; ret
0x00000000000fc197 : mov dword ptr [rsi + 0x48], eax ; ret
0x00000000000fb566 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000f5e5f : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003b2e0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003b327 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000ac098 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e8857 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000012d891 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e8870 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048034 : mov dword ptr [rsi + rax*8], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000bb251 : mov dword ptr [rsi + rcx], edx ; jne 0xbb24e ; ret
0x00000000000aa606 : mov dword ptr [rsi - 2], ecx ; ret
0x00000000000aa5f9 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000012d8af : mov dword ptr [rsi], 0 ; ret
0x000000000009e8e3 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x000000000012d940 : mov dword ptr [rsi], 0xa ; ret
0x000000000012d930 : mov dword ptr [rsi], 0xb ; ret
0x000000000012d960 : mov dword ptr [rsi], 0xc ; ret
0x000000000012d950 : mov dword ptr [rsi], 8 ; ret
0x00000000000bf4a8 : mov dword ptr [rsi], eax ; mov rdi, rbx ; call 0x8b727
0x000000000007783b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000065ac8 : mov dword ptr [rsi], ebp ; jmp 0x64bf9
0x000000000012357f : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x0000000000123013 : mov dword ptr [rsi], edi ; ret
0x0000000000119321 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x000000000003acb6 : mov dword ptr [rsi], edx ; ret
0x0000000000081a68 : mov dword ptr [rsp + 0x10], eax ; call rdi
0x0000000000034f35 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x0000000000081951 : mov dword ptr [rsp + 0x10], eax ; xor edi, edi ; call qword ptr [rax]
0x000000000007ef07 : mov dword ptr [rsp + 0x14], eax ; pop r12 ; ret
0x0000000000081a63 : mov dword ptr [rsp + 0x18], eax ; mov qword ptr [rsp + 0x10], r8 ; call rdi
0x000000000012c7b7 : mov dword ptr [rsp + 0x18], edx ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x000000000008162f : mov dword ptr [rsp + 0x20], edx ; call qword ptr [rax]
0x00000000000819ab : mov dword ptr [rsp + 0x20], edx ; call rax
0x00000000000819a6 : mov dword ptr [rsp + 0x28], eax ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bf6d : mov dword ptr [rsp + 0x28], ecx ; call 0x1381f6
0x00000000000335d9 : mov dword ptr [rsp + 0x28], ecx ; call 0x1f8a6
0x00000000000e1c68 : mov dword ptr [rsp + 0x40], edi ; add rax, rdx ; jmp rax
0x00000000000bc208 : mov dword ptr [rsp + 0xb8], esi ; call r12
0x0000000000089220 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000102d06 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013b46d : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013c2ac : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x0000000000035003 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004a216 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a5 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000000bf1e4 : mov dword ptr [rsp], 1 ; jmp 0xbf1b7
0x0000000000089590 : mov dword ptr [rsp], eax ; call qword ptr [rdx]
0x000000000012a4d3 : mov dword ptr [rsp], ecx ; call r12
0x00000000000cd223 : mov dword ptr fs:[0x2d0], eax ; ret
0x00000000000fd2c7 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000001025a7 : mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000bb73f : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000082d87 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000c80d7 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000021227 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x000000000005fb87 : mov dword ptr fs:[rax], edi ; jmp 0x5fb52
0x0000000000062806 : mov dword ptr fs:[rax], edi ; jmp 0x627d1
0x00000000000ff1c0 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000ea969 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x00000000000ea912 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x0000000000121e30 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006045b : mov dword ptr fs:[rcx], eax ; jmp 0x60426
0x0000000000035779 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000006e573 : mov dword ptr fs:[rdx], 5 ; pop rbx ; ret
0x0000000000078960 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000035459 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000c9dd2 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000c9e9c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x000000000014db1a : mov dword ptr ss:[rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000152d90 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000a5d40 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000fb846 : mov eax, 0 ; cmova eax, edx ; ret
0x0000000000108a76 : mov eax, 0 ; cmovae rax, rsi ; ret
0x00000000000d6c0c : mov eax, 0 ; cmove eax, esi ; ret
0x0000000000097485 : mov eax, 0 ; cmovne rax, rdi ; ret
0x000000000012bf34 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000aacc2 : mov eax, 0x10 ; pop rbx ; ret
0x00000000001238e0 : mov eax, 0x100 ; ret
0x00000000001238da : mov eax, 0x101 ; ret
0x00000000001238e6 : mov eax, 0x102 ; ret
0x00000000001238d2 : mov eax, 0x104 ; ret
0x00000000000fcced : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000f68a3 : mov eax, 0x16 ; jbe 0xf68b8 ; ret
0x0000000000087604 : mov eax, 0x16 ; je 0x87617 ; ret
0x00000000000f5f15 : mov eax, 0x16 ; je 0xf5f28 ; ret
0x00000000000877a0 : mov eax, 0x16 ; ret
0x00000000000f68d8 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x00000000001a738d : mov eax, 0x1d00000 ; out dx, eax ; jmp rsi
0x00000000000cdada : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000aacbb : mov eax, 0x20 ; pop rbx ; ret
0x00000000000cdabf : mov eax, 0x20 ; ret
0x000000000002def7 : mov eax, 0x200 ; ret
0x0000000000126a37 : mov eax, 0x200000 ; jmp 0x126a06
0x00000000000aacb4 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000bdc81 : mov eax, 0x39480030 ; ret 0x850f
0x00000000000aacad : mov eax, 0x40 ; pop rbx ; ret
0x00000000000cdb05 : mov eax, 0x40 ; ret
0x00000000000bc20b : mov eax, 0x41000000 ; call rsp
0x00000000001831bb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008f7fa : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000012b884 : mov eax, 0x5b0029d4 ; ret
0x00000000000f6ea0 : mov eax, 0x5f ; syscall ; ret
0x00000000000aaca6 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000cd240 : mov eax, 0x66 ; syscall ; ret
0x00000000000cd260 : mov eax, 0x68 ; syscall ; ret
0x00000000000cd250 : mov eax, 0x6b ; syscall ; ret
0x00000000000cd270 : mov eax, 0x6c ; syscall ; ret
0x00000000000cd230 : mov eax, 0x6e ; syscall ; ret
0x00000000000cd480 : mov eax, 0x6f ; syscall ; ret
0x00000000000cd9d9 : mov eax, 0x7d00 ; ret
0x00000000000cda08 : mov eax, 0x7e ; ret
0x00000000000cd9aa : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000cd95b : mov eax, 0x7f ; ret
0x00000000000aac9f : mov eax, 0x80 ; pop rbx ; ret
0x000000000005cd94 : mov eax, 0x85fffff9 ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000188ac8 : mov eax, 0x89fff3ad ; stosb byte ptr [rdi], al ; call rax
0x00000000000f5c34 : mov eax, 0x89fffffe ; ret 0xcb8
0x00000000000749b1 : mov eax, 0x8c48348 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000003184 : mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000001323ff : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000dc0f0 : mov eax, 0xc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc0ba : mov eax, 0xc ; ret
0x00000000000bc370 : mov eax, 0xc9 ; syscall ; ret
0x0000000000119310 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x00000000001192a9 : mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000115082 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000138366 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001077b0 : mov eax, 0xe4 ; syscall ; ret
0x000000000006960f : mov eax, 0xe9fffffb ; ret 0xffff
0x0000000000034bc4 : mov eax, 0xf0014d6 ; push rsp ; ret
0x00000000000cd9ff : mov eax, 0xfa ; ret
0x00000000000cda20 : mov eax, 0xfc17 ; ret
0x00000000000cd98c : mov eax, 0xfde8 ; jne 0xcd963 ; ret
0x00000000000cda10 : mov eax, 0xfffa ; ret
0x00000000000cbfac : mov eax, 0xfffffff2 ; ret
0x00000000000865e2 : mov eax, 0xfffffffe ; pop rbx ; ret
0x00000000000f6ada : mov eax, 0xffffffff ; add rsp, 0x18 ; ret
0x000000000008b452 : mov eax, 0xffffffff ; cmovae eax, ecx ; ret
0x0000000000073021 : mov eax, 0xffffffff ; ja 0x73038 ; ret
0x0000000000070b81 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000039cee : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007044c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000033f0e : mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000353e7 : mov eax, 0xffffffff ; ret
0x00000000000fde5f : mov eax, 1 ; add rsp, 8 ; ret
0x00000000001728f0 : mov eax, 1 ; jg 0x172909 ; neg eax ; ret
0x00000000000abc60 : mov eax, 1 ; jg 0xabc72 ; neg eax ; ret
0x0000000000170846 : mov eax, 1 ; jl 0x170859 ; neg eax ; ret
0x00000000000cdbf2 : mov eax, 1 ; js 0xcdc08 ; ret
0x000000000004a09d : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x00000000000d97d6 : mov eax, 1 ; mov rdx, r8 ; jmp 0xd97f1
0x0000000000070b6d : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x000000000007ba62 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ea20 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000012b010 : mov eax, 1 ; pop rbx ; ret
0x0000000000048063 : mov eax, 1 ; ret
0x00000000000abf81 : mov eax, 2 ; ret
0x00000000001157c6 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000abf91 : mov eax, 3 ; ret
0x00000000000fdae2 : mov eax, 3 ; syscall ; mov eax, edx ; ret
0x0000000000122153 : mov eax, 3 ; syscall ; ret
0x00000000000abfa1 : mov eax, 4 ; ret
0x00000000000efc8c : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000010639f : mov eax, 5 ; pop rbx ; pop rbp ; ret
0x00000000000abfb1 : mov eax, 5 ; ret
0x00000000000abfc1 : mov eax, 6 ; ret
0x0000000000112f6c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000abfd1 : mov eax, 7 ; ret
0x00000000000aac98 : mov eax, 8 ; pop rbx ; ret
0x00000000000f5d37 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114918 : mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000033e8a : mov eax, dword ptr [r9 + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x0000000000106239 : mov eax, dword ptr [rax + 0x108] ; ret
0x00000000001434df : mov eax, dword ptr [rax + 0x128] ; jmp rax
0x0000000000109be0 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000071fbc : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000109990 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x0000000000128737 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128747 ; ret
0x00000000000fd398 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xfd3ab ; ret
0x0000000000072222 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000007206a : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000114999 : mov eax, dword ptr [rax + 0x30] ; ret
0x000000000010a307 : mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000105f8c : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x000000000007b708 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000134f74 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c3 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb71 : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000074f74 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000135814 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003a726 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002cb6e : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000013aa75 : mov eax, dword ptr [rax + 8] ; jmp rax
0x0000000000106229 : mov eax, dword ptr [rax + 8] ; ret
0x00000000000895cb : mov eax, dword ptr [rax + 8] ; test rax, rax ; jne 0x895c9 ; ret
0x000000000002def5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e0b7 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002da1f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002da68 : mov eax, dword ptr [rax + rdx] ; ret
0x000000000010ac94 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002b01f : mov eax, dword ptr [rax + rsi*8] ; test rax, rax ; je 0x2b031 ; call rax
0x000000000013aa6a : mov eax, dword ptr [rax] ; jmp rax
0x000000000002cb6c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000002decc : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000003a723 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001289b9 : mov eax, dword ptr [rax] ; ret
0x000000000007e06f : mov eax, dword ptr [rax] ; test rax, rax ; je 0x7e07f ; call rax
0x0000000000085566 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x85576 ; call rax
0x000000000006960d : mov eax, dword ptr [rbp - 0x448] ; jmp 0x65865
0x000000000010319c : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000222c1 : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000077491 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000113d90 : mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000001fc03 : mov eax, dword ptr [rbx + 4] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e731 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001381fa : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x138210 ; pop rbx ; ret
0x00000000000a2b19 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000166cf6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000166d06 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000a2b9d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000a2bbd : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000146caa : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000148582 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000033e8b : mov eax, dword ptr [rcx + rdx*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; ret
0x000000000016aff0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000132380 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a2ac5 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000016af41 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000166c11 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000016afc1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a2a96 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000072e6f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007c860 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007c888 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000115150 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x115168 ; ret
0x00000000000cc57d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xcc592 ; call rax
0x000000000013c1a3 : mov eax, dword ptr [rdi + 0x18] ; ret
0x000000000013bd41 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d88e : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000c8851 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000173f38 : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x173f4f ; call rax
0x00000000000abbe0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xabc68 ; ret
0x00000000000abbf5 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xabc68 ; ret
0x000000000012d8e7 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000013c120 : mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000774d1 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000abc00 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc68 ; ret
0x00000000000abc1b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xabc68 ; ret
0x00000000000abc30 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xabc68 ; ret
0x00000000000abc45 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xabc68 ; ret
0x00000000000abc50 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc68 ; ret
0x000000000012d91f : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c1 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f71 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000d7210 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000007cb31 : mov eax, dword ptr [rdi + 0x68] ; ret
0x0000000000075ad8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x75af0 ; ret
0x00000000000f5f30 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fc2d0 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000013b1f9 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e661 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013bb09 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb19 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013aa71 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013aa66 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000138999 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013ab51 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c467 : mov eax, dword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x00000000000ac61d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xac5f9 ; ret
0x0000000000077430 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000077400 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000135900 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000007c84f : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000115165 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000c8960 : mov eax, dword ptr [rdi] ; ret
0x0000000000077f00 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000077f10 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000133004 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133016 ; ret
0x0000000000133003 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133017 ; ret
0x0000000000139164 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x139176 ; ret
0x0000000000139163 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x139177 ; ret
0x00000000000ac6d8 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xac6d8 ; xor eax, eax ; ret
0x000000000002de83 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000aad77 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xaad69 ; ret
0x0000000000091c76 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000012dd78 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2d : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000074630 : mov eax, dword ptr [rdx] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e7ac8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000072167 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705cc : mov eax, dword ptr [rdx] ; ret
0x000000000007c841 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7c840 ; ret
0x0000000000140ee4 : mov eax, dword ptr [rip + 0x284526] ; call qword ptr [rax]
0x00000000001408d1 : mov eax, dword ptr [rip + 0x284b39] ; call qword ptr [rax]
0x0000000000120f91 : mov eax, dword ptr [rip + 0x2a48e1] ; ret
0x000000000010a301 : mov eax, dword ptr [rip + 0x2b9b69] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000008410f : mov eax, dword ptr [rip + 0x33fdcb] ; mov qword ptr [rax], rdi ; ret
0x0000000000081a85 : mov eax, dword ptr [rip + 0x342345] ; xor edi, edi ; call qword ptr [rax]
0x0000000000081860 : mov eax, dword ptr [rip + 0x34256a] ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007cb11 : mov eax, dword ptr [rip + 0x348a09] ; ret
0x0000000000036880 : mov eax, dword ptr [rip + 0x38d802] ; ret
0x0000000000036870 : mov eax, dword ptr [rip + 0x38d816] ; ret
0x000000000002d9cc : mov eax, dword ptr [rip + 0x39641e] ; mov qword ptr [rax], rdx ; ret
0x0000000000029c91 : mov eax, dword ptr [rip + 0x39bc59] ; ret
0x0000000000021a51 : mov eax, dword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a41 : mov eax, dword ptr [rip + 0x3a78d9] ; ret
0x0000000000114919 : mov eax, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x000000000002e0b1 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e0c1 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002cb49 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000010e0bb : mov eax, dword ptr [rsi] ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000720a7 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000c8b0e : mov eax, dword ptr [rsp + 0x10] ; call rax
0x000000000002082a : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000f0007 : mov eax, dword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf0049
0x000000000002436a : mov eax, dword ptr [rsp + 0x28] ; call rax
0x0000000000024d05 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x0000000000038fe7 : mov eax, dword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x0000000000112b55 : mov eax, dword ptr [rsp + 0x38] ; jmp 0x112b23
0x0000000000035839 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f6ab8 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000014378e : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000ba004 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003b039 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000cc39a : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xcc3ae ; call rax
0x00000000000fde10 : mov eax, dword ptr [rsp - 0x50] ; ret
0x00000000000cc270 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010a363 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a3c4 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000008308d : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000123db4 : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000210b1 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000fc49d : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c90 : mov eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000fc558 : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004a807 : mov eax, eax ; pop rbx ; ret
0x00000000000504ba : mov eax, eax ; ret
0x000000000007912a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012a26a : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000006e7db : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006eff9 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e2b5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d363 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000500e2 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000048433 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000079a9d : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e77 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9124 : mov eax, ebx ; call rax
0x0000000000096149 : mov eax, ebx ; jmp 0x95fa3
0x0000000000105def : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a836 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfea : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326ab : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003aaaf : mov eax, ebx ; pop rbx ; ret
0x0000000000101fba : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000000482f7 : mov eax, ecx ; adc eax, eax ; ret
0x000000000003a68c : mov eax, ecx ; or rax, rdx ; ret
0x0000000000087a5d : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000005b774 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033ea7 : mov eax, ecx ; ret
0x0000000000045a22 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x0000000000116431 : mov eax, edi ; add rsp, 8 ; ret
0x000000000002df20 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000119376 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000119350 : mov eax, edi ; bswap eax ; ret
0x000000000003a6a1 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000096e84 : mov eax, edi ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000ff287 : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000009ea17 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000002121b : mov eax, edi ; neg eax ; ret
0x000000000009f515 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009735a : mov eax, edi ; pop rbx ; ret
0x000000000002122e : mov eax, edi ; ret
0x0000000000119360 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003a632 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000011905a : mov eax, edi ; sar rax, 6 ; ret
0x00000000001193f6 : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000bb888 : mov eax, edx ; add rsp, 0x18 ; ret
0x00000000000fdd17 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000841ed : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d725 : mov eax, edx ; add rsp, 8 ; ret
0x0000000000110b1c : mov eax, edx ; cmove eax, ecx ; ret
0x0000000000097966 : mov eax, edx ; cmove rax, rbx ; pop rbx ; ret
0x00000000000cd1fb : mov eax, edx ; jle 0xcd20d ; ret
0x00000000000c9bdf : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000047a12 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000054b8a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084ba7 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000045c47 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000490b5 : mov eax, edx ; pop rbx ; ret
0x00000000000218a5 : mov eax, edx ; ret
0x0000000000034f01 : mov eax, edx ; sar eax, 0x10 ; ret
0x00000000000d72b3 : mov eax, edx ; shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x00000000000c9f7f : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000012e821 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9765 : mov eax, esi ; add rsp, 8 ; ret
0x000000000004a5be : mov eax, esi ; cmovae rax, rdi ; ret
0x00000000000352e7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000006fc84 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000c8503 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa18 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d4 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000006b633 : mov eax, esi ; pop rbx ; ret
0x000000000004a6f4 : mov eax, esi ; ret
0x0000000000172abb : mov eax, esi ; sub rax, rdx ; vzeroupper ; ret
0x000000000008f09c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c47a : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000717cb : mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c43c : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000123db3 : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000fc49c : mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c8f : mov eax, r8d ; pop rbp ; pop r12 ; ret
0x00000000000fc557 : mov eax, r8d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070fef : mov eax, r8d ; pop rbx ; ret
0x00000000000504b9 : mov eax, r8d ; ret
0x0000000000140537 : mov eax, r9d ; ret
0x00000000001a2acd : mov ebp, 0x41380e0a ; ret
0x00000000000fe529 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x000000000009f0f1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000009f101 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x000000000009f0e1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000010b894 : mov ebp, 0x8948002b ; ret 0x8d48
0x000000000013c4f3 : mov ebp, 0x8b48ffff ; cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000187c95 : mov ebp, 0xbfd8fffd ; std ; lcall ptr [rax] ; ret 0xfffd
0x000000000017d3c4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x0000000000195311 : mov ebp, 0xc180fffb ; sti ; call rax
0x0000000000181cfd : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000189140 : mov ebp, 0xc7fff450 ; push rax ; hlt ; call rcx
0x000000000009f161 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f141 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f121 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000009f212 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008d458 : mov ebp, 0xf80148c0 ; ret
0x000000000008d6dc : mov ebp, 0xf80148c6 ; ret
0x0000000000183de6 : mov ebp, 0xfb67d10d ; ret
0x000000000004dc26 : mov ebp, 0xfffffb08 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000004e1b6 : mov ebp, 0xfffffb10 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000564af : mov ebp, 0xfffffb58 ; call rax
0x000000000004c389 : mov ebp, 0xfffffb58 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x00000000000cf306 : mov ebp, 0xfffffcf8 ; call r12
0x00000000000ebeb4 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000ec6c6 : mov ebp, 0xfffffefc ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf0e9
0x00000000001347f1 : mov ebp, 0xffffff1c ; push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x00000000000ebc21 : mov ebp, 0xffffff78 ; call rbx
0x00000000000dc5de : mov ebp, cs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000012e7f8 : mov ebp, dr1 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000001bf1 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000132fec : mov ebp, eax ; call 0x12f2c4
0x00000000001027f7 : mov ebp, eax ; call rax
0x0000000000065979 : mov ebp, eax ; jmp 0x653d5
0x0000000000138529 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x13853d
0x0000000000103199 : mov ebp, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000352ed : mov ebp, ecx ; nop ; jmp rdx
0x0000000000198161 : mov ebp, edi ; jmp rsp
0x00000000000aebd8 : mov ebp, edi ; setne dl ; jmp 0xaebec
0x00000000000b14f9 : mov ebp, edi ; setne dl ; jmp 0xb150c
0x00000000000b3cb0 : mov ebp, edi ; setne dl ; jmp 0xb3ccc
0x000000000010359f : mov ebp, edi ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x000000000007d8ad : mov ebp, edx ; call qword ptr [r15]
0x0000000000173614 : mov ebp, esi ; call 0x1f8ac
0x000000000012a5d5 : mov ebp, esp ; call r15
0x0000000000115994 : mov ebp, esp ; pop rbp ; ret
0x00000000001b9084 : mov ebp, ss ; add dword ptr [rax], eax ; clc ; ret
0x0000000000173d1a : mov ebx, 0x1f0fffea ; add bl, dh ; ret
0x0000000000002d12 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x000000000007d269 : mov ebx, 0x441f0f66 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001029e9 : mov ebx, 0x49fff1ce ; mov edi, dword ptr [rsi] ; call rbx
0x0000000000058398 : mov ebx, 0x83ffffe5 ; ret
0x0000000000003671 : mov ebx, 0x952a6c41 ; ret
0x00000000000d5b63 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0x82eb
0x00000000001150b4 : mov ebx, 0xafb8341 ; je 0x1150c3 ; ret
0x0000000000181cfb : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000189264 : mov ebx, 0xc7fff453 ; push rbx ; hlt ; call rcx
0x0000000000132256 : mov ebx, 0xc8 ; call rax
0x000000000005f80c : mov ebx, 2 ; jmp 0x5baf7
0x00000000001a8684 : mov ebx, cs ; add byte ptr [rax], al ; call 0x131a76e8
0x00000000001153a2 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x0000000000085961 : mov ebx, eax ; call 0x81b84
0x00000000001035a6 : mov ebx, eax ; call rax
0x000000000012e26b : mov ebx, eax ; jne 0x12e209 ; xor eax, eax ; pop rbx ; ret
0x000000000012670f : mov ebx, eax ; mov byte ptr [r11], 0 ; ret
0x00000000000fca57 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037307 : mov ebx, eax ; mov rdi, r12 ; call r15
0x00000000001735c4 : mov ebx, ebp ; call 0x1f8ac
0x000000000002c376 : mov ebx, edi ; test rax, rax ; je 0x2c386 ; call rax
0x000000000010dff5 : mov ebx, edx ; jmp 0x10df20
0x00000000000ca7b5 : mov ebx, edx ; jmp 0xca688
0x0000000000188711 : mov ebx, esi ; jmp qword ptr [rsi]
0x0000000000188699 : mov ebx, esi ; jmp rdx
0x000000000012bef6 : mov ebx, esi ; sub rsp, 8 ; call 0x1381f8
0x00000000000d9b63 : mov ecx, 0x83000005 ; ret 0x3902
0x0000000000033edb : mov ecx, 0x8948fffe ; fucompi st(0) ; ret 0xfeb9
0x0000000000181cf9 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x0000000000033ee3 : mov ecx, 0xc031fffe ; pop rbx ; ret
0x000000000002b390 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2b3a2 ; call rcx
0x000000000012b757 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x0000000000047c94 : mov ecx, dword ptr [rcx + rax - 0x27] ; jmp rcx
0x000000000009fb9c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000013be80 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13be99 ; xor eax, eax ; ret
0x000000000013bec0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x13bed9 ; xor eax, eax ; ret
0x0000000000047bb6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x0000000000150fde : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000074f4b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000091c73 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000ac609 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xac607 ; ret
0x0000000000047f46 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000153353 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153553 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000153753 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a5d70 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5db1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000015b773 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b703 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b693 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000015b5b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b545 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b4d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b465 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b3f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b385 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b315 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b855 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000a5d51 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000135b7d : mov ecx, dword ptr [rsp + 0x10] ; call rcx
0x0000000000132745 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x0000000000137e1e : mov ecx, dword ptr [rsp + 0x18] ; lea r9, qword ptr [rsp + 0x3a] ; call qword ptr [rax]
0x000000000013254d : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x000000000012d4dd : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000d97d4 : mov ecx, eax ; mov eax, 1 ; mov rdx, r8 ; jmp 0xd97f3
0x000000000009ed34 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012d8fc : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000009ed46 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000012a9e1 : mov ecx, ebp ; call rbx
0x0000000000075291 : mov ecx, ebp ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad66a : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000002be41 : mov ecx, ebx ; movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000009ea2e : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000ad91d : mov ecx, edi ; call rbx
0x000000000010a439 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000014dc31 : mov ecx, edx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014dc34 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000007ba07 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000002185b : mov ecx, esi ; call rbx
0x000000000012a26d : mov ecx, esi ; mov rdi, r13 ; call r12
0x000000000010eea4 : mov edi, 0x2000004 ; call rax
0x0000000000105c60 : mov edi, 0x24448b48 ; or byte ptr [rax + 0x39], cl ; ret
0x00000000000332f0 : mov edi, 0x24448b48 ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001044ad : mov edi, 0x49ffffe3 ; mov edi, dword ptr [rdi] ; call rbx
0x000000000004764f : mov edi, 0x85000000 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x0000000000067898 : mov edi, 0x89000000 ; ret 0x348
0x00000000000c97e4 : mov edi, 0x8948002f ; ret 0x8d48
0x0000000000119859 : mov edi, 0x8949002a ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000019776d : mov edi, 0xbb840000 ; in eax, dx ; call rsp
0x000000000006ddd7 : mov edi, 0xe0 ; call rax
0x000000000006dd9b : mov edi, 0xe0 ; jmp rax
0x000000000009d9db : mov edi, 0xf700000b ; ret 0
0x00000000001a9a84 : mov edi, ds ; add byte ptr [rax], al ; test al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000000346bd : mov edi, dword ptr [rax + 0x28] ; call 0x1f8b1
0x000000000011e487 : mov edi, dword ptr [rax] ; call 0xf78b8
0x00000000000bb021 : mov edi, dword ptr [rax] ; call r14
0x0000000000102d03 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000cf305 : mov edi, dword ptr [rbp - 0x308] ; call r12
0x00000000000564ae : mov edi, dword ptr [rbp - 0x4a8] ; call rax
0x00000000000ccfde : mov edi, dword ptr [rbp - 0x58] ; call 0x1f8b1
0x00000000000ebc20 : mov edi, dword ptr [rbp - 0x88] ; call rbx
0x00000000000acb05 : mov edi, dword ptr [rbp] ; call r12
0x0000000000038f6d : mov edi, dword ptr [rbp] ; call r14
0x000000000010295a : mov edi, dword ptr [rbp] ; call rbx
0x0000000000173d19 : mov edi, dword ptr [rbx + 0x1f0fffea] ; add bl, dh ; ret
0x000000000011fd3d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x11fd39 ; pop rbx ; ret
0x000000000012800c : mov edi, dword ptr [rcx + 6] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000133001 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x133019 ; ret
0x0000000000139161 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x139179 ; ret
0x0000000000047bba : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006ddd6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006dd9a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000102908 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000072fe8 : mov edi, dword ptr [rdx + 0x40] ; jmp 0x72fb4
0x00000000001132e4 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001840a6 : mov edi, dword ptr [rdx] ; ret
0x00000000001028c7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000102def : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000143659 : mov edi, dword ptr [rsp + 0x18] ; call 0x1f8ae
0x0000000000024071 : mov edi, dword ptr [rsp + 0x18] ; call r12
0x00000000000c92af : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000024365 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d00 : mov edi, dword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x00000000000f35de : mov edi, dword ptr [rsp + 0x20] ; call 0x1f8ae
0x0000000000028aba : mov edi, dword ptr [rsp + 0x20] ; call r14
0x0000000000023e51 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x000000000002510e : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000024805 : mov edi, dword ptr [rsp + 0x30] ; call r12
0x0000000000025590 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025350 : mov edi, dword ptr [rsp + 0x30] ; call r15
0x00000000000248b9 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x00000000000282af : mov edi, dword ptr [rsp + 0x38] ; call r14
0x0000000000025b58 : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000028048 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025f2f : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026868 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000026ca8 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000012d4f9 : mov edi, dword ptr [rsp + 0x60] ; call rax
0x00000000000bbdb0 : mov edi, dword ptr [rsp + 0x68] ; call r12
0x0000000000102d50 : mov edi, dword ptr [rsp] ; call rbx
0x00000000000230b1 : mov edi, eax ; call 0x8f3b4
0x0000000000136dc4 : mov edi, eax ; call qword ptr [r10]
0x00000000000ece2a : mov edi, eax ; call rbx
0x00000000000877aa : mov edi, eax ; call rcx
0x0000000000136eb6 : mov edi, eax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136cc7 : mov edi, eax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000004a6ed : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x4a6e1 ; mov rax, rsi ; ret
0x000000000008595e : mov edi, eax ; mov rbx, rax ; call 0x81b87
0x000000000012b754 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086b38 : mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000013a74b : mov edi, ebp ; add rbx, r12 ; call r14
0x0000000000172b2c : mov edi, ebp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000013363b : mov edi, ebp ; call 0x1f8ac
0x00000000000869a2 : mov edi, ebp ; call 0x82bd4
0x00000000000f4005 : mov edi, ebp ; call 0xf0304
0x00000000000fb6a1 : mov edi, ebp ; call 0xf78b4
0x000000000012e30e : mov edi, ebp ; call qword ptr [rbx]
0x000000000011ff1e : mov edi, ebp ; call r12
0x00000000000391ac : mov edi, ebp ; call r14
0x0000000000037347 : mov edi, ebp ; call r15
0x000000000002f6d9 : mov edi, ebp ; call rax
0x00000000000ad296 : mov edi, ebp ; call rbx
0x000000000013bf51 : mov edi, ebp ; call rcx
0x000000000012de05 : mov edi, ebp ; call rdx
0x000000000012ca85 : mov edi, ebp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b494 : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000173611 : mov edi, ebp ; mov r13, r14 ; call 0x1f8af
0x0000000000135b7a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132742 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013254a : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a9de : mov edi, ebp ; mov rcx, r13 ; call rbx
0x00000000000378b4 : mov edi, ebp ; mov rdx, rbp ; call r15
0x00000000000859c3 : mov edi, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000012d70d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000133633 : mov edi, ebx ; call 0x1f8ac
0x0000000000085891 : mov edi, ebx ; call 0x81b84
0x00000000000bda2b : mov edi, ebx ; call 0x89d14
0x00000000000bf4ab : mov edi, ebx ; call 0x8b724
0x00000000000ceac5 : mov edi, ebx ; call qword ptr [r15]
0x000000000012e738 : mov edi, ebx ; call qword ptr [rax]
0x0000000000029c47 : mov edi, ebx ; call r12
0x0000000000021be0 : mov edi, ebx ; call r14
0x000000000006cb49 : mov edi, ebx ; call r8
0x0000000000052256 : mov edi, ebx ; call rax
0x00000000001740ab : mov edi, ebx ; jne 0x1740a0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123671 : mov edi, ebx ; mov dword ptr [rbp - 0x44], eax ; call 0x1f8af
0x000000000012a4d0 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a5d2 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000222be : mov edi, ebx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c8b0b : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001735c1 : mov edi, ebx ; mov rbx, rbp ; call 0x1f8af
0x0000000000088106 : mov edi, ebx ; mov rdx, r15 ; call rax
0x000000000007d8c2 : mov edi, ebx ; neg rdi ; call qword ptr [r15]
0x000000000007221e : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072066 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000013a8d0 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000174238 : mov edi, ebx ; test rdi, rdi ; jne 0x174232 ; pop rbx ; ret
0x0000000000089268 : mov edi, ecx ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000f362e : mov edi, edi ; call 0x1f8ac
0x0000000000065d5d : mov edi, edi ; call 0x71fd4
0x000000000005f10f : mov edi, edi ; call 0x7b3a4
0x00000000001389a0 : mov edi, edi ; call qword ptr [rax]
0x000000000013a82e : mov edi, edi ; call r14
0x0000000000074015 : mov edi, edi ; call rax
0x0000000000103634 : mov edi, edi ; call rbx
0x00000000000ffd0d : mov edi, edi ; inc dword ptr [rbp - 0x7ce38b40] ; ret
0x000000000013805f : mov edi, edi ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162c : mov edi, edi ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x000000000010aeec : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000075294 : mov edi, edi ; xor r8d, r8d ; call rbx
0x0000000000115168 : mov edi, edx ; jmp rax
0x000000000004a771 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x4a759 ; mov rax, rsi ; ret
0x00000000001735b2 : mov edi, esi ; call 0x1f8ac
0x0000000000081867 : mov edi, esi ; call qword ptr [rax]
0x000000000012d278 : mov edi, esi ; call rax
0x0000000000103614 : mov edi, esi ; call rbx
0x000000000012c993 : mov edi, esi ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000173686 : mov edi, esi ; mov r14, r15 ; call 0x1f8af
0x000000000012d4da : mov edi, esi ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000005ae26 : mov edi, esp ; call 0x117124
0x000000000013b5af : mov edi, esp ; call qword ptr [rax]
0x000000000003730a : mov edi, esp ; call r15
0x000000000012b846 : mov edi, esp ; call rax
0x0000000000074fe9 : mov edi, esp ; call rbx
0x000000000013a941 : mov edi, esp ; call rdx
0x00000000000ad91a : mov edi, esp ; mov r9, r15 ; call rbx
0x0000000000088e56 : mov edi, esp ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000000cbf79 : mov edx, 0 ; cmove rax, rdx ; ret
0x00000000001238c7 : mov edx, 0x102 ; cmove eax, edx ; ret
0x000000000012388a : mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000012386c : mov edx, 0x107 ; cmove eax, edx ; ret
0x00000000000784b6 : mov edx, 0x130 ; pop rbx ; ret
0x000000000014199d : mov edx, 0x159 ; call 0x2dc47
0x0000000000080fdc : mov edx, 0x234 ; call 0x7d287
0x000000000008105d : mov edx, 0x237 ; call 0x7d287
0x000000000008103e : mov edx, 0x23a ; call 0x7d287
0x0000000000021972 : mov edx, 0x2c ; call 0x2dc47
0x00000000000b1945 : mov edx, 0x3e1 ; call 0x2dc47
0x000000000011f34f : mov edx, 0x448b0006 ; ret 0x4804
0x0000000000118812 : mov edx, 0x48fff949 ; add esp, 0x28 ; ret
0x0000000000021953 : mov edx, 0x4a ; call 0x2dc47
0x000000000006ac87 : mov edx, 0x5d5b0035 ; ret
0x00000000001a754d : mov edx, 0x73600000 ; out dx, eax ; call rax
0x00000000001a75dd : mov edx, 0x75c00000 ; out dx, eax ; jmp qword ptr [rax]
0x0000000000133dea : mov edx, 0x854dffee ; dec dword ptr [rax - 0x77] ; ret
0x0000000000119cfc : mov edx, 0x8948002a ; ret 0x8b48
0x000000000018355e : mov edx, 0xcac982a4 ; call 0xffffffffaedad3de
0x00000000000c47d2 : mov edx, 0xe9ffffea ; ret 0xfff3
0x000000000008e649 : mov edx, 0xf480001 ; ret 0x66c3
0x0000000000023b87 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000006ff7e : mov edx, 0xffffffff ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000010cf88 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000003a6ef : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000013b44c : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013b496 : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000112386 : mov edx, 5 ; call 0x2e627
0x00000000000218a0 : mov edx, 8 ; mov eax, edx ; ret
0x00000000001aad84 : mov edx, dr0 ; add byte ptr [rax], al ; call 0x221a9fad
0x0000000000077465 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cc4ec : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcc501 ; call rdx
0x0000000000071f88 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000020827 : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001142d1 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r14 ; call rax
0x00000000001141e3 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000113e60 : mov edx, dword ptr [rbp - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000114337 : mov edx, dword ptr [rbx + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000078770 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000001147fd : mov edx, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x000000000011865f : mov edx, dword ptr [rbx] ; jmp 0x118628
0x000000000014857f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000146cad : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000007400e : mov edx, dword ptr [rdi + 0x40] ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000754c6 : mov edx, dword ptr [rdi + 0xc0] ; mov eax, edx ; ret
0x0000000000115161 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000036266 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000089675 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x89679 ; ret
0x0000000000173e20 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173e32 ; call rdx
0x00000000001144eb : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a5d92 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000a5d83 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a5dd3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000bb21d : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xbb206 ; ret
0x00000000000a5de3 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000152d91 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000153150 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001529e1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a7360 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a8190 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a5d60 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a9c00 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a73b1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a5da1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a7341 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8161 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5d41 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000010eea0 : mov edx, dword ptr [rsp + 0x10] ; mov edi, 0x2000004 ; call rax
0x000000000010ed9c : mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000848e9 : mov edx, dword ptr [rsp + 0x68] ; call rax
0x0000000000070105 : mov edx, eax ; je 0x70117 ; mov eax, edx ; pop rbx ; ret
0x000000000010f434 : mov edx, eax ; jmp 0x10f446
0x000000000010f73f : mov edx, eax ; jmp 0x10f74d
0x0000000000134d87 : mov edx, eax ; jmp 0x134d4b
0x00000000000711f7 : mov edx, eax ; jmp 0x7118b
0x0000000000071388 : mov edx, eax ; jmp 0x71322
0x0000000000075be3 : mov edx, eax ; jmp 0x75b80
0x0000000000076533 : mov edx, eax ; jmp 0x764d0
0x0000000000076cd0 : mov edx, eax ; jmp 0x76c57
0x00000000000780eb : mov edx, eax ; jmp 0x78081
0x000000000007d9c4 : mov edx, eax ; jmp 0x7d9e1
0x0000000000087840 : mov edx, eax ; jmp 0x8780b
0x00000000000beb68 : mov edx, eax ; jmp 0xbeb71
0x00000000000d0442 : mov edx, eax ; jmp 0xd03e1
0x00000000000d5169 : mov edx, eax ; jmp 0xd5188
0x00000000000d764c : mov edx, eax ; jmp 0xd762a
0x00000000000d97dc : mov edx, eax ; jmp 0xd97eb
0x00000000000e0fc6 : mov edx, eax ; jmp 0xe0f60
0x00000000000f000c : mov edx, eax ; jmp 0xf0044
0x00000000000fe4bc : mov edx, eax ; jmp 0xfe450
0x0000000000075513 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x0000000000143a9e : mov edx, ebp ; add r9, qword ptr [rbp - 0x88] ; call rax
0x00000000000378b7 : mov edx, ebp ; call r15
0x00000000001146c7 : mov edx, ebp ; call rax
0x00000000000ad3b2 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000037341 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call r15
0x000000000012f4d3 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088937 : mov edx, ebp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000088e59 : mov edx, ebp ; mov rsi, rbp ; call rax
0x000000000003735c : mov edx, ebp ; mov rsi, rbx ; mov rdi, r12 ; call r15
0x0000000000113e67 : mov edx, ebx ; call rax
0x0000000000174537 : mov edx, ebx ; jne 0x17452e ; pop rbx ; ret
0x000000000012f3c5 : mov edx, ebx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088858 : mov edx, ecx ; jmp 0x88821
0x0000000000088109 : mov edx, edi ; call rax
0x000000000018c15d : mov edx, edi ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x0000000000063b64 : mov edx, edi ; mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000011ceaf : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000001142d8 : mov edx, esi ; call rax
0x000000000011433e : mov edx, esp ; call rax
0x0000000000087bf3 : mov edx, esp ; mov rdi, r15 ; call rax
0x000000000010ad69 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x000000000005977e : mov es, word ptr [rdx + 5] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001b261e : mov es, word ptr [rdx] ; add ah, bh ; ret
0x0000000000103b16 : mov es, word ptr [rip - 0x9cf0000] ; mov rdi, r13 ; call rbx
0x00000000000a7fae : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000009ec16 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000886e3 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000ac4de : mov esi, 0x48000000 ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000023ac9 : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000001276eb : mov esi, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x000000000019588c : mov esi, 0x64fffc5b ; pop rbx ; cld ; call rsp
0x000000000009ec41 : mov esi, 0x74c08407 ; and al, 0x39 ; ret 0x2574
0x000000000009eb01 : mov esi, 0x74c08407 ; sub edi, dword ptr [rcx] ; ret 0x2774
0x000000000009ec65 : mov esi, 0x75c9840f ; in eax, dx ; xor eax, eax ; ret
0x00000000001a790d : mov esi, 0x7f100000 ; out dx, eax ; call qword ptr [rdi]
0x0000000000128ba7 : mov esi, 0x83480153 ; ret
0x00000000000d7f59 : mov esi, 0x840f002e ; ret 2
0x000000000009eb7e : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x00000000000f1d02 : mov esi, 0x89010544 ; ret
0x0000000000128032 : mov esi, 0x89480029 ; ret 0x1be
0x00000000000c9954 : mov esi, 0x8948002f ; ret 0x8d48
0x0000000000087a35 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000008d80f : mov esi, 0x8c48348 ; ret
0x000000000003d6df : mov esi, 0xbe0f2414 ; ret 0x8349
0x000000000009ecbd : mov esi, 0xc0844507 ; jne 0x9eca9 ; xor eax, eax ; ret
0x0000000000181cfe : mov esi, 0xc2c1c0bf ; ret
0x000000000010ebf0 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000009eb25 : mov esi, 0xc984070c ; jne 0x9eb20 ; ret
0x000000000009eae1 : mov esi, 0xd2840714 ; jne 0x9eae0 ; ret
0x00000000000aab94 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x00000000000ff926 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x000000000009ebb5 : mov esi, 0xf2390714 ; je 0x9ebb8 ; ret
0x0000000000002bf1 : mov esi, 0xf8cbeb8f ; ret
0x000000000011cfa6 : mov esi, 0xfb83014f ; or dword ptr [rdi], ecx ; ret
0x0000000000103656 : mov esi, 1 ; call rbx
0x0000000000132fe7 : mov esi, 1 ; mov ebp, eax ; call 0x12f2c9
0x0000000000103843 : mov esi, 1 ; mov rdi, r12 ; call rbx
0x000000000010370f : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000103687 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x0000000000103acd : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006cb43 : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006c430 : mov esi, 1 ; mov rdi, rbx ; call rax
0x0000000000102841 : mov esi, 2 ; jmp rax
0x0000000000103ac1 : mov esi, 2 ; mov rdi, r12 ; call rbx
0x0000000000103834 : mov esi, 2 ; mov rdi, r13 ; call rbx
0x0000000000103700 : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000103678 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000010285b : mov esi, 3 ; jmp rax
0x000000000010403c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000104093 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000104113 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x0000000000104213 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x0000000000038f6a : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063b67 : mov esi, dword ptr [rip + 0x360403] ; call rax
0x000000000005be59 : mov esi, dword ptr [rip + 0x368111] ; call rax
0x000000000005b803 : mov esi, dword ptr [rip + 0x368767] ; call rax
0x000000000005004b : mov esi, dword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3cf : mov esi, dword ptr [rip + 0x376b9b] ; call rax
0x0000000000047f4a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000d7644 : mov esi, dword ptr [rsi + rsi*4] ; cmp r8d, esi ; jge 0xd7629 ; mov edx, eax ; jmp 0xd7632
0x000000000014db19 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000012bfe8 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021856 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837f : mov esi, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000248b4 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000028043 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000845e1 : mov esi, dword ptr [rsp + 0x48] ; call rax
0x0000000000026863 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000010eda1 : mov esi, dword ptr [rsp + 8] ; call rax
0x000000000011ff19 : mov esi, dword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x0000000000096aea : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x96b05 ; jmp 0x96abf
0x000000000006d712 : mov esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3559
0x0000000000142f9f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000076a42 : mov esi, ebp ; call 0x4d179
0x0000000000088e5c : mov esi, ebp ; call rax
0x000000000008588e : mov esi, ebp ; mov rdi, rbx ; call 0x81b87
0x00000000000bda28 : mov esi, ebp ; mov rdi, rbx ; call 0x89d17
0x0000000000085c7e : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000c84bc : mov esi, ebp ; xor edx, edx ; jmp 0xc848a
0x000000000003735f : mov esi, ebx ; mov rdi, r12 ; call r15
0x000000000013899d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a82b : mov esi, ebx ; mov rdi, r15 ; call r14
0x00000000000877a7 : mov esi, ebx ; mov rdi, rax ; call rcx
0x000000000008699f : mov esi, ebx ; mov rdi, rbp ; call 0x82bd7
0x000000000013bf4e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x0000000000173689 : mov esi, edi ; call 0x1f8ac
0x00000000000391a9 : mov esi, edi ; mov rdi, r13 ; call r14
0x00000000000c7593 : mov esi, edi ; xor edi, edi ; call rax
0x0000000000132d8a : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x00000000001132e8 : mov esi, edx ; call rax
0x0000000000001bef : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000c52d0 : mov esi, edx ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000202f4 : mov esi, esi ; call 0xaaa68
0x00000000000879d5 : mov esi, esi ; call rax
0x00000000000564ab : mov esi, esi ; mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000ba6f2 : mov esi, esi ; mov rdi, r12 ; call rbx
0x00000000000ba562 : mov esi, esi ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b38b : mov esi, esi ; mov rdi, r13 ; call rax
0x00000000000378b1 : mov esi, esi ; mov rdi, r13 ; mov rdx, rbp ; call r15
0x000000000013c078 : mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000135864 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000cdcd9 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000001322a4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000c525e : mov esi, esi ; movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x000000000013ab55 : mov esi, esp ; call qword ptr [rax]
0x000000000003731b : mov esi, esp ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000086b35 : mov esi, esp ; mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f4002 : mov esi, esp ; mov rdi, rbp ; call 0xf0307
0x0000000000037344 : mov esi, esp ; mov rdi, rbp ; call r15
0x0000000000088d01 : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000012a9db : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000012e735 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000087e63 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000012a5cf : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x000000000008683a : mov esi, esp ; pop rbp ; pop r12 ; jmp rax
0x000000000008605d : mov esi, esp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000202f3 : mov esi, r14d ; call 0xaaa69
0x0000000000197c84 : mov esp, 0x140000e0 ; pop rcx ; out dx, al ; call rsp
0x000000000019b0b4 : mov esp, 0x14000234 ; and bh, dl ; call rsp
0x00000000001aa2b4 : mov esp, 0x180000e7 ; out dx, eax ; int1 ; jmp rcx
0x00000000001adeb4 : mov esp, 0x18000123 ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000019698c : mov esp, 0x2400006c ; js 0x196983 ; call rsp
0x000000000019a88c : mov esp, 0x340001f4 ; fprem ; call rsp
0x00000000001b11b4 : mov esp, 0x38000156 ; jnp 0x1b11b7 ; jmp qword ptr [rcx]
0x0000000000199b04 : mov esp, 0x40001a3 ; adc esi, edi ; call rsp
0x0000000000197d64 : mov esp, 0x440000e4 ; out dx, al ; call rsp
0x0000000000197db4 : mov esp, 0x440000e6 ; insb byte ptr [rdi], dx ; out dx, al ; call rsp
0x000000000019934c : mov esp, 0x4400017b ; and al, 0xf6 ; call rsp
0x000000000008f837 : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000138c51 : mov esp, 0x440f49df ; fmul qword ptr [rax - 0x7d] ; ret
0x000000000008eb21 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008eb51 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008eb41 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000019716c : mov esp, 0x54000096 ; adc al, 0xeb ; call rsp
0x0000000000198bd4 : mov esp, 0x54000149 ; insd dword ptr [rdi], dx ; call rsp
0x0000000000127797 : mov esp, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00000000000d72fe : mov esp, 0x7408e383 ; xchg eax, esi ; pop rbx ; ret
0x00000000001aedb4 : mov esp, 0x78000132 ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000001ae1b4 : mov esp, 0x8000126 ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000196ba4 : mov esp, 0x84000077 ; in eax, -0x17 ; call rsp
0x00000000001992c4 : mov esp, 0x84000178 ; adc al, 0xf6 ; call rsp
0x00000000000b6f6a : mov esp, 0x8824 ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000de084 : mov esp, 0x89000000 ; ret 0xd139
0x0000000000196b54 : mov esp, 0x94000076 ; loope 0x196b4b ; call rsp
0x000000000019a3ac : mov esp, 0x940001d1 ; adc edi, eax ; call rsp
0x00000000001a3db4 : mov esp, 0xa8000082 ; in eax, dx ; call qword ptr [rax]
0x00000000000db36b : mov esp, 0xa824 ; add byte ptr [rcx], bh ; ret 0x8d0f
0x00000000001976e5 : mov esp, 0xafd40000 ; in eax, dx ; call rsp
0x0000000000188cd9 : mov esp, 0xafedfff3 ; call rax
0x000000000019b854 : mov esp, 0xb4000116 ; sti ; call rsp
0x000000000013dd33 : mov esp, 0xc0850028 ; je 0x13dd49 ; xor eax, eax ; ret
0x000000000008f826 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000019b3bc : mov esp, 0xc4000247 ; pop rbp ; cli ; call rsp
0x00000000001b09b4 : mov esp, 0xc800014e ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001b56b4 : mov esp, 0xc800019b ; ret
0x00000000000e06e8 : mov esp, 0xc824 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8488
0x000000000008b8b3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000019924c : mov esp, 0xd4000176 ; or al, 0xf6 ; call rsp
0x000000000019b70c : mov esp, 0xd400025c ; salc ; cli ; call rsp
0x00000000001a7745 : mov esp, 0xd9d80000 ; cld ; call qword ptr [rax]
0x00000000001a37b4 : mov esp, 0xe00007c ; ret 0xffe7
0x00000000001b2ab4 : mov esp, 0xe800016f ; sbb cl, bh ; jmp qword ptr [rsi]
0x0000000000196e5c : mov esp, 0xf4000084 ; cmp edx, ebp ; jmp rsp
0x0000000000199c04 : mov esp, 0xf40001a6 ; sbb edi, esi ; call rsp
0x00000000000965ab : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008eb31 : mov esp, 0xf80148c0 ; ret
0x0000000000067493 : mov esp, 2 ; jmp 0x63703
0x000000000013852c : mov esp, dword ptr [rax] ; jmp 0x13853a
0x00000000000203f8 : mov esp, eax ; call 0xaab88
0x00000000000352ea : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000cf50a : mov esp, edi ; je 0xcf529 ; call 0x8b726
0x000000000005f80a : mov esp, edi ; mov ebx, 2 ; jmp 0x5baf9
0x00000000000d5164 : mov esp, edi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd518d
0x00000000001027f4 : mov esp, edx ; mov rbp, rax ; call rax
0x0000000000189565 : mov esp, esi ; jmp rsp
0x0000000000189561 : mov esp, esi ; push rdx ; mov esp, esi ; jmp rsp
0x000000000009f47d : mov esp, esi ; sub rsp, 8 ; call 0x8b728
0x000000000007d8a8 : mov esp, esi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x00000000001a6a29 : mov gs, esi ; call qword ptr [rcx]
0x00000000000fe131 : mov gs, word ptr [rax + rax] ; ret
0x000000000011f7df : mov gs, word ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x00000000000fe130 : mov gs, word ptr fs:[rax + rax] ; ret
0x0000000000094d5e : mov qword ptr [r10 + 0x18], r8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bf4a7 : mov qword ptr [r14], rax ; mov rdi, rbx ; call 0x8b728
0x000000000009fb90 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000123ec7 : mov qword ptr [r9], r10 ; ret
0x0000000000123f63 : mov qword ptr [r9], rcx ; ret
0x0000000000123f37 : mov qword ptr [r9], rdi ; ret
0x0000000000071c38 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000071c78 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072bd8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000077468 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000071c3c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000072c76 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000007bb19 : mov qword ptr [rax + 8], 0 ; ret
0x00000000000fce13 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000123cc9 : mov qword ptr [rax], r10 ; lea eax, dword ptr [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000072164 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000705c9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000084115 : mov qword ptr [rax], rdi ; ret
0x00000000000720a4 : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002d9d2 : mov qword ptr [rax], rdx ; ret
0x0000000000072ef0 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000d30e3 : mov qword ptr [rbp - 0x2888], rsi ; sub r10, rax ; jmp 0xd310c
0x000000000004d64d : mov qword ptr [rbp - 0x4e8], rsi ; jmp rax
0x0000000000023655 : mov qword ptr [rbp - 0x58], rdx ; call 0x1f8a6
0x00000000001146c2 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r13 ; call rax
0x000000000003a5f9 : mov qword ptr [rbp], rdx ; call rax
0x000000000002a6d0 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000078456 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000001435b5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000000789b8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000014356d : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000076ba4 : mov qword ptr [rbx + 0x18], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c1d8 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b1a2 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e838a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000077494 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008926d : mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000000fc1b0 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007b20a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000078326 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007b429 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008964c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000102591 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x00000000001437e0 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000013822e : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000891b5 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], r9d ; call rcx
0x00000000000896d2 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008926a : mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 0x48], r9 ; call rcx
0x00000000001322d3 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000002057c : mov qword ptr [rcx + 0x968], rax ; ret
0x0000000000168d13 : mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d23 : mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d33 : mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d43 : mov qword ptr [rcx + 8], rdx ; ret
0x00000000000481ca : mov qword ptr [rcx + rsi*8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d6cb1 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000075663 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000168cd0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x0000000000168cf0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x0000000000168d00 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x0000000000168d10 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x0000000000168d20 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x0000000000168d30 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x0000000000168d40 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x0000000000168ce0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000168cc0 : mov qword ptr [rcx], rdx ; ret
0x00000000000f688a : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000048b3e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000a757c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a83cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a5f0c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a5eec : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a9e3c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a6bdf : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a5f4f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a5f6f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a5f30 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007b132 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000077836 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000013bda5 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000010e709 : mov qword ptr [rdi + 0x28], rcx ; mov byte ptr [rax], 0x20 ; jmp 0x10e6dd
0x00000000001358db : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000094cd0 : mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000135893 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007b162 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007eaca : mov qword ptr [rdi + 0x58], rcx ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036048 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000f5eed : mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000a753c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a838c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a5eac : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a9dfc : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a755c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a83ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a5ecc : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9e1c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x000000000015b5b7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b547 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b4d7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000015b467 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a743a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a827a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000015b3f7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5dfa : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a9cea : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a745a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000000a829a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000015b387 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e0a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a9d0a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a747a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a82ba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000015b317 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a5e1a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a9d2a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ff1f7 : mov qword ptr [rdi + 8], 0 ; ret
0x00000000000482f3 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000048ac3 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007b136 : mov qword ptr [rdi + 8], rax ; ret
0x000000000003ac93 : mov qword ptr [rdi + 8], rdx ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000077f5e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003ac84 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ff1e7 : mov qword ptr [rdi + 8], rsi ; ret
0x0000000000036471 : mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x0000000000124047 : mov qword ptr [rdi + rdx + 0x10], r10 ; ret
0x000000000008f31d : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000152874 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528b2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000048a2e : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000152bfb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015adc7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152ddb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ad47 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152fcb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015acc7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015319c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ac38 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015339c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015aba8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000015359c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000015ab18 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000a6d60 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000489b9 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000152878 : mov qword ptr [rdi - 8], rcx ; ret
0x00000000001528b6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000152a2b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b27 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152a73 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000015ae47 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000054d85 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000094a96 : mov qword ptr [rdi], r9 ; pop rbx ; ret
0x0000000000048988 : mov qword ptr [rdi], r9 ; ret
0x00000000000ff1e4 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000004a60a : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000003655a : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000a73c6 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6a86 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a5dd6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a5de6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a5df7 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a5e07 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a5e17 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000008f31a : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x00000000000a5dc7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001f9c2 : mov qword ptr [rdi], rcx ; ret
0x00000000000a73b3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000000a81e3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000a6d80 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000a6da0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000a6db0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000a6dc0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a6dd0 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a6d90 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009eddf : mov qword ptr [rdi], rdx ; ret
0x00000000000a9c53 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009fb8d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000014dafd : mov qword ptr [rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000004a0a2 : mov qword ptr [rdi], rsi ; ret
0x000000000006dcb6 : mov qword ptr [rdx + 0x130], rcx ; ret
0x00000000000784b4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x00000000000710cd : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000071273 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012e7af : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012e78b : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012e78f : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000016b0ca : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000166d3a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000016b0ea : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000166d5a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000016b10a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000166d7a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000006b413 : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000016af9a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000166c6a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000001322f0 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000016af43 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000001323ba : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000166c13 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000002e19c : mov qword ptr [rdx], rax ; ret
0x00000000000762de : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000071f85 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009ed24 : mov qword ptr [rdx], rcx ; ret
0x00000000000e7aca : mov qword ptr [rdx], rdi ; ret
0x00000000001322ed : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000115aa7 : mov qword ptr [rip + 0x2b2672], rax ; pop rbp ; ret
0x000000000010951f : mov qword ptr [rip + 0x2bad1a], rbx ; pop rbx ; ret
0x00000000000fe4b4 : mov qword ptr [rip + 0x2c72e5], rax ; mov rdx, rax ; jmp 0xfe458
0x00000000000e8873 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000012d8ce : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003b295 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003ac03 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x0000000000077f35 : mov qword ptr [rsi + 0x28], rcx ; mov byte ptr [rdx], dil ; ret
0x00000000000fc196 : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000f5e5e : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e8856 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000012d89e : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e886f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000048033 : mov qword ptr [rsi + rax*8], rdx ; xor eax, eax ; pop rbx ; ret
0x000000000007783a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000012357e : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x0000000000123012 : mov qword ptr [rsi], rdi ; ret
0x0000000000119320 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000081a67 : mov qword ptr [rsp + 0x10], r8 ; call rdi
0x0000000000081950 : mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x000000000008162e : mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x00000000000819aa : mov qword ptr [rsp + 0x20], r10 ; call rax
0x000000000012bf6c : mov qword ptr [rsp + 0x28], r9 ; call 0x1381f7
0x00000000000335d8 : mov qword ptr [rsp + 0x28], rcx ; call 0x1f8a7
0x00000000000e1c67 : mov qword ptr [rsp + 0x40], rdi ; add rax, rdx ; jmp rax
0x00000000000bc207 : mov qword ptr [rsp + 0xb8], r14 ; call r12
0x000000000008921f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000102d05 : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000013c2ab : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000008958f : mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x000000000012a4d2 : mov qword ptr [rsp], rcx ; call r12
0x00000000001381de : mov qword ptr fs:[rax], rdx ; ret
0x000000000003a5f8 : mov qword ptr fs:[rbp], rdx ; call rax
0x000000000013822d : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002e19b : mov qword ptr fs:[rdx], rax ; ret
0x000000000014dafc : mov qword ptr ss:[rdi], rsi ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000018355d : mov r10d, 0xcac982a4 ; call 0xffffffffaedad3df
0x000000000012670e : mov r11, rax ; mov byte ptr [r11], 0 ; ret
0x00000000000203f7 : mov r12, rax ; call 0xaab89
0x00000000000cf509 : mov r12, rdi ; je 0xcf52a ; call 0x8b727
0x00000000000d5163 : mov r12, rdi ; xor eax, eax ; mov rdx, r8 ; jmp 0xd518e
0x000000000009f47c : mov r12, rsi ; sub rsp, 8 ; call 0x8b729
0x000000000007d8a7 : mov r12, rsi ; xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000067492 : mov r12d, 2 ; jmp 0x63704
0x000000000013852b : mov r12d, dword ptr [rax] ; jmp 0x13853b
0x00000000001027f3 : mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000173613 : mov r13, r14 ; call 0x1f8ad
0x00000000000aebd7 : mov r13, r15 ; setne dl ; jmp 0xaebed
0x00000000000b14f8 : mov r13, r15 ; setne dl ; jmp 0xb150d
0x00000000000b3caf : mov r13, r15 ; setne dl ; jmp 0xb3ccd
0x000000000007d8ac : mov r13, rdx ; call qword ptr [r15]
0x000000000012a5d4 : mov r13, rsp ; call r15
0x0000000000065978 : mov r13d, eax ; jmp 0x653d6
0x0000000000103198 : mov r13d, ebx ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000173688 : mov r14, r15 ; call 0x1f8ad
0x00000000000ff286 : mov r8, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000ebf2d : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002185a : mov r9, r14 ; call rbx
0x00000000000ad91c : mov r9, r15 ; call rbx
0x00000000000cbfab : mov rax, -0xe ; ret
0x0000000000078330 : mov rax, -1 ; pop rbx ; ret
0x00000000000353e6 : mov rax, -1 ; ret
0x00000000000abf70 : mov rax, 1 ; ret
0x00000000000abf80 : mov rax, 2 ; ret
0x00000000000abf90 : mov rax, 3 ; ret
0x00000000000abfa0 : mov rax, 4 ; ret
0x00000000000abfb0 : mov rax, 5 ; ret
0x00000000000abfc0 : mov rax, 6 ; ret
0x00000000000abfd0 : mov rax, 7 ; ret
0x0000000000112b54 : mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b24
0x0000000000106238 : mov rax, qword ptr [rax + 0x108] ; ret
0x00000000001434de : mov rax, qword ptr [rax + 0x128] ; jmp rax
0x0000000000109bdf : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000010998f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007b23b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000072221 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072069 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000114998 : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007b707 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000134f73 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000006f8c2 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000006fb70 : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000074f73 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000135813 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000106230 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000013aa74 : mov rax, qword ptr [rax + 8] ; jmp rax
0x0000000000106228 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002b01e : mov rax, qword ptr [rax + r14*8] ; test rax, rax ; je 0x2b032 ; call rax
0x000000000002df14 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002da1e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000013aa69 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cb6b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003a722 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000001289b8 : mov rax, qword ptr [rax] ; ret
0x000000000007e06e : mov rax, qword ptr [rax] ; test rax, rax ; je 0x7e080 ; call rax
0x0000000000085565 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x85577 ; call rax
0x000000000006960c : mov rax, qword ptr [rbp - 0x448] ; jmp 0x65866
0x000000000010319b : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000222c0 : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000077490 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000001381f9 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x138211 ; pop rbx ; ret
0x0000000000166c10 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000cc57c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xcc593 ; call rax
0x000000000013c1a2 : mov rax, qword ptr [rdi + 0x18] ; ret
0x000000000013bd40 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000c8850 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000173f37 : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x173f50 ; call rax
0x000000000012d8e6 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000774d0 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000012d91e : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000773c0 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000074f70 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007cb30 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000013b1f8 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000012e660 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000013bb08 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000013bb18 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000013aa70 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013aa65 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000013ab50 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000012c466 : mov rax, qword ptr [rdi + 8] ; push 0 ; push 0x19 ; call qword ptr [rax]
0x000000000007c84e : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000115164 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x000000000002deb2 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012dd77 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000002cb2c : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000e7ac7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007c840 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7c841 ; ret
0x0000000000140ee3 : mov rax, qword ptr [rip + 0x284526] ; call qword ptr [rax]
0x00000000001408d0 : mov rax, qword ptr [rip + 0x284b39] ; call qword ptr [rax]
0x0000000000120f90 : mov rax, qword ptr [rip + 0x2a48e1] ; ret
0x0000000000081a84 : mov rax, qword ptr [rip + 0x342345] ; xor edi, edi ; call qword ptr [rax]
0x000000000007cb10 : mov rax, qword ptr [rip + 0x348a09] ; ret
0x0000000000029c90 : mov rax, qword ptr [rip + 0x39bc59] ; ret
0x0000000000021a50 : mov rax, qword ptr [rip + 0x3a78b9] ; ret
0x0000000000021a40 : mov rax, qword ptr [rip + 0x3a78d9] ; ret
0x000000000002cb48 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x00000000000c8b0d : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000020829 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000f0006 : mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf004a
0x0000000000024369 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x0000000000024d04 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000038fe6 : mov rax, qword ptr [rsp + 0x30] ; lea r15, qword ptr [rbx + r14] ; call rax
0x000000000003b038 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000fde0f : mov rax, qword ptr [rsp - 0x50] ; ret
0x000000000010a362 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000010a3c3 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000001289b7 : mov rax, qword ptr fs:[rax] ; ret
0x0000000000094f89 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f09b : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c479 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006e2b4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008308c : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004a806 : mov rax, r8 ; pop rbx ; ret
0x000000000007df36 : mov rax, r8 ; ret
0x0000000000079129 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006eff8 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006efcb : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006db95 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ed80 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000079a9c : mov rax, rbx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000094e76 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c9123 : mov rax, rbx ; call rax
0x0000000000105dee : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002a835 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dfe9 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000326aa : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003aaae : mov rax, rbx ; pop rbx ; ret
0x0000000000101fb9 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003a68b : mov rax, rcx ; or rax, rdx ; ret
0x0000000000033ea6 : mov rax, rcx ; ret
0x0000000000116430 : mov rax, rdi ; add rsp, 8 ; ret
0x000000000003a6a0 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009ea16 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009f514 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000097359 : mov rax, rdi ; pop rbx ; ret
0x000000000004a60d : mov rax, rdi ; ret
0x0000000000119059 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000bb887 : mov rax, rdx ; add rsp, 0x18 ; ret
0x00000000000841ec : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d724 : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000097965 : mov rax, rdx ; cmove rax, rbx ; pop rbx ; ret
0x000000000010eb2b : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084ba6 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007db2b : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000490b4 : mov rax, rdx ; pop rbx ; ret
0x00000000000484c9 : mov rax, rdx ; ret
0x00000000000c9764 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000004a5bd : mov rax, rsi ; cmovae rax, rdi ; ret
0x000000000006fc83 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000c8502 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fa17 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003a1d3 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000011ce01 : mov rax, rsi ; pop rbx ; ret
0x000000000004a6f3 : mov rax, rsi ; ret
0x0000000000172aba : mov rax, rsi ; sub rax, rdx ; vzeroupper ; ret
0x00000000000352ec : mov rbp, r9 ; nop ; jmp rdx
0x00000000001027f6 : mov rbp, rax ; call rax
0x0000000000115993 : mov rbp, rsp ; pop rbp ; ret
0x00000000001153a1 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000085960 : mov rbx, rax ; call 0x81b85
0x00000000001035a5 : mov rbx, rax ; call rax
0x000000000012e26a : mov rbx, rax ; jne 0x12e20a ; xor eax, eax ; pop rbx ; ret
0x00000000000fca56 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000037306 : mov rbx, rax ; mov rdi, r12 ; call r15
0x00000000001735c3 : mov rbx, rbp ; call 0x1f8ad
0x000000000002c375 : mov rbx, rdi ; test rax, rax ; je 0x2c387 ; call rax
0x000000000012bef5 : mov rbx, rsi ; sub rsp, 8 ; call 0x1381f9
0x000000000002b38f : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2b3a3 ; call rcx
0x000000000012b756 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000a5db0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000135b7c : mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132744 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013254c : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012d4dc : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000012a9e0 : mov rcx, r13 ; call rbx
0x0000000000075290 : mov rcx, r13 ; mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000ad669 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x000000000012a26c : mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000009ed33 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009ed45 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000014dc30 : mov rcx, rdx ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014dc33 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000102d4f : mov rdi, qword ptr [r12] ; call rbx
0x0000000000038f6c : mov rdi, qword ptr [r13] ; call r14
0x0000000000102959 : mov rdi, qword ptr [r13] ; call rbx
0x00000000001028c6 : mov rdi, qword ptr [r14] ; call rbx
0x0000000000102907 : mov rdi, qword ptr [r15] ; call rbx
0x00000000000bb020 : mov rdi, qword ptr [rax] ; call r14
0x0000000000102d02 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000cf304 : mov rdi, qword ptr [rbp - 0x308] ; call r12
0x00000000000564ad : mov rdi, qword ptr [rbp - 0x4a8] ; call rax
0x00000000000ebc1f : mov rdi, qword ptr [rbp - 0x88] ; call rbx
0x00000000000acb04 : mov rdi, qword ptr [rbp] ; call r12
0x0000000000102a8e : mov rdi, qword ptr [rbp] ; call rbx
0x0000000000047bb9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006ddd5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006dd99 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000072fe7 : mov rdi, qword ptr [rdx + 0x40] ; jmp 0x72fb5
0x00000000001132e3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000143658 : mov rdi, qword ptr [rsp + 0x18] ; call 0x1f8af
0x0000000000024070 : mov rdi, qword ptr [rsp + 0x18] ; call r12
0x00000000000f35dd : mov rdi, qword ptr [rsp + 0x20] ; call 0x1f8af
0x0000000000028ab9 : mov rdi, qword ptr [rsp + 0x20] ; call r14
0x0000000000023e50 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000024804 : mov rdi, qword ptr [rsp + 0x30] ; call r12
0x000000000002558f : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x000000000002534f : mov rdi, qword ptr [rsp + 0x30] ; call r15
0x00000000000248b8 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000000282ae : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000025b57 : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000028047 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000026867 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000012d4f8 : mov rdi, qword ptr [rsp + 0x60] ; call rax
0x00000000000bbdaf : mov rdi, qword ptr [rsp + 0x68] ; call r12
0x000000000005ae25 : mov rdi, r12 ; call 0x117125
0x000000000013b5ae : mov rdi, r12 ; call qword ptr [rax]
0x0000000000037309 : mov rdi, r12 ; call r15
0x0000000000132c0c : mov rdi, r12 ; call rax
0x0000000000074fe8 : mov rdi, r12 ; call rbx
0x00000000000ad919 : mov rdi, r12 ; mov r9, r15 ; call rbx
0x0000000000088e55 : mov rdi, r12 ; mov rdx, r13 ; mov rsi, rbp ; call rax
0x000000000011ff1d : mov rdi, r13 ; call r12
0x00000000000391ab : mov rdi, r13 ; call r14
0x000000000002f6d8 : mov rdi, r13 ; call rax
0x00000000001035ef : mov rdi, r13 ; call rbx
0x0000000000173610 : mov rdi, r13 ; mov r13, r14 ; call 0x1f8b0
0x00000000000378b3 : mov rdi, r13 ; mov rdx, rbp ; call r15
0x00000000001735b1 : mov rdi, r14 ; call 0x1f8ad
0x0000000000081866 : mov rdi, r14 ; call qword ptr [rax]
0x000000000012d277 : mov rdi, r14 ; call rax
0x0000000000103613 : mov rdi, r14 ; call rbx
0x000000000012c992 : mov rdi, r14 ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [rax]
0x0000000000173685 : mov rdi, r14 ; mov r14, r15 ; call 0x1f8b0
0x000000000012d4d9 : mov rdi, r14 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000f362d : mov rdi, r15 ; call 0x1f8ad
0x0000000000065d5c : mov rdi, r15 ; call 0x71fd5
0x000000000005f10e : mov rdi, r15 ; call 0x7b3a5
0x000000000013899f : mov rdi, r15 ; call qword ptr [rax]
0x000000000013a82d : mov rdi, r15 ; call r14
0x0000000000074014 : mov rdi, r15 ; call rax
0x0000000000103633 : mov rdi, r15 ; call rbx
0x000000000013805e : mov rdi, r15 ; lea r9, qword ptr [rsp + 0x2a] ; call qword ptr [rax]
0x000000000008162b : mov rdi, r15 ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000075293 : mov rdi, r15 ; xor r8d, r8d ; call rbx
0x00000000000230b0 : mov rdi, rax ; call 0x8f3b5
0x0000000000136dc3 : mov rdi, rax ; call qword ptr [r10]
0x00000000000ece29 : mov rdi, rax ; call rbx
0x00000000000877a9 : mov rdi, rax ; call rcx
0x0000000000136eb5 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x10] ; call qword ptr [r10]
0x0000000000136cc6 : mov rdi, rax ; lea r9, qword ptr [rsp + 0x1c] ; call qword ptr [r10]
0x000000000008595d : mov rdi, rax ; mov rbx, rax ; call 0x81b88
0x000000000012b753 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000086b37 : mov rdi, rax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000013a74a : mov rdi, rbp ; add rbx, r12 ; call r14
0x0000000000172b2b : mov rdi, rbp ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000013363a : mov rdi, rbp ; call 0x1f8ad
0x00000000000869a1 : mov rdi, rbp ; call 0x82bd5
0x00000000000f4004 : mov rdi, rbp ; call 0xf0305
0x000000000012e30d : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013c07a : mov rdi, rbp ; call r12
0x000000000012bfec : mov rdi, rbp ; call r14
0x0000000000037346 : mov rdi, rbp ; call r15
0x0000000000084fb5 : mov rdi, rbp ; call rax
0x00000000000ad295 : mov rdi, rbp ; call rbx
0x000000000013bf50 : mov rdi, rbp ; call rcx
0x000000000012de04 : mov rdi, rbp ; call rdx
0x000000000012ca84 : mov rdi, rbp ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x0000000000135b79 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132741 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000132549 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a9dd : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x00000000000859c2 : mov rdi, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000012d70c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000133632 : mov rdi, rbx ; call 0x1f8ad
0x0000000000085890 : mov rdi, rbx ; call 0x81b85
0x00000000000bda2a : mov rdi, rbx ; call 0x89d15
0x00000000000bf4aa : mov rdi, rbx ; call 0x8b725
0x00000000000ceac4 : mov rdi, rbx ; call qword ptr [r15]
0x000000000012e737 : mov rdi, rbx ; call qword ptr [rax]
0x0000000000029c46 : mov rdi, rbx ; call r12
0x0000000000021bdf : mov rdi, rbx ; call r14
0x000000000006cb48 : mov rdi, rbx ; call r8
0x0000000000052255 : mov rdi, rbx ; call rax
0x00000000001740aa : mov rdi, rbx ; jne 0x1740a1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000123670 : mov rdi, rbx ; mov dword ptr [rbp - 0x44], eax ; call 0x1f8b0
0x000000000012a4cf : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000012a5d1 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000000222bd : mov rdi, rbx ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000c8b0a : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001735c0 : mov rdi, rbx ; mov rbx, rbp ; call 0x1f8b0
0x0000000000088105 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000007d8c1 : mov rdi, rbx ; neg rdi ; call qword ptr [r15]
0x000000000007221d : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072065 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000013a8cf : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000115167 : mov rdi, rdx ; jmp rax
0x000000000012b845 : mov rdi, rsp ; call rax
0x000000000013a940 : mov rdi, rsp ; call rdx
0x0000000000077464 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000cc4eb : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xcc502 ; call rdx
0x0000000000020826 : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000173e1f : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x173e33 ; call rdx
0x00000000001529e0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000a5da0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000848e8 : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x000000000011433d : mov rdx, r12 ; call rax
0x0000000000087bf2 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000001146c6 : mov rdx, r13 ; call rax
0x00000000000ad3b1 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012f4d2 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088e58 : mov rdx, r13 ; mov rsi, rbp ; call rax
0x00000000001142d7 : mov rdx, r14 ; call rax
0x0000000000088108 : mov rdx, r15 ; call rax
0x000000000011ceae : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000010f73e : mov rdx, r8 ; jmp 0x10f74e
0x00000000000d5168 : mov rdx, r8 ; jmp 0xd5189
0x00000000000d97db : mov rdx, r8 ; jmp 0xd97ec
0x000000000010f433 : mov rdx, rax ; jmp 0x10f447
0x0000000000134d86 : mov rdx, rax ; jmp 0x134d4c
0x000000000007d9c3 : mov rdx, rax ; jmp 0x7d9e2
0x000000000008783f : mov rdx, rax ; jmp 0x8780c
0x00000000000beb67 : mov rdx, rax ; jmp 0xbeb72
0x00000000000d0441 : mov rdx, rax ; jmp 0xd03e2
0x00000000000e0fc5 : mov rdx, rax ; jmp 0xe0f61
0x00000000000e0fc4 : mov rdx, rax ; jmp 0xe0f62
0x00000000000f000b : mov rdx, rax ; jmp 0xf0045
0x00000000000fe4bb : mov rdx, rax ; jmp 0xfe451
0x00000000000378b6 : mov rdx, rbp ; call r15
0x0000000000088936 : mov rdx, rbp ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000113e66 : mov rdx, rbx ; call rax
0x0000000000174536 : mov rdx, rbx ; jne 0x17452f ; pop rbx ; ret
0x000000000012f3c4 : mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000088857 : mov rdx, rcx ; jmp 0x88822
0x0000000000038f69 : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [r13] ; call r14
0x0000000000063b66 : mov rsi, qword ptr [rip + 0x360403] ; call rax
0x000000000005be58 : mov rsi, qword ptr [rip + 0x368111] ; call rax
0x000000000005b802 : mov rsi, qword ptr [rip + 0x368767] ; call rax
0x000000000005004a : mov rsi, qword ptr [rip + 0x373f1f] ; call rax
0x000000000004d3ce : mov rsi, qword ptr [rip + 0x376b9b] ; call rax
0x0000000000047f49 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000012bfe7 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000021855 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r14 ; call rbx
0x000000000003837e : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call r15
0x0000000000084fb0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000845e0 : mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000010eda0 : mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000011ff18 : mov rsi, qword ptr [rsp + 8] ; mov rdi, r13 ; call r12
0x000000000003731a : mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x00000000000f4001 : mov rsi, r12 ; mov rdi, rbp ; call 0xf0308
0x0000000000037343 : mov rsi, r12 ; mov rdi, rbp ; call r15
0x0000000000088d00 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012a9da : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000087e62 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000086839 : mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x000000000008605c : mov rsi, r12 ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000085c7d : mov rsi, r13 ; mov rdi, rbx ; call rax
0x00000000000879d4 : mov rsi, r14 ; call rax
0x00000000000ba6f1 : mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000ba561 : mov rsi, r14 ; mov rdi, r12 ; mov r9, r15 ; call rbx
0x000000000004b38a : mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000013c077 : mov rsi, r14 ; mov rdi, rbp ; call r12
0x00000000000391a8 : mov rsi, r15 ; mov rdi, r13 ; call r14
0x0000000000142f9e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000088e5b : mov rsi, rbp ; call rax
0x000000000008588d : mov rsi, rbp ; mov rdi, rbx ; call 0x81b88
0x00000000000bda27 : mov rsi, rbp ; mov rdi, rbx ; call 0x89d18
0x0000000000088b76 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000c84bb : mov rsi, rbp ; xor edx, edx ; jmp 0xc848b
0x000000000003735e : mov rsi, rbx ; mov rdi, r12 ; call r15
0x000000000013899c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000013a82a : mov rsi, rbx ; mov rdi, r15 ; call r14
0x00000000000877a6 : mov rsi, rbx ; mov rdi, rax ; call rcx
0x000000000008699e : mov rsi, rbx ; mov rdi, rbp ; call 0x82bd8
0x000000000013bf4d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000c7592 : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000132d89 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x00000000001132e7 : mov rsi, rdx ; call rax
0x000000000013ab54 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e734 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000352e9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x00000000000ec510 : mov word ptr [r8 - 0x77], cs ; ret
0x000000000009fbb5 : mov word ptr [r9 - 2], cx ; ret
0x000000000019df84 : mov word ptr [rax + rax], fs ; add al, bh ; jno 0x19df7b ; call qword ptr [rax]
0x00000000000fe2f1 : mov word ptr [rax + rax], gs ; ret
0x000000000019cf84 : mov word ptr [rax + rax], ss ; add byte ptr [rax + 0x6f], bl ; std ; call qword ptr [rcx]
0x000000000008f30d : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000013ce85 : mov word ptr [rax - 0x39], cs ; ret
0x00000000000ec511 : mov word ptr [rax - 0x77], cs ; ret
0x00000000000a65a0 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000001ac684 : mov word ptr [rbx], cs ; add dword ptr [rax], eax ; test al, 0x87 ; call qword ptr [rsi]
0x000000000019b1bc : mov word ptr [rbx], dr1 ; add al, byte ptr [rax] ; je 0x19b207 ; cli ; jmp rsp
0x00000000001ade84 : mov word ptr [rbx], fs ; add dword ptr [rax], eax ; call 0x221ad32e
0x0000000000053f68 : mov word ptr [rbx], ss ; add byte ptr [rdi + rcx + 0x44], cl ; ret 0xf4c
0x00000000001b0c84 : mov word ptr [rcx + 1], ss ; add byte ptr [rax + 0x72], bl ; cmc ; jmp qword ptr [rcx]
0x000000000019b414 : mov word ptr [rcx + 2], cs ; add byte ptr [rsi], ah ; cli ; call rsp
0x0000000000168ca2 : mov word ptr [rcx + 4], dx ; ret
0x0000000000168ce3 : mov word ptr [rcx + 8], dx ; ret
0x00000000001aef84 : mov word ptr [rcx + rax], dr0 ; add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000198eec : mov word ptr [rcx + rax], fs ; hlt ; and ch, dh ; jmp rsp
0x0000000000198d7c : mov word ptr [rcx + rax], ss ; mov ah, 0x20 ; hlt ; call rsp
0x0000000000168c70 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x0000000000168c60 : mov word ptr [rcx], dx ; ret
0x000000000019873c : mov word ptr [rcx], gs ; add dword ptr [rax], eax ; call rsp
0x00000000000a74bc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a830c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a5e4c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a9d7c : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a75c4 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a8414 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a5f34 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a9e84 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x000000000015b857 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000001b2a84 : mov word ptr [rdi + 1], gs ; add al, ch ; sbb cl, bh ; jmp qword ptr [rsi]
0x000000000003b372 : mov word ptr [rdi + 2], dx ; ret
0x000000000009eaa2 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000000a81b8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009e9a2 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x00000000000a5d88 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a9c28 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a821a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000000a73da : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000000a5dca : mov word ptr [rdi + 8], dx ; ret
0x00000000000a9c8a : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000014db32 : mov word ptr [rdi + rdx - 2], cx ; ret
0x0000000000119858 : mov word ptr [rdi - 0x76b6ffd6], dr1 ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000152f7c : mov word ptr [rdi - 2], cx ; ret
0x0000000000152d94 : mov word ptr [rdi - 2], dx ; ret
0x0000000000152f78 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000a5d53 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a6a26 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000aa602 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x000000000015b85b : mov word ptr [rdi], cx ; ret
0x00000000000a7343 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000000a8163 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000000a5d43 : mov word ptr [rdi], dx ; ret
0x00000000000a9bd3 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x000000000009ea60 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e9d0 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000009fbb2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x000000000014db2f : mov word ptr [rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x00000000000f5f20 : mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000013236f : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x000000000016b018 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x00000000000a2afd : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000a2b81 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000016afc3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000000a2a98 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000010997f : mov word ptr [rdx], ax ; ret
0x00000000001bb83a : mov word ptr [rdx], cs ; ret
0x00000000001a71b3 : mov word ptr [rdx], es ; push rdx ; ret
0x00000000001a6c82 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000000fb565 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003b2df : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003b326 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000aa605 : mov word ptr [rsi - 2], cx ; ret
0x00000000000f5f03 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001aaf10 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x00000000001bb820 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; insb byte ptr [rdi], dx ; add dword ptr [rdx], ecx ; ret
0x00000000001ae338 : mov word ptr [rsi], es ; add qword ptr [r15], 3 ; popfq ; add ecx, dword ptr [rdx] ; ret
0x00000000001b0050 : mov word ptr [rsi], es ; add qword ptr [rdi], 2 ; cwde ; ret
0x0000000000035002 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000351a4 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x000000000014db2e : mov word ptr ss:[rdi], si ; mov word ptr [rdi + rdx - 2], cx ; ret
0x000000000003ded9 : movabs al, byte ptr [0x293ff08348000000] ; ret 0xfa81
0x00000000001b2e6a : movabs al, byte ptr [0x41200e0a01a00320] ; ret
0x00000000000db202 : movabs al, byte ptr [0x834801538d000000] ; ret
0x00000000000d09dd : movabs al, byte ptr [0x8348e18948000000] ; ret 0x480f
0x000000000006368d : movabs al, byte ptr [0x840fc08548000000] ; ret 3
0x00000000000623f2 : movabs al, byte ptr [0x894810b60ffffff9] ; ret
0x0000000000072fe3 : movabs al, byte ptr [0xeb407a8b48000000] ; ret
0x00000000000e3939 : movabs byte ptr [0x840fc08545000001], al ; ret 0xfffd
0x00000000000ae7dd : movabs byte ptr [0xc74900758b48fff9], al ; ret 0xfc01
0x00000000000b6070 : movabs byte ptr [0xe80000036eba000d], al ; ret
0x00000000000313b4 : movabs dword ptr [0x14808c783490005], eax ; ret
0x00000000000d72eb : movabs dword ptr [0x5bffffff73820fc8], eax ; ret
0x00000000000bd0a1 : movabs dword ptr [0xe800000001003099], eax ; ret 0xf7c6
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x00000000001105bb : movabs eax, dword ptr [0x8948f6894c000043] ; ret 0x3bf
0x000000000011f9bd : movabs eax, dword ptr [0x940f01ff83410000] ; ret 0xc085
0x000000000004bb47 : movabs eax, dword ptr [0xfffb5885c7fffffd] ; call qword ptr [rax]
0x0000000000034b30 : movapd xmm0, xmm1 ; add rsp, 0x28 ; ret
0x000000000003492f : movapd xmm0, xmm1 ; ret
0x0000000000034b31 : movaps xmm0, xmm1 ; add rsp, 0x28 ; ret
0x0000000000034acd : movaps xmm0, xmm1 ; jne 0x34ae9 ; add rsp, 0x28 ; ret
0x0000000000034e08 : movaps xmm0, xmm1 ; jne 0x34e21 ; add rsp, 0x28 ; ret
0x0000000000034930 : movaps xmm0, xmm1 ; ret
0x0000000000151502 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001514fe : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000001515ac : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000034dd3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034856 : movd mm0, eax ; ret
0x0000000000034855 : movd mm0, rax ; ret
0x000000000003492c : movd mm1, eax ; movapd xmm0, xmm1 ; ret
0x0000000000034cba : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000348bf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034c36 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003492b : movd mm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348be : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000034dd2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000034c0c : movd xmm0, eax ; ret
0x0000000000034cb9 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034c35 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000e0ce0 : movdqa xmm0, xmm2 ; jmp 0xe0cc6
0x00000000000a5e20 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a767d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84cd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6ce0 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a5fed : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a8733 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a6f23 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000015b52f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b4bf : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b44f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b3df : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a761d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a846d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a5f8d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000015b36f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a763d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a848d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a5fad : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000015b2ff : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a765d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a84ad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a5fcd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000015b91f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b8af : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b83f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b7cf : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b75f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b6ef : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b67f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b60f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b59f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008f26c : movdqu xmmword ptr [rdi + rdx - 0x10], xmm0 ; ja 0x8f289 ; ret
0x000000000008f285 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x000000000015aa8b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000015aafb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a6de0 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000a82d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7494 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6b07 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e34 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e77 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e67 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ee8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5ea8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5ec8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5e48 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5fe9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5f89 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5fa9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fc9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5e24 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a9d44 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015b304 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a2be2 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c02 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c22 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a6c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a16 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000a2be3 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c03 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000a2c23 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a6d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000a2a17 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x0000000000101e1b : movmskpd eax, xmm0 ; and eax, 1 ; jmp 0x101def
0x0000000000101e1c : movmskps eax, xmm0 ; and eax, 1 ; jmp 0x101dee
0x00000000000e0ce1 : movq mm0, mm2 ; jmp 0xe0cc5
0x00000000000a5e21 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a767e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a84ce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a6ce1 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a5fee : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a9f3e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a8734 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a6f24 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a9fb4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000015b530 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b4c0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b450 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b3e0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a761e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a846e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a5f8e : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a9ede : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000015b370 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a763e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a848e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a5fae : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a9efe : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000015b300 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000a765e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a84ae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a5fce : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a9f1e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000015b920 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b8b0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b840 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b7d0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b760 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b6f0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b680 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b610 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000015b5a0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008f26d : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x8f288 ; ret
0x000000000008f286 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000015aa8c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000015aafc : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000015b237 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b1b7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b127 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b0a7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015b027 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015afa7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015af27 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aea7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ae27 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ada7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ad27 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aca7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ac17 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015ab87 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000015aaf7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a6de1 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000a82d5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a7495 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a6b08 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a5e35 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a5e88 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a6b5b : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a5e78 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a5e68 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ee9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a5ea9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a5ec9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a5e49 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a5fea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a5f8a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a5faa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a5fca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a5e25 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a9d45 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000015b305 : movq qword ptr [rdi], mm1 ; ret
0x0000000000034854 : movq xmm0, rax ; ret
0x000000000003492a : movq xmm1, rax ; movapd xmm0, xmm1 ; ret
0x00000000000348bd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000006846a : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5b64 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd5af7
0x00000000000e06fc : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], cl ; ret 0xb60f
0x00000000001b5f95 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x00000000001b099c : movsb byte ptr [rdi], byte ptr [rsi] ; add qword ptr [rax], r8 ; mov al, 0x6e ; cmc ; jmp qword ptr [rcx]
0x00000000001ade9c : movsb byte ptr [rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rax], al ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001ab79c : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; add byte ptr [rax], al ; nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x0000000000196515 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000196359 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; jmp rax
0x0000000000196355 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000197268 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x0000000000183f22 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001979a4 : movsb byte ptr [rdi], byte ptr [rsi] ; iretd ; add byte ptr [rax], al ; in al, 8 ; out dx, al ; jmp rsp
0x000000000018517d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x1851d6 ; jmp 0x185117
0x00000000001aab9c : movsb byte ptr [rdi], byte ptr [rsi] ; lock add byte ptr [rax], al ; nop ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000000fe2f0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov word ptr [rax + rax], gs ; ret
0x00000000001aa99c : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; add byte ptr [rax], al ; and byte ptr [rdx], cl ; call rsi
0x000000000019996c : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x000000000019b61c : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x00000000001b119c : movsb byte ptr [rdi], byte ptr [rsi] ; push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x0000000000035047 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000019ade8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xfff9
0x0000000000194fa5 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rcx
0x000000000019b994 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, dword ptr [rcx] ; add ah, ah ; ret 0xfffd
0x0000000000188cb8 : movsb byte ptr [rdi], byte ptr [rsi] ; test al, 0xf3 ; jmp rdi
0x0000000000198a30 : movsb byte ptr [rdi], byte ptr [rsi] ; xor dh, bl ; jmp rsp
0x000000000013f2d4 : movsd dword ptr [rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007573f : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010f66a : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x76b3fe18], al ; ret 0x2b49
0x00000000001bc472 : movsd dword ptr [rdi], dword ptr [rsi] ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001ae109 : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; call rax
0x00000000001857b5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000185071 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000009ed44 : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000489e2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000194fad : movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rcx
0x00000000000348c2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003488b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000bb8f8 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000004a1d3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000142fa5 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000034c39 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000034c20 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000004a18d : movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000010ebef : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008b417 : movsx eax, dl ; ret
0x000000000009eb24 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0x9eb21 ; ret
0x000000000009ec64 : movsx ecx, byte ptr [rdi] ; test cl, cl ; jne 0x9ec61 ; xor eax, eax ; ret
0x000000000009ebb4 : movsx edx, byte ptr [rdi + rax] ; cmp edx, esi ; je 0x9ebb9 ; ret
0x000000000009eae0 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x9eae1 ; ret
0x00000000000c3258 : movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x0000000000089d91 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000158f0b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000150fdb : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000009ea30 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000009e990 : movsxd rax, dword ptr [r10 + r9*4] ; add r10, rax ; jmp r10
0x000000000009e8c7 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x0000000000085544 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000002ebb7 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000004b602 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000063884 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000d3fb1 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000210b3 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006c1d2 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006c301 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000002e8ed : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00000000000aabc7 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003ab4a : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000014a744 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000014a608 : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000014a85d : movsxd rax, ecx ; add rax, rdi ; sub rax, rdx ; ret
0x000000000014a6dd : movsxd rax, ecx ; ret
0x000000000014a784 : movsxd rbx, ebx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x00000000000a645a : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000047c91 : movsxd rcx, dword ptr [r11 + rcx*4] ; add rcx, r11 ; jmp rcx
0x000000000016e40d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000a5be9 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000002be43 : movsxd rcx, dword ptr [r8 + rcx*4] ; add rcx, r8 ; jmp rcx
0x000000000005c1ed : movsxd rcx, dword ptr [rax + r12*4] ; add rax, rcx ; jmp rax
0x00000000000948ed : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000135866 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000033297 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x00000000000f2e2c : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000014a5f9 : movsxd rcx, ebx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000014a660 : movsxd rcx, ecx ; cmp ch, byte ptr [rcx] ; ret 0xd089
0x000000000014a627 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, r8 ; ret
0x00000000000e1a48 : movsxd rdi, dword ptr [r11 + rdi*4] ; add rdi, r11 ; jmp rdi
0x000000000002e0b5 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002df45 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000001510af : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000005c148 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000d1bae : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000d9b15 : movsxd rdx, dword ptr [rax + rbp*4] ; add rax, rdx ; jmp rax
0x00000000000852e8 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000002ec95 : movsxd rdx, dword ptr [rax + rcx*4] ; add rax, rdx ; jmp rax
0x000000000005bf52 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000cdcdb : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x0000000000063e45 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000e1262 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x0000000000123f32 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000123db1 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000000aac57 : movsxd rsi, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000c52d2 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000aac8f : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000006ca9d : movsxd rsi, dword ptr [rdi + rsi*4] ; add rdi, rsi ; jmp rdi
0x000000000003340e : movsxd rsi, dword ptr [rdi + rsi*4] ; add rsi, rdi ; jmp rsi
0x00000000000c5260 : movsxd rsi, dword ptr [rdx + rsi*4] ; add rdx, rsi ; jmp rdx
0x0000000000189e89 : movsxd rsi, ebp ; inc dword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189da5 : movsxd rsi, ebp ; jmp qword ptr [rbx]
0x0000000000189e79 : movsxd rsi, ebp ; jmp rsi
0x0000000000189da1 : movsxd rsi, ebp ; push qword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189e75 : movsxd rsi, ebp ; push qword ptr [rbx] ; cmc ; jmp rsi
0x0000000000199f29 : movsxd rsi, edi ; jmp rsp
0x0000000000171d7c : movsxd rsi, esi ; ret 0x7520
0x00000000000fc2ea : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000003afe9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000bb8f9 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x000000000004a18e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000004a1d4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x000000000009a6f7 : movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000009a6f6 : movups xmm9, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000003b171 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000348c3 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003488c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000034c21 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000012e657 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b80b : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000012e1dc : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ea9ae : movzx eax, al ; cmova eax, edx ; ret
0x00000000000bb1e5 : movzx eax, al ; lea eax, dword ptr [rax + rax - 1] ; ret
0x00000000000cdbb6 : movzx eax, al ; lea rax, qword ptr [rax + rax - 1] ; ret
0x000000000003522c : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000c0eea : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000010ebc0 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34c : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000006b319 : movzx eax, al ; neg eax ; ret
0x0000000000133985 : movzx eax, al ; pop rbp ; pop r12 ; ret
0x000000000012f5aa : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000c75bb : movzx eax, al ; pop rbx ; ret
0x0000000000035f29 : movzx eax, al ; ret
0x000000000002dd15 : movzx eax, ax ; ret
0x00000000000c3255 : movzx eax, bh ; movsxd r8, dword ptr [rdx + r8*4] ; add rdx, r8 ; jmp rdx
0x00000000000713fd : movzx eax, bh ; ret
0x000000000007a78c : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001302fe : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007bfb6 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007a60d : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b2d5 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000077f62 : movzx eax, byte ptr [rax] ; ret
0x000000000008b128 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000016e420 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008ecc0 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008b143 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007a620 : movzx eax, byte ptr [rdx] ; ret
0x000000000007a78d : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000aabe7 : movzx eax, cl ; pop rbx ; ret
0x00000000001193bd : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x00000000000713fc : movzx eax, dil ; ret
0x00000000000aac0f : movzx eax, dl ; pop rbx ; ret
0x00000000001193cb : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x00000000001193bc : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000002dece : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000f5f00 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000aa15a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa159 ; ret
0x00000000000aa20a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xaa209 ; ret
0x000000000016f2c4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x000000000008b140 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000016e423 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000108a32 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000033bcf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x33bb7 ; ret
0x000000000009f721 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000144dbf : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000009f5b3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000171da4 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000171e04 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000171df4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000171de4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000171dd4 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000171dc4 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000171db4 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000015b250 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016f077 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000171d8b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000015b930 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008ecc3 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008ece9 : movzx edx, dl ; sub eax, edx ; ret
0x000000000015b1d0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000015b8c0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000acb01 : movzx esi, bl ; mov rdi, qword ptr [rbp] ; call r12
0x00000000000f8924 : movzx rax, al ; ret
0x0000000000088706 : mul al ; xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000008d527 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000034951 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cdf : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x0000000000034950 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x0000000000034cde : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000006e797 : neg byte ptr [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000136d1f : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013736a : neg eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000035777 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000010ebc3 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34f : neg eax ; pop rbx ; ret
0x000000000002121d : neg eax ; ret
0x0000000000088501 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000007d8c5 : neg edi ; call qword ptr [r15]
0x00000000000f7641 : neg edx ; cmp dword ptr [rsp - 0x58], 2 ; cmove eax, edx ; ret
0x000000000007d8c4 : neg rdi ; call qword ptr [r15]
0x00000000001aaba0 : nop ; adc esi, edx ; jmp qword ptr [rcx]
0x00000000000e3f28 : nop ; add al, 0xf ; xchg eax, esp ; ret 0x9848
0x0000000000073ed8 : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000007a3dc : nop ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000015a987 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000035a93 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000016e72c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000023ff3 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000fd50d : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000c2232 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a141d : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; je 0x1a1435 ; ret
0x00000000001a142b : nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000004b605 : nop ; add rax, rdi ; jmp rax
0x000000000005bf55 : nop ; add rax, rdx ; jmp rax
0x00000000000aac5a : nop ; add rax, rsi ; jmp rax
0x00000000000ba00f : nop ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000006ac4f : nop ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000021a2f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077d4f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000758bf : nop ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000001b2c80 : nop ; and esi, esi ; jmp qword ptr [rsi]
0x000000000008eb1f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000009f0cf : nop ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f25f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x00000000001ab430 : nop ; call rbx
0x0000000000195b98 : nop ; cld ; call qword ptr [rax]
0x0000000000195670 : nop ; cld ; inc dword ptr [rax + 0x28] ; cld ; call qword ptr [rax]
0x0000000000195bdc : nop ; cmp ah, bh ; call qword ptr [rax]
0x0000000000195ba8 : nop ; cmp al, 0xfc ; call qword ptr [rax]
0x0000000000195be4 : nop ; cmp edi, esp ; call qword ptr [rax]
0x0000000000195ba0 : nop ; cmp esp, edi ; call qword ptr [rax]
0x00000000001ab7a0 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call rdi
0x0000000000195078 : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp qword ptr [rax]
0x00000000001b9f90 : nop ; div bh ; call qword ptr [rdx]
0x000000000003512f : nop ; fstp st(1) ; add rsp, 8 ; ret
0x00000000001ad981 : nop ; hlt ; call qword ptr [rcx]
0x00000000001ad969 : nop ; hlt ; jmp qword ptr [rcx]
0x0000000000194f04 : nop ; insd dword ptr [rdi], dx ; sti ; jmp rax
0x0000000000194f1c : nop ; ja 0x194f1d ; call qword ptr [rax]
0x0000000000194f14 : nop ; je 0x194f15 ; call qword ptr [rax]
0x0000000000194f2c : nop ; jge 0x194f2d ; call qword ptr [rax]
0x00000000000352ef : nop ; jmp rdx
0x00000000001b0b50 : nop ; jo 0x1b0b4b ; jmp qword ptr [rcx]
0x0000000000194f24 : nop ; jp 0x194f25 ; call qword ptr [rax]
0x00000000001b1110 : nop ; jp 0x1b110b ; jmp qword ptr [rcx]
0x000000000007f42c : nop ; jp 0x7f430 ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x00000000000d9b1f : nop ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000152baf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000001157cf : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000000000152d8f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000f6e9f : nop ; mov eax, 0x5f ; syscall ; ret
0x00000000000cda0f : nop ; mov eax, 0xfffa ; ret
0x000000000007206f : nop ; mov eax, 0xffffffff ; ret
0x00000000000acd6f : nop ; mov eax, 1 ; ret
0x0000000000114917 : nop ; mov eax, dword ptr [r14 + 0x18] ; mov dword ptr [rbp - 0x80], eax ; call r9
0x0000000000113d8f : nop ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000abbff : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xabc69 ; ret
0x00000000000abc4f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xabc69 ; ret
0x00000000000fc2cf : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000077eff : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000003686f : nop ; mov eax, dword ptr [rip + 0x38d816] ; ret
0x000000000010ad6f : nop ; mov eax, edi ; ret
0x000000000011935f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000368cf : nop ; mov eax, edx ; ret
0x000000000015314f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a735f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000007832f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007bf3f : nop ; mov rax, -1 ; ret
0x00000000000774cf : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773bf : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000013aa6f : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000013ab4f : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000120f8f : nop ; mov rax, qword ptr [rip + 0x2a48e1] ; ret
0x00000000000d176f : nop ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d398 : nop ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009ec6f : nop ; mov rax, rdi ; ret
0x000000000017360f : nop ; mov rdi, r13 ; mov r13, r14 ; call 0x1f8b1
0x00000000001146c5 : nop ; mov rdx, r13 ; call rax
0x0000000000084faf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000000f5f1f : nop ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x00000000000a5e1f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000196514 : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; call qword ptr [rax]
0x0000000000085543 : nop ; movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000f5eff : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001953ac : nop ; or eax, 0x20fffc ; cld ; jmp rax
0x000000000019d420 : nop ; or ebp, ecx ; call qword ptr [rbx]
0x00000000001953a8 : nop ; or edi, esp ; call qword ptr [rax + 0x20fffc0d]
0x00000000001a63c0 : nop ; out dx, al ; call qword ptr [rax]
0x0000000000195b54 : nop ; pop rax ; cld ; call qword ptr [rax]
0x0000000000110a1f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f69df : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004a49f : nop ; pop rbx ; ret
0x0000000000195928 : nop ; pop rdi ; cld ; jmp qword ptr [rax]
0x0000000000195b2c : nop ; push rbp ; cld ; call qword ptr [rax]
0x0000000000195b3c : nop ; push rbx ; cld ; call qword ptr [rax]
0x0000000000195b1c : nop ; push rdi ; cld ; call qword ptr [rax]
0x0000000000195b24 : nop ; push rsi ; cld ; call qword ptr [rax]
0x0000000000195b34 : nop ; push rsp ; cld ; call qword ptr [rax]
0x000000000002058f : nop ; ret
0x0000000000002f9e : nop ; ret 0x5bdb
0x0000000000005990 : nop ; ret 0xa
0x000000000011238c : nop ; ret 0xfff1
0x0000000000195348 : nop ; sar bl, cl ; jmp rax
0x00000000001956f4 : nop ; sbb al, 0xfc ; jmp rax
0x0000000000194e64 : nop ; sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x0000000000196134 : nop ; stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x00000000000fdf5e : nop ; sub al, 0 ; add rsp, 8 ; ret
0x000000000007c88f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000001adf00 : nop ; wait ; hlt ; jmp qword ptr [rcx]
0x0000000000194f44 : nop ; xchg bl, bh ; call qword ptr [rax]
0x0000000000195e14 : nop ; xchg esp, edi ; jmp qword ptr [rax]
0x000000000008d7d9 : nop ; xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000c78af : nop ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000074f5f : nop ; xor eax, eax ; ret
0x000000000008eb9f : nop ; xor rax, rax ; ret
0x00000000001439a8 : nop dword ptr [rax + rax] ; call rcx
0x00000000000350d3 : nop dword ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000070153 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a5d5b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000114993 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000106223 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000033eab : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a6fcb : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012c54b : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a33 : nop dword ptr [rax + rax] ; ret
0x000000000003a7fb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f03 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abc6b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000006b475 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000abf3c : nop dword ptr [rax] ; add rax, 1 ; ret
0x0000000000174435 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000143664 : nop dword ptr [rax] ; call qword ptr [rax]
0x00000000001750f9 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000ac845 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000ac835 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000ac83d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000000cda05 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000368c4 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x00000000000895d5 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012e04d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x00000000000c895d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000745fd : nop dword ptr [rax] ; mov eax, dword ptr [rdx] ; ret
0x000000000002df1d : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000a6a2d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000076ccd : nop dword ptr [rax] ; mov edx, eax ; jmp 0x76c5a
0x0000000000094a14 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x000000000010622d : nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000848e5 : nop dword ptr [rax] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000000000845dc : nop dword ptr [rax] ; mov rsi, qword ptr [rsp + 0x48] ; call rax
0x000000000006dded : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x0000000000084ca4 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000b9fac : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002bd51 : nop dword ptr [rax] ; ret
0x0000000000110bc5 : nop dword ptr [rax] ; sub eax, edi ; ret
0x00000000000d7c7d : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d72bd : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000006acd4 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000034a6d : nop dword ptr [rax] ; xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a69e7 : nop dword ptr cs:[rax + rax] ; ret
0x00000000001439a7 : nop word ptr [rax + rax] ; call rcx
0x00000000000350d2 : nop word ptr [rax + rax] ; fstp st(1) ; ret
0x000000000007302a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x0000000000033eaa : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000a6fca : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000012c54a : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000045a3a : nop word ptr [rax + rax] ; ret
0x000000000003a7fa : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x0000000000039f02 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000abc6a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000bf6ee : not eax ; add eax, 0x16e ; ret
0x000000000013c411 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000d7202 : not eax ; and eax, 2 ; ret
0x0000000000034790 : not eax ; and eax, edx ; ret
0x0000000000035f63 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000218e1 : not eax ; xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x0000000000035f62 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000662e3 : or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000145d37 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149949 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145d65 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000fce2a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000008241d : or al, 0 ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000dc0f1 : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089d00 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000082d8a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000662cc : or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000c00b1 : or al, 0 ; add rax, rdi ; jmp rax
0x00000000000fc6c2 : or al, 0 ; add rsp, 0x30 ; mov eax, ebx ; pop rbx ; ret
0x000000000008f19a : or al, 0 ; cmove rax, rdx ; ret
0x00000000000abca0 : or al, 0 ; ret
0x00000000000959b2 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x959a9 ; ret
0x000000000008b126 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000082f12 : or al, 0x18 ; mov rax, r8 ; pop rbx ; ret
0x00000000000beb65 : or al, 0x20 ; mov rdx, rax ; jmp 0xbeb74
0x000000000012a4d4 : or al, 0x24 ; call r12
0x00000000001aea04 : or al, 0x2f ; add dword ptr [rax], eax ; fcompi st(4) ; jmp qword ptr [rcx]
0x000000000010752a : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x0000000000053997 : or al, 0x31 ; div dh ; ret 0x4050
0x00000000001337cb : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000cc0e2 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003583c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000001178ab : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003ab4e : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c9623 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000143791 : or al, 0x48 ; add esp, 0x38 ; ret
0x0000000000035be9 : or al, 0x48 ; add esp, 0x90 ; pop rbx ; ret
0x0000000000070f03 : or al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000123011 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000ac254 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c7633 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008b523 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000bb642 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x00000000001152ea : or al, 0x5d ; pop r12 ; ret
0x0000000000189bcc : or al, 0x62 ; cmc ; dec dword ptr [rdx] ; cmc ; jmp rsp
0x0000000000189bd0 : or al, 0x62 ; cmc ; jmp rsp
0x000000000008e718 : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000006c6da : or al, 0x7e ; ret
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000a645c : or al, 0x83 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000004bc85 : or al, 0x83 ; ret
0x000000000005155c : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x000000000009ea32 : or al, 0x88 ; add rax, r9 ; jmp rax
0x00000000000948ef : or al, 0x88 ; add rax, rcx ; jmp rax
0x000000000002be45 : or al, 0x88 ; add rcx, r8 ; jmp rcx
0x00000000001a4404 : or al, 0x89 ; add byte ptr [rax], al ; sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x00000000000e75e5 : or al, 0x89 ; push rsp ; ret
0x0000000000118cab : or al, 0x89 ; ret 0x6ae9
0x00000000000f2e2e : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000089d93 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000091c74 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000158f0d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000047c93 : or al, 0x8b ; add rcx, r11 ; jmp rcx
0x0000000000150fdd : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000003d495 : or al, 0x8d ; push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x000000000010ad68 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000033299 : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x000000000016e40f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000a5beb : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000005c1ef : or al, 0xa0 ; add rax, rcx ; jmp rax
0x00000000001bc471 : or al, 0xa5 ; add ebp, eax ; add ebp, esi ; add al, byte ptr [rax] ; ret
0x00000000001a6404 : or al, 0xa9 ; add byte ptr [rax], al ; js 0x1a645f ; out dx, al ; jmp qword ptr [rdx]
0x0000000000002bce : or al, 0xaf ; xbegin 0xfffffffff8c6efd2 ; ret
0x0000000000150fe1 : or al, 0xb ; jmp r9
0x00000000000a5bef : or al, 0xb ; jmp rcx
0x0000000000135868 : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000013c6b7 : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000013587e : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003646f : or al, 0xc2 ; mov qword ptr [rdi + rax*8], rcx ; xor eax, eax ; pop rbx ; ret
0x00000000001a8204 : or al, 0xc7 ; add byte ptr [rax], al ; sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x0000000000036473 : or al, 0xc7 ; xor eax, eax ; pop rbx ; ret
0x00000000000abb55 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a66e3 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000015b453 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000000357a3 : or al, 0xf3 ; ret
0x00000000001ab104 : or al, 0xf6 ; add byte ptr [rax], al ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x0000000000199251 : or al, 0xf6 ; call rsp
0x0000000000122952 : or al, 0xf6 ; ret 0xc602
0x000000000006ce2b : or al, 0xf6 ; ret 0xf04
0x000000000005678c : or al, 0xf6 ; ret 0xf08
0x0000000000101185 : or al, 0xf7 ; ret 0xfc07
0x000000000002b391 : or al, 0xf8 ; test rcx, rcx ; je 0x2b3a1 ; call rcx
0x0000000000195368 : or al, 0xfb ; call rax
0x00000000000f67c2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000f68b2 : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001bbf04 : or al, 4 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call qword ptr [rdi]
0x00000000000a6920 : or al, 5 ; add byte ptr [rax], al ; ret
0x00000000000b9e15 : or al, 5 ; add byte ptr [rbp + 0x29dc75db], al ; ret
0x00000000000b9e69 : or al, 5 ; add byte ptr [rbp + 0x390a74db], al ; ret
0x000000000009eb26 : or al, 7 ; test cl, cl ; jne 0x9eb1f ; ret
0x000000000009d4ef : or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000097b2b : or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000b3ead : or al, byte ptr [rax] ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000037371 : or al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x39], r9b ; ret
0x0000000000144f0d : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147b21 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144f31 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000102a0 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010af2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012d942 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000dfd41 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x00000000000e1fc8 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e624e : or al, byte ptr [rax] ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000ac60a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x000000000003cfc1 : or al, byte ptr [rcx + 0xf] ; xchg eax, edx ; ret 0x8348
0x000000000006f2bd : or al, byte ptr [rcx + rcx*8 - 0x7cb7b58c] ; ret 0x8001
0x0000000000126319 : or al, byte ptr [rcx - 0x7d] ; ret 0x4101
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000019aacd : or al, byte ptr [rdx] ; add byte ptr [rdx + rdx*2], dl ; stc ; call rsp
0x000000000014cf07 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009f482 : or al, ch ; cwde ; ret 0xfffe
0x000000000012b052 : or al, ch ; fadd dword ptr [rdi - 0x11] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000045b5d : or al, ch ; lea ebp, dword ptr [rdi - 2] ; dec dword ptr [rax - 0x77] ; ret
0x000000000012befb : or al, ch ; out dx, eax ; ret 0
0x000000000006dcd7 : or al, ch ; ret
0x00000000001abf98 : or al, dh ; call rcx
0x000000000013bbc7 : or bh, bh ; push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008b451 : or bh, byte ptr [rax - 1] ; cmovae eax, ecx ; ret
0x000000000007781d : or bh, byte ptr [rax - 1] ; ret
0x0000000000045be1 : or bh, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b9e6f : or bh, byte ptr [rcx] ; ret
0x00000000000e510f : or bh, dh ; ret
0x00000000000ffddf : or bh, dh ; ret 0xfc07
0x000000000012afbe : or bl, al ; mov eax, 1 ; ret
0x00000000000ac843 : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000010622b : or bl, al ; nop dword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000124153 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000123fb0 : or bl, al ; nop word ptr [rax + rax] ; ret
0x0000000000194df9 : or bl, bh ; jmp rax
0x00000000001bc686 : or bl, byte ptr [rax] ; add byte ptr [rax], al ; loopne 0x1bc69d ; ret 0xb
0x00000000000022dc : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b6e ; ret
0x0000000000096c75 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ea668 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x000000000011934d : or bl, ch ; scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x00000000000780e8 : or bl, ch ; xchg eax, edx ; mov edx, eax ; jmp 0x78084
0x000000000015b613 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002da7f : or bl, dh ; ret
0x00000000000d5968 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x000000000012c468 : or byte ptr [r10], r13b ; push 0x19 ; call qword ptr [rax]
0x00000000000d58e1 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000033e4d : or byte ptr [r11 + r9*4 + 0x4f], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000aca36 : or byte ptr [r13 + r13*4 + 0x48], r14b ; mov eax, ebx ; pop rbx ; ret
0x00000000000a2b7f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d58d2 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d599e : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000074087 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000d7222 : or byte ptr [r8 + 0x63], r9b ; ret 0xf53
0x00000000000d59b1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000013bb0a : or byte ptr [r8 - 0x75], r9b ; jmp rax
0x00000000000a2b5e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x0000000000166c68 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e732 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000013899a : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000eb8ff : or byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x0000000000039f32 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000001031c7 : or byte ptr [r8 - 0x7d], r9b ; ret
0x000000000014d0e2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000bf2d3 : or byte ptr [r9 + 0x39], cl ; ret 0x8e0f
0x00000000000d9904 : or byte ptr [r9 + 0x63], r9b ; ret 0x4c6
0x00000000000a2bbe : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000007250f : or byte ptr [r9 - 0x77], r9b ; ret
0x00000000000d5941 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d5901 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x000000000012bf33 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000074088 : or byte ptr [rax + 0x29], cl ; ret
0x000000000013f964 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x00000000001405e7 : or byte ptr [rax + 0x29], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x00000000000bbc83 : or byte ptr [rax + 0x29], r9b ; ret
0x000000000007cc47 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000105c65 : or byte ptr [rax + 0x39], cl ; ret
0x000000000008231c : or byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000048e15 : or byte ptr [rax + 0x39], cl ; ret 0x8949
0x00000000001336b9 : or byte ptr [rax + 0x63], cl ; ret
0x00000000000d7223 : or byte ptr [rax + 0x63], cl ; ret 0xf53
0x00000000001a9e8a : or byte ptr [rax + 0xb], cl ; push rdx ; ret
0x00000000001afe6c : or byte ptr [rax + 0xb], cl ; ret
0x00000000001ac9cd : or byte ptr [rax + 0xb], dl ; ret
0x00000000001193bb : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000010ea1f : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000310dc : or byte ptr [rax + 1], cl ; ret
0x000000000010639e : or byte ptr [rax + 5], bh ; pop rbx ; pop rbp ; ret
0x0000000000112f6b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x000000000004b158 : or byte ptr [rax + rcx*4 - 0x73], al ; push -0x76000005 ; ret 0x8941
0x00000000000d59b2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000de6cb : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax - 0x77] ; ret
0x000000000012fccb : or byte ptr [rax - 0x3f], cl ; in eax, dx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x8320
0x000000000008f34e : or byte ptr [rax - 0x73], cl ; add eax, 0x10e4a ; ret
0x000000000008ebc2 : or byte ptr [rax - 0x73], cl ; add eax, 0x26 ; ret
0x000000000009443d : or byte ptr [rax - 0x73], cl ; add eax, 0xb3db ; ret
0x000000000009440e : or byte ptr [rax - 0x73], cl ; add eax, 0xb63a ; ret
0x00000000000ac876 : or byte ptr [rax - 0x73], cl ; add eax, 0xc31b2 ; ret
0x000000000008ebd6 : or byte ptr [rax - 0x73], cl ; add eax, 0xdf812 ; ret
0x00000000000ac862 : or byte ptr [rax - 0x73], cl ; add eax, 0xe916 ; ret
0x00000000000abc92 : or byte ptr [rax - 0x73], cl ; add eax, 0xf596 ; ret
0x00000000001161ee : or byte ptr [rax - 0x73], cl ; add eax, 0xfff8984a ; ret
0x00000000001162de : or byte ptr [rax - 0x73], cl ; add eax, 0xfff89eaa ; ret
0x000000000013b5a8 : or byte ptr [rax - 0x73], cl ; je 0x13b5da ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000013b6ec : or byte ptr [rax - 0x73], cl ; je 0x13b71e ; or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000007ee43 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x000000000010a361 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x000000000010a3c2 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000102d01 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x00000000000f4156 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x00000000000dcd6f : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000013bb0b : or byte ptr [rax - 0x75], cl ; jmp rax
0x000000000006ddd4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000012d91d : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000135812 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000a2b5f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x0000000000113e65 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000896fb : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000038f4a : or byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a2a70 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000119058 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000326a9 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000013899b : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x000000000013a8ce : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000166c69 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000012e733 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000859c1 : or byte ptr [rax - 0x77], cl ; out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x000000000012d70b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x000000000007db2a : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000098f97 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012f915 : or byte ptr [rax - 0x77], cl ; ret 0x314c
0x000000000013b83f : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000efc7b : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000023433 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000039f33 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000895cd : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x0000000000089677 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000898d9 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x0000000000082318 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416b2f
0x0000000000082317 : or byte ptr [rax - 0x7d], cl ; call 0xffffffffc2416b30
0x0000000000082f48 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000048c36 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000094aa6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000094b2e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000006e67e : or byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000000000054d42 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000007044b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007413d : or byte ptr [rax - 9], cl ; fimul dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], cl ; ret
0x000000000014516c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000010623a : or byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000007d9d4 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007d995 : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x8948
0x000000000014516d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147cc1 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145191 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bc587 : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x000000000007bb1c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000084086 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1bf
0x0000000000019f70 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001e710 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c7
0x00000000000189b0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18c9
0x0000000000019268 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18ca
0x000000000001a360 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x18d2
0x000000000000b530 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x56
0x00000000000218a1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000aac99 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000012d952 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000083f86 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x83f59 ; ret
0x00000000000f32dc : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f485e : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000004a608 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000105e2d : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000108a30 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000a9c8d : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9ccb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9c6b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000006abcb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000014b6de : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000004876c : or byte ptr [rbp + 0x39], cl ; sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x0000000000123e4f : or byte ptr [rbp + 0x5b001d44], cl ; pop rbp ; ret
0x00000000000aca37 : or byte ptr [rbp + rbp*4 + 0x48], dh ; mov eax, ebx ; pop rbx ; ret
0x00000000000d6ef4 : or byte ptr [rbp + rcx*4 + 0x4a], al ; inc dword ptr [rcx] ; ret 0x5589
0x00000000000bb222 : or byte ptr [rbp - 0x28], dh ; ret
0x000000000003d31d : or byte ptr [rbp - 0x57f2faf], cl ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000ac729 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000dc5ab : or byte ptr [rbp - 0x9df8b0a], al ; ret
0x00000000001b07c8 : or byte ptr [rbp - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001a9928 : or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x0000000000003cdf : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000001fc02 : or byte ptr [rbx + 0x5d5b0443], cl ; pop r12 ; ret
0x000000000012e83b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000071fc2 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000032dc3 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008964f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000021a33 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007915a : or byte ptr [rbx + 0x5d], bl ; sub rax, rdx ; ret
0x000000000019d0dd : or byte ptr [rbx + rcx + 0x7e], cl ; ret
0x0000000000033e4e : or byte ptr [rbx + rcx*4 + 0x4f], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000050197 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000013dc9e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000006d3d1 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000070a77 : or byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000019d3f0 : or byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x00000000001af4d8 : or byte ptr [rbx], al ; cmc ; call qword ptr [rdi]
0x00000000001bc541 : or byte ptr [rbx], al ; ret
0x000000000004a00b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000bf2d4 : or byte ptr [rcx + 0x39], cl ; ret 0x8e0f
0x0000000000054b89 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000142675 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e1a47 : or byte ptr [rcx + 0x63], cl ; cmp al, 0xbb ; add rdi, r11 ; jmp rdi
0x00000000000d9905 : or byte ptr [rcx + 0x63], cl ; ret 0x4c6
0x00000000001a0eaa : or byte ptr [rcx + 0xb], cl ; ret
0x000000000006c203 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000004842b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000490b0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000013eaa3 : or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000131673 : or byte ptr [rcx + rcx*4 + 0xc], cl ; and al, 0xe8 ; ret
0x000000000011ff1c : or byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x000000000013b5ad : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x0000000000037d67 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbp ; call r15
0x00000000000391a7 : or byte ptr [rcx + rcx*4 - 2], cl ; mov rdi, r13 ; call r14
0x0000000000048432 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000007763a : or byte ptr [rcx - 0x74b777bb], cl ; or cl, byte ptr [rax - 0x7d] ; ret
0x00000000000d6ebc : or byte ptr [rcx - 0x75], cl ; je 0xd6eec ; or byte ptr [rcx], ch ; ret
0x00000000000a2bbf : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000da5f3 : or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000072510 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000003ce6f : or byte ptr [rcx - 0x77], cl ; ret 0x44c6
0x000000000010a438 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a44a ; ret
0x000000000010a4c8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a4da ; ret
0x000000000010a568 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a57a ; ret
0x000000000010a5f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a60a ; ret
0x000000000010a688 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a69a ; ret
0x000000000010a718 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a72a ; ret
0x000000000010a7b8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a7ca ; ret
0x000000000010a858 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a86a ; ret
0x000000000010a8f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a90a ; ret
0x000000000010a988 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10a99a ; ret
0x000000000010aa23 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aa35 ; ret
0x000000000010aab8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aaca ; ret
0x000000000010adda : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10adec ; ret
0x000000000010ae5a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10ae6c ; ret
0x000000000010aeda : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10aeec ; ret
0x000000000010af5a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10af6c ; ret
0x000000000010afda : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10afec ; ret
0x000000000010b05a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b06c ; ret
0x000000000010b0da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b0ec ; ret
0x000000000010b15a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b16c ; ret
0x000000000010b1da : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b1ec ; ret
0x000000000010b25a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b26c ; ret
0x000000000010b2d7 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b2e9 ; ret
0x000000000010b35a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x10b36c ; ret
0x0000000000083b29 : or byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000000000003909a : or byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e3ca8 : or byte ptr [rcx - 0x7d], cl ; ret 0x4501
0x0000000000037611 : or byte ptr [rcx - 0x7d], cl ; ret 0xf301
0x00000000000e8bda : or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x00000000000f67d2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000359df : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000f68c4 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000198285 : or byte ptr [rcx], al ; add byte ptr [rbx + rdi*8], ah ; out dx, eax ; call rsp
0x00000000000d5987 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d5902 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000bb21f : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000013f3d3 : or byte ptr [rcx], bh ; ret 0x3875
0x00000000000d5942 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000b9eed : or byte ptr [rcx], ch ; ret
0x00000000001254cc : or byte ptr [rcx], cl ; ret 0xb60f
0x0000000000115a00 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000022b4e : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e7b8b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000007db6b : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007c8cf : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000185a3e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a3fb3 : or byte ptr [rdi + 0xb], al ; add dh, byte ptr [rbp + 0x41180e0a] ; ret
0x00000000001a2634 : or byte ptr [rdi + 0xb], al ; jae 0x1a2648 ; ret
0x00000000001a02b9 : or byte ptr [rdi + 0xe], al ; adc byte ptr [rbx + 0xaae0202], al ; ret
0x0000000000026ec3 : or byte ptr [rdi], 0x94 ; ret 0x8348
0x000000000002a219 : or byte ptr [rdi], cl ; mov bh, 0x43 ; add al, 0x29 ; ret 0x8941
0x000000000002dd14 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000007b42c : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000077f61 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000cf263 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000006c851 : or byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000077fcb : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000012f5a9 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000453b8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000035d64 : or byte ptr [rdi], cl ; ret 0xc289
0x00000000001515ab : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000004753f : or byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc221
0x000000000004c38e : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x9522
0x000000000002086a : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000001b2d48 : or byte ptr [rdi], dl ; cld ; jmp qword ptr [rsi]
0x000000000019db62 : or byte ptr [rdx + 0xb], cl ; pop rdi ; ret
0x00000000001ab0d8 : or byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001bc32d : or byte ptr [rdx], al ; add al, dh ; jns 0x1bc331 ; call qword ptr [rcx]
0x00000000000d7c77 : or byte ptr [rdx], al ; jne 0xd7c55 ; jmp 0xd7c45
0x00000000000d58e2 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d5969 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x0000000000188250 : or byte ptr [rdx], ch ; jmp qword ptr [rax + 0x20fff229]
0x000000000012c469 : or byte ptr [rdx], ch ; push 0x19 ; call qword ptr [rax]
0x00000000000fc2d2 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000fc2d1 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000fc5ba : or byte ptr [rip - 0x80000000], 0x39 ; ret 0x8e75
0x00000000000a5771 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000010f73b : or byte ptr [rsi + rbx + 0x4c], dh ; mov edx, eax ; jmp 0x10f751
0x00000000000d7301 : or byte ptr [rsi + rdx*4 + 0x5b], dh ; ret
0x00000000000a2b80 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000d599f : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000edba0 : or byte ptr [rsi], cl ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000d58d3 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003cde : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000096af1 : or ch, bl ; ret 0x1f0f
0x00000000001bc5a8 : or ch, byte ptr [rdi + 5] ; ret
0x00000000001bc68b : or ch, byte ptr [rsi] ; ret 0xb
0x000000000004763f : or cl, al ; call 0xffffffffc28db76b
0x00000000000da5f0 : or cl, al ; jmp 0xffffffffc296e705
0x00000000000da5ef : or cl, al ; jmp 0xffffffffc296e706
0x00000000000da6f3 : or cl, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000003505b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000bb2c7 : or cl, byte ptr [rax + 0x29] ; ret 0x8941
0x0000000000029d94 : or cl, byte ptr [rax + 0x39] ; ret 0x4676
0x00000000000ac165 : or cl, byte ptr [rax + 0x39] ; ret 0xe575
0x000000000007a5fe : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000078bd7 : or cl, byte ptr [rax + 1] ; ret 0x8949
0x00000000000662cb : or cl, byte ptr [rax + rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000072faf : or cl, byte ptr [rax - 0x77] ; ret
0x00000000000e8416 : or cl, byte ptr [rax - 0x77] ; ret 0xa1e8
0x00000000000c15c2 : or cl, byte ptr [rax - 0x77] ; ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006f75c : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000008dc6a : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000d97df : or cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000004ac1a : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000003d45d : or cl, byte ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000071f87 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000001193f5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000001f963 : or cl, byte ptr [rcx + 0x1c829f0] ; sar dword ptr [rcx], 1 ; ret 0xffb8
0x000000000013e01f : or cl, byte ptr [rcx + 0x39] ; ret
0x000000000010e682 : or cl, byte ptr [rcx - 0x77] ; fmul qword ptr [rcx + 0x29] ; fisttp word ptr [rax - 0x77] ; ret
0x0000000000119375 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x000000000011f6f2 : or cl, byte ptr [rdi - 0x7cb7ffd6] ; ret 0xe801
0x0000000000168b96 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000008638a : or cl, byte ptr [rdi] ; xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x000000000003d323 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000013dca1 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000019d129 : or cl, ch ; call qword ptr [rdi]
0x00000000000356f7 : or cl, ch ; ret
0x0000000000134d58 : or cl, ch ; ret 0xf382
0x00000000000e56f0 : or cl, ch ; ret 0xfffe
0x0000000000002beb : or cl, cl ; clc ; ret
0x000000000008d7b5 : or cl, cl ; cmove rax, rdx ; ret
0x000000000015b533 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000105685 : or dh, bl ; ret
0x00000000000aae16 : or dh, byte ptr [rbp - 0x11] ; ret
0x00000000001979a9 : or dh, ch ; jmp rsp
0x0000000000199219 : or dh, dh ; jmp rsp
0x0000000000081ef3 : or dh, dh ; ret 0x7404
0x00000000000f71c3 : or dh, dh ; ret 0x7540
0x000000000012de44 : or dh, dh ; ret 0x8802
0x0000000000081e66 : or dh, dh ; ret 0xf04
0x000000000001fe58 : or dh, dh ; ret 0xf08
0x000000000002f3de : or dh, dh ; ret 0xfdf
0x00000000001aa9a1 : or dh, dl ; call rsi
0x0000000000095752 : or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x000000000006656e : or dword ptr [eax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000131883 : or dword ptr [rax + 0x29], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000011fe70 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2a8828 ; call rax
0x0000000000132253 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000011b003 : or dword ptr [rax - 0x76b7ffd6], ebp ; ret 0x8d48
0x000000000010e7b9 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc34a2fc9
0x000000000009931b : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000089a6e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x0000000000020580 : or dword ptr [rax], eax ; add bl, dh ; ret
0x000000000014509d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b58f : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ff7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000073c9f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002122a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000f5d38 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006656f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000a4cc5 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000758b4 : or dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000000f2103 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000f2e2a : or dword ptr [rax], eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f25f7 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000001bc6de : or dword ptr [rax], ebx ; add byte ptr [rax], al ; loopne 0x1bc6f4 ; ret 0xa
0x000000000003d43d : or dword ptr [rbp - 0x57f2faf], ecx ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x000000000016f846 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000012e166 : or dword ptr [rbx + 0x31], ebx ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000013759b : or dword ptr [rbx + 0x5b90ffee], eax ; ret
0x000000000010e066 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000eed0b : or dword ptr [rbx - 0x7af0f508], eax ; ret 0xa
0x000000000006dde3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000789d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007d0a8 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000000488bc : or dword ptr [rcx + 0x39], ecx ; ret 0x870f
0x000000000008b3c8 : or dword ptr [rcx + 0xf], eax ; xchg eax, esi ; ret 0xc031
0x0000000000070fee : or dword ptr [rcx + rcx*4 - 0x40], eax ; pop rbx ; ret
0x0000000000086356 : or dword ptr [rcx - 0x7d], ecx ; cli ; adc al, 0x77 ; and ecx, dword ptr [rcx - 0x7d] ; ret 0xeb5b
0x0000000000095c44 : or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000000d52f0 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4c01
0x0000000000086539 : or dword ptr [rcx - 0x7d], ecx ; ret 0xe977
0x00000000001436f6 : or dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000000000035f43 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000006ddf0 : or dword ptr [rdi], 0x20 ; ret
0x00000000000fc387 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000036086 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000011cfab : or dword ptr [rdi], ecx ; ret
0x0000000000168b76 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000008b372 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xc031
0x0000000000101aea : or dword ptr [rdi], ecx ; xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010206a : or dword ptr [rdi], ecx ; xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ea0b4 : or dword ptr [rdx], 0x3d8d4800 ; ret 0xa2a
0x000000000006ad8e : or dword ptr [rdx], eax ; add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rax - 0x77], ecx ; ret 0x2b76
0x000000000012dd73 : or dword ptr [rsi + 0x29], ebx ; add byte ptr [rax - 0x75], cl ; add al, 0xc2 ; jmp rax
0x00000000001ae74a : or dword ptr [rsi], 0x54028310 ; ret
0x00000000000269b0 : or dword ptr [rsi], 0xea810000 ; ret 0
0x000000000004c8ac : or dword ptr [rsi], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bc6e3 : or dword ptr [rsi], ebp ; ret 0xa
0x0000000000137343 : or dword ptr [rsi], esi ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000088852 : or eax, 0x10428e ; mov rdx, rcx ; jmp 0x88827
0x00000000000fc8aa : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000347fb : or eax, 0x15fad0 ; orpd xmm0, xmm1 ; ret
0x0000000000189160 : or eax, 0x17fff451 ; push rcx ; hlt ; jmp qword ptr [rcx]
0x0000000000189284 : or eax, 0x17fff454 ; push rsp ; hlt ; jmp qword ptr [rcx]
0x00000000000a7621 : or eax, 0x1c478d48 ; ret
0x00000000000a8471 : or eax, 0x1d478d48 ; ret
0x0000000000168bf8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000194e4d : or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x00000000001953ad : or eax, 0x20fffc ; cld ; jmp rax
0x000000000007bc62 : or eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000000fc861 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000001a529c : or eax, 0x380e0a03 ; ret
0x00000000000b72e5 : or eax, 0x3d8d4800 ; ret 0xdaa
0x00000000000b1943 : or eax, 0x3e1ba00 ; add byte ptr [rax], al ; call 0x2dc49
0x000000000006c232 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c95a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000be065 : or eax, 0x440f4800 ; ret 0x8d48
0x00000000001381db : or eax, 0x48640029 ; mov dword ptr [rax], edx ; ret
0x00000000000967a2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000bfe1a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x000000000012cb3f : or eax, 0x4c0000de ; lea ecx, dword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000006acc2 : or eax, 0x5bd88948 ; ret
0x00000000001386b2 : or eax, 0x5c415d5b ; ret
0x0000000000113033 : or eax, 0x6348002b ; ret 0x4864
0x00000000000a6705 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x000000000003d4b1 : or eax, 0x80d0518d ; cli ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x0000000000145c47 : or eax, 0x83480000 ; ret 0x4910
0x00000000001477e1 : or eax, 0x83480000 ; ret 0xe910
0x0000000000145c75 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000a7db9 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x000000000006e3ba : or eax, 0x8c48348 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000008d832 : or eax, 0x8c48348 ; ret
0x00000000000711f4 : or eax, 0xc2890000 ; jmp 0x7118e
0x000000000017d119 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x0000000000185073 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x000000000010362e : or eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000015b3e3 : or eax, 0xf7f0ff3 ; ret
0x000000000002db93 : or eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000059879 : or eax, 0xfffff834 ; add rax, rcx ; jmp rax
0x000000000001faff : or eax, 0xffffffff ; cmp r9, rax ; je 0x1faac ; jmp 0x1fad5
0x000000000003577d : or eax, 0xffffffff ; ret
0x00000000001a4f7f : or eax, dword ptr [r14 + rcx + 0x18] ; ret
0x000000000009d9dc : or eax, dword ptr [rax] ; add bh, dh ; ret 0
0x000000000005744f : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000144e3d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147981 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144e61 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000000dd98 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x000000000012d932 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d21e9 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000d1bac : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x00000000000ce049 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x000000000008b29f : or eax, dword ptr [rax] ; ret
0x000000000002a694 : or eax, dword ptr [rbx + 0x67403fe] ; pop rbx ; ret
0x000000000011e6dc : or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001bcb68 : or eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000036848 : or eax, dword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001bb838 : or eax, dword ptr [rdx] ; mov word ptr [rdx], cs ; ret
0x000000000019f906 : or eax, dword ptr [rdx] ; ret 0x900e
0x00000000001a4f80 : or eax, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001b000f : or eax, dword ptr [rsi + rcx + 0x38] ; ret
0x0000000000034cb7 : or eax, ecx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000034b67 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x00000000001193c0 : or eax, edi ; bswap eax ; ret
0x0000000000107516 : or eax, edi ; ret
0x0000000000034a65 : or eax, edx ; movq xmm0, rax ; ret
0x0000000000107552 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003a68f : or eax, edx ; ret
0x0000000000035044 : or eax, esi ; je 0x34ff1 ; ret
0x0000000000107555 : or eax, esi ; or rax, rdi ; ret
0x000000000007c884 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000006df38 : or ebp, eax ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073ce0 : or ebp, eax ; ret 0xfabb
0x000000000007ef53 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x000000000019d3f1 : or ebp, ecx ; call qword ptr [rbx]
0x000000000019d529 : or ebp, ecx ; call qword ptr [rcx]
0x000000000019d3d9 : or ebp, ecx ; call qword ptr [rdx]
0x000000000019d349 : or ebp, ecx ; call qword ptr [rsi]
0x000000000019d511 : or ebp, ecx ; jmp qword ptr [rax]
0x000000000006fdc4 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010c95c : or ebx, dword ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000001bc442 : or ebx, eax ; add dword ptr [rbx], eax ; cmc ; add al, byte ptr [rax] ; ret
0x000000000015b5a3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000075ade : or ebx, esi ; ret
0x000000000008392a : or ecx, dword ptr [rax - 0x3f] ; out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x000000000007ef94 : or ecx, dword ptr [rax - 0x3f] ; out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x00000000000c190e : or ecx, dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000006ffb7 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010c56b : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ffa17 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000000000110c3d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x00000000000ed1fb : or ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x0000000000024bbd : or ecx, dword ptr [rax - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000007d0a9 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x000000000003d479 : or ecx, dword ptr [rbp - 0x57f2faf] ; or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xb60f
0x00000000000abbf4 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000abc44 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a66c3 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000001a25fe : or ecx, dword ptr [rdx + 0xa] ; ret
0x0000000000094a94 : or ecx, edx ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000cd98b : or edi, dword ptr [rax + 0xfde8] ; jne 0xcd964 ; ret
0x000000000010e98c : or edi, dword ptr [rax + 1] ; ret
0x000000000012dd64 : or edi, dword ptr [rax + 2] ; ret
0x00000000001132c4 : or edi, dword ptr [rax + 7] ; ret
0x0000000000045b6a : or edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000045af6 : or edi, dword ptr [rax] ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x0000000000113cf6 : or edi, dword ptr [rcx] ; ret 0xf7e
0x0000000000175291 : or edi, dword ptr [rip + 0x39480025] ; ret
0x0000000000128031 : or edi, dword ptr [rsi - 0x76b7ffd7] ; ret 0x1be
0x000000000017433d : or edi, edi ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000aa057 : or edi, edi ; loope 0xaa0ca ; nop dword ptr [rax + rax] ; ret
0x00000000001953a9 : or edi, esp ; call qword ptr [rax + 0x20fffc0d]
0x0000000000195409 : or edi, esp ; jmp qword ptr [rax]
0x00000000001b77f2 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x00000000001a2636 : or esi, dword ptr [rbx + 0xa] ; ret
0x00000000001a1428 : or esi, dword ptr [rbx + 0xe] ; nop ; add dword ptr [rsi + rcx + 0x10], ecx ; ret
0x000000000012b9a4 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b77f3 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x00000000001a7c89 : or esi, eax ; jmp rbx
0x00000000000fc31e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000015b4c3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000f6cb4 : or esi, ebx ; ret
0x000000000006dde4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000789d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f97 : or esp, dword ptr [rdx] ; js 0x2f51 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000fb564 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x0000000000195405 : or esp, edi ; jmp qword ptr [rax]
0x0000000000035f42 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000036085 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000168b75 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000780e7 : or r11b, bpl ; xchg eax, edx ; mov edx, eax ; jmp 0x78085
0x000000000015b612 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b5a2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000015b532 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001a2635 : or r14d, dword ptr [r11 + 0xa] ; ret
0x000000000015b4c2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fb696 : or r8b, r13b ; ret
0x00000000001bb837 : or r8d, dword ptr [r10] ; mov word ptr [rdx], cs ; ret
0x00000000001b000e : or r8d, dword ptr [r14 + r9 + 0x38] ; ret
0x0000000000035043 : or r8d, esi ; je 0x34ff2 ; ret
0x0000000000094a93 : or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000da6f2 : or r9b, al ; out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x0000000000029d93 : or r9b, byte ptr [r8 + 0x39] ; ret 0x4676
0x00000000001a25fd : or r9d, dword ptr [r10 + 0xa] ; ret
0x0000000000168bf7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000006c231 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000006c959 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000003577c : or rax, 0xffffffffffffffff ; ret
0x00000000001ba316 : or rax, qword ptr [r14 + r9 + 0x38] ; ret
0x000000000014cde2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000036847 : or rax, qword ptr [rdx] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000107557 : or rax, rdi ; ret
0x0000000000034a64 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000003a68e : or rax, rdx ; ret
0x0000000000107554 : or rax, rsi ; or rax, rdi ; ret
0x000000000012de43 : or sil, sil ; ret 0x8802
0x0000000000034800 : orpd xmm0, xmm1 ; ret
0x0000000000034801 : orps xmm0, xmm1 ; ret
0x0000000000034bce : orps xmm0, xmm3 ; ret
0x0000000000128681 : out -0x18, eax ; cdq ; xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000112002 : out -0x18, eax ; cwde ; ret
0x00000000000f5d82 : out -0x18, eax ; push -0x76000003 ; ret 0xcb8
0x000000000002e247 : out -0x18, eax ; ret
0x000000000005ae27 : out -0x18, eax ; ret 0xb
0x0000000000183f20 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000039905 : out -0x77, eax ; ret
0x00000000000302fe : out -0x77, eax ; ret 0x8948
0x00000000000f1439 : out -0x77, eax ; ret 0x8b48
0x000000000002df33 : out -0x80, eax ; sete al ; ret
0x0000000000185c48 : out -0xb, eax ; mov ch, 0xab ; ret
0x00000000001aed69 : out -0xc, eax ; jmp qword ptr [rcx]
0x000000000015ae2a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000197db5 : out 0, al ; add byte ptr [rsp + rbp*2 - 0x12], al ; call rsp
0x00000000001aa2b5 : out 0, eax ; add byte ptr [rax], bl ; out dx, eax ; int1 ; jmp rcx
0x0000000000197dd5 : out 0, eax ; add byte ptr [rcx + rsi*2], dl ; out dx, al ; jmp rsp
0x00000000001193c9 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000112671 : out 0x31, eax ; shr al, 0xb7 ; ret
0x000000000003730b : out 0x41, eax ; call rdi
0x000000000003731c : out 0x48, al ; mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000086b36 : out 0x48, al ; mov edi, eax ; pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x00000000000f4003 : out 0x48, al ; mov edi, ebp ; call 0xf0306
0x0000000000037345 : out 0x48, al ; mov edi, ebp ; call r15
0x0000000000088d02 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000012a9dc : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x000000000012e736 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000087e64 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000012a5d0 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000abce0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000484c8 : out 0x48, eax ; mov eax, edx ; ret
0x00000000000ff285 : out 0x49, eax ; mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000000d186f : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001735b0 : out 0x4c, eax ; mov edi, esi ; call 0x1f8ae
0x0000000000088e57 : out 0x4c, eax ; mov edx, ebp ; mov rsi, rbp ; call rax
0x00000000000ad91b : out 0x4d, eax ; mov ecx, edi ; call rbx
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000008605e : out 0x5b, al ; pop rbp ; pop r12 ; jmp rax
0x000000000007bfd3 : out 0x5b, al ; ret
0x0000000000138ee8 : out 0x5b, eax ; ret
0x000000000008683b : out 0x5d, al ; pop r12 ; jmp rax
0x0000000000195000 : out 0xa7, al ; std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x000000000000247e : out 0xa9, al ; ret 0xbd07
0x00000000000f6581 : out 0xe8, al ; fld dword ptr [rcx] ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000000b1e38 : out 0xe8, al ; ret 0x594
0x00000000000dc128 : out 0xe8, al ; ret 0xf436
0x00000000000cd3d1 : out 0xe8, al ; test eax, 0x39fffffe ; ret
0x00000000001970c1 : out 0xea, al ; jmp rsp
0x00000000001a6de9 : out 0xee, al ; call qword ptr [rax]
0x000000000015adaa : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000959b9 : out 0xf3, al ; ret
0x00000000001aed09 : out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001998f1 : out 0xf6, al ; call rsp
0x000000000019a111 : out 0xf7, al ; dec esp ; ret
0x000000000019a119 : out 0xf7, al ; jmp rsp
0x000000000006f734 : out 0xff, al ; push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001ba165 : out 1, al ; add al, ch ; push rdi ; call qword ptr [rdx]
0x00000000001bd1c8 : out 1, eax ; add byte ptr [rax], al ; ret 4
0x00000000000e3534 : out 2, al ; call 0x1f7f4
0x0000000000123fac : out 4, al ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012414d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x00000000000208f1 : out 4, eax ; add rdi, rbp ; call rax
0x000000000011e173 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000094909 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000012e309 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000047d66 : out dx, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x00000000001aa99d : out dx, al ; add byte ptr [rax], al ; and byte ptr [rdx], cl ; call rsi
0x0000000000197e6d : out dx, al ; add byte ptr [rax], al ; in al, -0x27 ; out dx, al ; call rsp
0x0000000000123bcf : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x123bdc ; ret
0x0000000000097383 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x000000000009742b : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000123bcc : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x123bdf ; ret
0x000000000008392d : out dx, al ; add ecx, dword ptr [rax - 0x77] ; ret 0xce31
0x0000000000076a43 : out dx, al ; call 0x4d178
0x00000000001a63c2 : out dx, al ; call qword ptr [rax]
0x00000000001a6a2a : out dx, al ; call qword ptr [rcx]
0x00000000001a6442 : out dx, al ; call qword ptr [rdx]
0x00000000001a5882 : out dx, al ; call qword ptr [rsi]
0x0000000000088e5d : out dx, al ; call rax
0x0000000000187476 : out dx, al ; call rsp
0x000000000013362e : out dx, al ; cdq ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; outsb dx, byte ptr [rsi] ; ret 0xffee
0x0000000000133638 : out dx, al ; dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f8af
0x000000000013a7a2 : out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000130df7 : out dx, al ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x0000000000133deb : out dx, al ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000018765a : out dx, al ; dec eax ; push rcx ; out dx, al ; jmp qword ptr [rax]
0x000000000018748e : out dx, al ; dec esp ; out dx, al ; call rsp
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000185077 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000003aa1 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000187e6d : out dx, al ; int1 ; call rax
0x0000000000187e79 : out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187e69 : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; call rax
0x0000000000187e49 : out dx, al ; int1 ; inc eax ; out dx, al ; int1 ; jmp rax
0x0000000000187e35 : out dx, al ; int1 ; jmp qword ptr [rax]
0x0000000000187e4d : out dx, al ; int1 ; jmp rax
0x000000000018765e : out dx, al ; jmp qword ptr [rax]
0x00000000001a61f2 : out dx, al ; jmp qword ptr [rcx]
0x00000000001a5ed2 : out dx, al ; jmp qword ptr [rdi]
0x00000000001a634a : out dx, al ; jmp qword ptr [rdx]
0x00000000001a6b32 : out dx, al ; jmp qword ptr [rsi]
0x00000000001a6972 : out dx, al ; jmp rbx
0x00000000001a6622 : out dx, al ; jmp rdx
0x00000000001979aa : out dx, al ; jmp rsp
0x0000000000003795 : out dx, al ; jne 0x3775 ; ret 0x975
0x0000000000197caa : out dx, al ; lcall ptr [rcx + 0x5e840000] ; out dx, al ; jmp rsp
0x00000000001874b2 : out dx, al ; lcall ptr [rsi + rcx*2 + 0x4dd4ffee] ; out dx, al ; call rsp
0x0000000000197dd2 : out dx, al ; ljmp ptr [rdi + 0x71140000] ; out dx, al ; jmp rsp
0x00000000001874a6 : out dx, al ; ljmp ptr [rsi + rcx*2 + 0x4dd4ffee] ; out dx, al ; call rsp
0x0000000000003183 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000152bfa : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000008595c : out dx, al ; mov rdi, rax ; mov rbx, rax ; call 0x81b89
0x000000000008588f : out dx, al ; mov rdi, rbx ; call 0x81b86
0x00000000000bda29 : out dx, al ; mov rdi, rbx ; call 0x89d16
0x0000000000085c7f : out dx, al ; mov rdi, rbx ; call rax
0x000000000015b1ba : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000ac0a9 : out dx, al ; nop word ptr [rax + rax] ; ret
0x000000000014b43e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000da6f5 : out dx, al ; or byte ptr [rcx - 0x77], al ; ret 0xff25
0x000000000008f394 : out dx, al ; or eax, dword ptr [rax] ; ret
0x0000000000197e6a : out dx, al ; push qword ptr [rsi + rbp*8 - 0x261c0000] ; out dx, al ; call rsp
0x00000000001825f8 : out dx, al ; push rsi ; in al, dx ; call qword ptr [rax]
0x00000000000025b2 : out dx, al ; ret 0x88ad
0x00000000001954e5 : out dx, al ; sti ; jmp qword ptr [rax]
0x00000000001886dc : out dx, al ; test esi, ebx ; jmp qword ptr [rax]
0x00000000000c84bd : out dx, al ; xor edx, edx ; jmp 0xc8489
0x00000000000aaf8d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x0000000000081bd3 : out dx, eax ; add al, 0x8d ; dec byte ptr [r8 - 0x75] ; ret
0x0000000000101aed : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c023f : out dx, eax ; add cl, byte ptr [rax - 0x46] ; ret
0x00000000001baadd : out dx, eax ; add dword ptr [rax], eax ; mov al, 0x12 ; clc ; jmp qword ptr [rbx]
0x000000000007ef97 : out dx, eax ; add ecx, dword ptr [rax - 0x77] ; ret 0xcf31
0x000000000013a74c : out dx, eax ; add rbx, r12 ; call r14
0x0000000000172b2d : out dx, eax ; add rdi, qword ptr [r13 + 0x10] ; call r12
0x000000000013363c : out dx, eax ; call 0x1f8ab
0x00000000000869a3 : out dx, eax ; call 0x82bd3
0x00000000000f4006 : out dx, eax ; call 0xf0303
0x00000000000fb6a2 : out dx, eax ; call 0xf78b3
0x000000000012e30f : out dx, eax ; call qword ptr [rbx]
0x00000000001a7912 : out dx, eax ; call qword ptr [rdi]
0x000000000011ff1f : out dx, eax ; call r12
0x00000000000391ad : out dx, eax ; call r14
0x0000000000037348 : out dx, eax ; call r15
0x00000000000208f5 : out dx, eax ; call rax
0x00000000000ad297 : out dx, eax ; call rbx
0x000000000013bf52 : out dx, eax ; call rcx
0x000000000012de06 : out dx, eax ; call rdx
0x0000000000198012 : out dx, eax ; call rsp
0x000000000012b056 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x0000000000134d45 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000134d84 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0xbfeb
0x000000000019815a : out dx, eax ; dec esp ; add al, byte ptr [rcx] ; add ah, al ; mov ebp, edi ; jmp rsp
0x00000000001981a2 : out dx, eax ; dec esp ; add eax, dword ptr [rcx] ; add ah, dh ; xchg eax, ecx ; out dx, eax ; jmp rsp
0x0000000000198282 : out dx, eax ; inc dword ptr [rax + rcx - 0x4dbffff] ; out dx, eax ; call rsp
0x000000000019811a : out dx, eax ; inc esp ; add dword ptr [rcx], eax ; add byte ptr [rcx + rax*4], ah ; out dx, eax ; jmp rsp
0x0000000000187e7d : out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187e81 : out dx, eax ; int1 ; jmp qword ptr [rax]
0x00000000001aa2b9 : out dx, eax ; int1 ; jmp rcx
0x000000000009d9c1 : out dx, eax ; jmp 0x9d36b
0x000000000009e3fb : out dx, eax ; jmp 0x9d3f3
0x00000000001a75e2 : out dx, eax ; jmp qword ptr [rax]
0x00000000001a7c2a : out dx, eax ; jmp qword ptr [rbx]
0x000000000012c548 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x00000000001a7392 : out dx, eax ; jmp rsi
0x0000000000197f72 : out dx, eax ; jmp rsp
0x00000000001981d2 : out dx, eax ; lcall ptr [rsp + rax + 1] ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x000000000012ca86 : out dx, eax ; lea r9, qword ptr [rsp + 0x18] ; call qword ptr [rax]
0x000000000013b44b : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000013b495 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000152a2a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b26 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152a72 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173612 : out dx, eax ; mov r13, r14 ; call 0x1f8ae
0x0000000000048b80 : out dx, eax ; mov rax, rdx ; ret
0x00000000001153a0 : out dx, eax ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000135b7b : out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000132743 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000013254b : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000012a9df : out dx, eax ; mov rcx, r13 ; call rbx
0x00000000000378b5 : out dx, eax ; mov rdx, rbp ; call r15
0x000000000015b23a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000014b53d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000017436c : out dx, eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000859c4 : out dx, eax ; pop rbx ; pop rbp ; jmp rax
0x0000000000072cc1 : out dx, eax ; pop rbx ; ret
0x0000000000197f6a : out dx, eax ; push qword ptr [rdi + rsi*8 + 0x1f840000] ; out dx, eax ; jmp rsp
0x000000000016e493 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4a8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e4bd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aae18 : out dx, eax ; ret
0x000000000012befd : out dx, eax ; ret 0
0x00000000000aa2a3 : out dx, eax ; ret 0xf66
0x00000000001735b5 : out dx, eax ; ret 0xffea
0x000000000016f9ac : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f995 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f97e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e43a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000195525 : out dx, eax ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000012d70e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000048088 : out dx, eax ; xor eax, eax ; ret
0x00000000001470ee : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000bf6f1 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000010c6be : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000017094e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001b294d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001b29c5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; clc ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b2965 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; and esi, esi ; jmp qword ptr [rsi]
0x00000000001b291d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000b6074 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00000000001960c9 : outsb dx, byte ptr [rsi] ; cld ; jmp rax
0x00000000001b08f9 : outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x0000000000034cbb : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x0000000000186a25 : outsb dx, byte ptr [rsi] ; in eax, dx ; call rcx
0x0000000000186a45 : outsb dx, byte ptr [rsi] ; in eax, dx ; call rdx
0x00000000001a4409 : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001869ed : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000187ba9 : outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187bb5 : outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000187ba5 : outsb dx, byte ptr [rsi] ; int1 ; inc eax ; outsb dx, byte ptr [rsi] ; int1 ; call rax
0x0000000000187bad : outsb dx, byte ptr [rsi] ; int1 ; jmp rax
0x0000000000185823 : outsb dx, byte ptr [rsi] ; ja 0x1857ac ; ret 0x48f
0x0000000000057c06 : outsb dx, byte ptr [rsi] ; ret 0x36
0x0000000000133636 : outsb dx, byte ptr [rsi] ; ret 0xffee
0x00000000000bf4ae : outsb dx, byte ptr [rsi] ; ret 0xfffc
0x0000000000183564 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000000f6400 : outsb dx, byte ptr [rsi] ; std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000194f09 : outsb dx, byte ptr [rsi] ; sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x000000000000366d : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000008f75a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007e5c4 : outsd dx, dword ptr [rsi] ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000109f5d : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000970ad : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001b2a0d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; and sil, sil ; jmp qword ptr [rsi]
0x00000000001b2a85 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b23ab
0x00000000001b2ab5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b23db
0x00000000001b2ae5 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; call 0x271b240b
0x00000000001b2a25 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000d647c : outsd dx, dword ptr [rsi] ; call 0xffffffffc2e173ed
0x00000000001bbf39 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rax]
0x00000000001bbf09 : outsd dx, dword ptr [rsi] ; clc ; call qword ptr [rdi]
0x00000000001bc029 : outsd dx, dword ptr [rsi] ; clc ; call rcx
0x00000000001960cd : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x00000000001b0a01 : outsd dx, dword ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000011564d : outsd dx, dword ptr [rsi] ; fisub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x144
0x0000000000089ee8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000008fe2e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000d6478 : outsd dx, dword ptr [rsi] ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; call 0xffffffffc2e173f1
0x0000000000187bb9 : outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x000000000018746e : outsd dx, dword ptr [rsi] ; jb 0x18747a ; add byte ptr [rax], al ; add ah, ch ; out dx, al ; call rsp
0x000000000016f7ad : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000016f84d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008d52a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003d2fc : outsd dx, dword ptr [rsi] ; ret
0x0000000000115651 : outsd dx, dword ptr [rsi] ; ret 0x144
0x0000000000183f26 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000153367 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000016f852 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x00000000000e0ce2 : outsd dx, dword ptr [rsi] ; ret 0xddeb
0x000000000008d57a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000e0cc5 : outsd dx, dword ptr [rsi] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000019cf89 : outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000183f25 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000144d32 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000abf34 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000abf1f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000144d31 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000185325 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000185326 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000009e9a1 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x000000000009f015 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x0000000000034b41 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000034e71 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x000000000009f023 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x000000000009f0c5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x9f149 ; xor eax, eax ; ret
0x0000000000034b40 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000034e70 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000008b74f : pmovmskb edx, mm4 ; test edx, edx ; je 0x8b763 ; bsf eax, edx ; ret
0x00000000000dbeb5 : pop qword ptr [rsi - 0x77000000] ; ret 0xd139
0x0000000000115065 : pop r10 ; ret
0x00000000001857af : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000084caa : pop r12 ; jmp rax
0x0000000000086b3c : pop r12 ; jmp rcx
0x000000000010283f : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102859 : pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6e : pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000423cc : pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234a : pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010400b : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002024f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fb : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b2 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e3 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d125 : pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000206c2 : pop r12 ; pop r13 ; ret
0x00000000000b65d4 : pop r12 ; pop r14 ; ret
0x00000000000398c6 : pop r12 ; pop rbp ; ret
0x000000000001fb12 : pop r12 ; ret
0x00000000000423ce : pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234c : pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010400d : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020251 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fd : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b4 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e5 : pop r13 ; pop r14 ; ret
0x0000000000073632 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d127 : pop r13 ; pop rbp ; ret
0x00000000000206c4 : pop r13 ; ret
0x00000000000423d0 : pop r14 ; fmul st(0) ; ret
0x000000000004234e : pop r14 ; fmulp st(1) ; ret
0x000000000010400f : pop r14 ; pop r15 ; jmp rax
0x0000000000020253 : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210ff : pop r14 ; pop r15 ; ret
0x00000000000cd6b6 : pop r14 ; pop rbp ; ret
0x00000000000202e7 : pop r14 ; ret
0x0000000000073634 : pop r14 ; sar rax, 2 ; ret
0x0000000000104011 : pop r15 ; jmp rax
0x0000000000020255 : pop r15 ; pop rbp ; ret
0x0000000000021101 : pop r15 ; ret
0x000000000007eacc : pop r8 ; mov dword ptr [rdi + 4], eax ; ret
0x00000000001350f6 : pop r8 ; mov eax, 1 ; ret
0x0000000000194677 : pop r9 ; clc ; ret 0x6e1f
0x00000000000edc5f : pop rax ; adc byte ptr [rcx + rcx*4 + 0x78], al ; or byte ptr [rax - 0x77], cl ; ret
0x000000000013582e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001b2a28 : pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x000000000017431c : pop rax ; and eax, 0x1740025 ; ret
0x00000000001359f4 : pop rax ; call rax
0x0000000000195b19 : pop rax ; cld ; call qword ptr [rax + 0x10fffc57]
0x0000000000195b55 : pop rax ; cld ; call qword ptr [rax]
0x0000000000195b15 : pop rax ; cld ; jmp qword ptr [rax]
0x00000000001a6ae8 : pop rax ; cli ; call qword ptr [rax]
0x00000000001b5968 : pop rax ; fcomi st(6) ; jmp rsi
0x00000000001a6cc8 : pop rax ; fucomp st(6) ; jmp qword ptr [rsi]
0x00000000000b9fa9 : pop rax ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001aef88 : pop rax ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0c88 : pop rax ; jb 0x1b0c83 ; jmp qword ptr [rcx]
0x0000000000135836 : pop rax ; jmp rcx
0x000000000019e3c8 : pop rax ; jp 0x19e3b7 ; jmp qword ptr [rcx]
0x00000000001b1e18 : pop rax ; mov ch, 0xf5 ; call rdi
0x000000000007eacd : pop rax ; mov dword ptr [rdi + 4], eax ; ret
0x00000000001350f7 : pop rax ; mov eax, 1 ; ret
0x000000000002def4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002de82 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000012e78e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000101fb8 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000000e510e : pop rax ; or bh, dh ; ret
0x00000000000a4cc4 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000001b0928 : pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x000000000019cf88 : pop rax ; outsd dx, dword ptr [rsi] ; std ; call qword ptr [rcx]
0x00000000001b05c8 : pop rax ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000001f92e : pop rax ; pop rbx ; pop rbp ; ret
0x000000000005df1c : pop rax ; pop rdi ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000001073d9 : pop rax ; pop rdi ; call rax
0x0000000000143571 : pop rax ; pop rdx ; pop rbx ; ret
0x0000000000033544 : pop rax ; ret
0x00000000000caabc : pop rax ; ret 0x2f
0x000000000019aaf9 : pop rax ; stc ; jmp rsp
0x000000000010198b : pop rax ; sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ad9e8 : pop rax ; xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x00000000001bc178 : pop rax ; xchg ebx, edi ; call rcx
0x00000000000d1976 : pop rbp ; adc al, ch ; ret
0x00000000000dea87 : pop rbp ; add al, 0x85 ; fisttp dword ptr [rcx + 0x7e10245c] ; ret 0x8b48
0x00000000000de8bd : pop rbp ; add byte ptr [rcx], al ; ret 0xda39
0x0000000000119276 : pop rbp ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009e409 : pop rbp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000000000011018f : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000198e3d : pop rbp ; add dword ptr [rax], eax ; and al, 0x91 ; hlt ; jmp rsp
0x000000000012e83d : pop rbp ; add eax, edx ; ret
0x00000000001153a3 : pop rbp ; clc ; leave ; ret
0x00000000001957fd : pop rbp ; cld ; jmp qword ptr [rdx]
0x0000000000195741 : pop rbp ; cld ; jmp rax
0x000000000019b3c1 : pop rbp ; cli ; call rsp
0x000000000002e198 : pop rbp ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x0000000000048daa : pop rbp ; enter -0x74b8, 0x14 ; ret
0x00000000001a9929 : pop rbp ; int1 ; jmp qword ptr [rcx]
0x0000000000071fc4 : pop rbp ; jmp rax
0x000000000012bf25 : pop rbp ; jmp rcx
0x000000000012d712 : pop rbp ; jmp rdx
0x000000000013d6bb : pop rbp ; mov byte ptr [rax + 1], cl ; ret 0x8948
0x000000000007ef05 : pop rbp ; mov dword ptr [r12 + 0x14], eax ; pop r12 ; ret
0x0000000000084ca9 : pop rbp ; pop r12 ; jmp rax
0x0000000000086b3b : pop rbp ; pop r12 ; jmp rcx
0x000000000010283e : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102858 : pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6d : pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000423cb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x0000000000042349 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010400a : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000000210fa : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000202e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c1 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b65d3 : pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb11 : pop rbp ; pop r12 ; ret
0x000000000012cac6 : pop rbp ; pop r13 ; pop r14 ; ret
0x00000000000423cf : pop rbp ; pop r14 ; fmul st(0) ; ret
0x000000000004234d : pop rbp ; pop r14 ; fmulp st(1) ; ret
0x000000000010400e : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000020252 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fe : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000000cd6b5 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000202e6 : pop rbp ; pop r14 ; ret
0x0000000000073633 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x000000000006d128 : pop rbp ; pop rbp ; ret
0x0000000000048438 : pop rbp ; pop rbx ; ret
0x000000000001f930 : pop rbp ; ret
0x0000000000048db2 : pop rbp ; ror byte ptr [rax - 0x77], 0x14 ; ret
0x0000000000076ca6 : pop rbp ; sbb al, ch ; ret
0x0000000000188adc : pop rbp ; scasd eax, dword ptr [rdi] ; jmp qword ptr [rcx]
0x0000000000194ed5 : pop rbp ; sti ; jmp qword ptr [rax]
0x000000000007915c : pop rbp ; sub rax, rdx ; ret
0x00000000000d56e7 : pop rbp ; test al, 0xe8 ; ret 0xfd7a
0x00000000001132f1 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x00000000001a163d : pop rbx ; add byte ptr [rax], al ; adc cl, cl ; in al, dx ; call rsp
0x00000000001742e1 : pop rbx ; and al, 0x25 ; add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x0000000000182af8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000aac3c : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000aac6f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000001152e7 : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000195891 : pop rbx ; cld ; call rsp
0x0000000000195711 : pop rbx ; cld ; jmp qword ptr [rax]
0x00000000001960d5 : pop rbx ; cld ; jmp rax
0x00000000001b0581 : pop rbx ; cmc ; jmp qword ptr [rcx]
0x0000000000182af6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006e28e : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f8ca : pop rbx ; jmp rax
0x00000000000bf0b1 : pop rbx ; jp 0xbf0ea ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001192a8 : pop rbx ; mov eax, 0xca ; pop rbp ; pop r12 ; ret
0x0000000000070b80 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000070b6c : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000d5932 : pop rbx ; mov eax, 1 ; ret
0x00000000000efc8b : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x000000000003a725 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000aacdc : pop rbx ; mov eax, eax ; ret
0x0000000000047a11 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000116d0e : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x00000000000717ca : pop rbx ; mov eax, r13d ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fc49b : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000052c8e : pop rbx ; mov eax, r8d ; pop rbp ; pop r12 ; ret
0x000000000009ee6d : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x0000000000072220 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000072068 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000006eff7 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006fc82 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x0000000000086838 : pop rbx ; mov rsi, r12 ; pop rbp ; pop r12 ; jmp rax
0x0000000000133984 : pop rbx ; movzx eax, al ; pop rbp ; pop r12 ; ret
0x00000000000cd6b1 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006d124 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000398c5 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000012e83c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000071fc3 : pop rbx ; pop rbp ; jmp rax
0x000000000012bf24 : pop rbx ; pop rbp ; jmp rcx
0x000000000012d711 : pop rbx ; pop rbp ; jmp rdx
0x0000000000084ca8 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000086b3a : pop rbx ; pop rbp ; pop r12 ; jmp rcx
0x000000000010283d : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000102857 : pop rbx ; pop rbp ; pop r12 ; mov esi, 3 ; jmp rax
0x000000000006fb6c : pop rbx ; pop rbp ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x00000000000202e1 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000206c0 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b65d2 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000001fb10 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012cac5 : pop rbx ; pop rbp ; pop r13 ; pop r14 ; ret
0x000000000001f92f : pop rbx ; pop rbp ; ret
0x000000000007915b : pop rbx ; pop rbp ; sub rax, rdx ; ret
0x000000000002a69a : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x0000000000185de0 : pop rbx ; ret 0x6f9
0x0000000000194f0d : pop rbx ; sti ; call qword ptr [rax]
0x00000000000ad159 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000001fb74 : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000009ee5b : pop rbx ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000019b69d : pop rcx ; add al, byte ptr [rax] ; je 0x19b671 ; cli ; jmp rsp
0x000000000014199e : pop rcx ; add dword ptr [rax], eax ; add al, ch ; cdq ; ret 0xffee
0x00000000001942f0 : pop rcx ; clc ; ret 0x6e1f
0x0000000000196091 : pop rcx ; cld ; jmp rax
0x0000000000034ce0 : pop rcx ; enter 0x280f, -0x3f ; ret
0x00000000000662e2 : pop rcx ; or al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000be064 : pop rcx ; or eax, 0x440f4800 ; ret 0x8d48
0x0000000000197c89 : pop rcx ; out dx, al ; call rsp
0x000000000013cbcf : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000101efb : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ea66a : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x000000000003c1af : pop rcx ; rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000d20a3 : pop rcx ; ret
0x0000000000102d4b : pop rcx ; retf ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x000000000007d87e : pop rcx ; sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000000ac9e3 : pop rcx ; sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000001515a8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000f6f92 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000005df1d : pop rdi ; add byte ptr ss:[rax - 0x39], cl ; ret 0xfffe
0x00000000001b1acd : pop rdi ; add dword ptr [rax], eax ; push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x000000000014bbcd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001073da : pop rdi ; call rax
0x000000000019572d : pop rdi ; cld ; call qword ptr [rax]
0x0000000000195929 : pop rdi ; cld ; jmp qword ptr [rax]
0x00000000001960a1 : pop rdi ; cld ; jmp rax
0x00000000001957ed : pop rdi ; cld ; jmp rdx
0x0000000000152fc9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152dd9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000018509e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000104012 : pop rdi ; jmp rax
0x0000000000184061 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000152bf9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152a29 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152b25 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000152a71 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000020256 : pop rdi ; pop rbp ; ret
0x0000000000021102 : pop rdi ; ret
0x0000000000067499 : pop rdi ; ret 0xffff
0x00000000000c7885 : pop rdx ; adc byte ptr [rdi - 0x36], bh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001a15f5 : pop rdx ; add byte ptr [rax], al ; mov al, cl ; in al, dx ; call qword ptr [rax]
0x0000000000110cae : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000001464b6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000001b0521 : pop rdx ; cmc ; jmp qword ptr [rcx]
0x0000000000003a9e : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000184c81 : pop rdx ; je 0x184c4b ; ret 0xacfc
0x0000000000003185 : pop rdx ; jmp 0xffffffff88c2d332
0x00000000000ac883 : pop rdx ; or al, 0 ; ret
0x0000000000185c47 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000115064 : pop rdx ; pop r10 ; ret
0x0000000000101fbc : pop rdx ; pop rbx ; ret
0x00000000000ea669 : pop rdx ; pop rcx ; pop rbx ; ret
0x0000000000115089 : pop rdx ; pop rsi ; ret
0x0000000000001b92 : pop rdx ; ret
0x00000000001857b0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000ac575 : pop rdx ; test al, 0xf0 ; jne 0xac5a9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x000000000014bace : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001240fc : pop rsi ; add ebx, dword ptr [rbx - 0x3d] ; mov eax, 0xffffffff ; ret
0x000000000010931c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x00000000001957f9 : pop rsi ; cld ; call qword ptr [rdx + 0x22fffc5d]
0x0000000000195775 : pop rsi ; cld ; call qword ptr [rsi]
0x0000000000195935 : pop rsi ; cld ; call rax
0x0000000000195931 : pop rsi ; cld ; inc dword ptr [rax + 0x5e] ; cld ; call rax
0x00000000001960dd : pop rsi ; cld ; jmp rax
0x00000000001958b5 : pop rsi ; cld ; jmp rsp
0x00000000000cdebe : pop rsi ; fdivr st(3) ; dec dword ptr [rax - 0x77] ; ret
0x0000000000189068 : pop rsi ; fdivr st(3), st(0) ; push qword ptr [rdi] ; fcomi st(3) ; jmp qword ptr [rcx]
0x00000000000c924a : pop rsi ; fldcw word ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000423d1 : pop rsi ; fmul st(0) ; ret
0x000000000004234f : pop rsi ; fmulp st(1) ; ret
0x0000000000186a6d : pop rsi ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000186a69 : pop rsi ; in eax, dx ; ljmp ptr [rdi] ; pop rsi ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000094aa5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000197cb1 : pop rsi ; out dx, al ; jmp rsp
0x0000000000104010 : pop rsi ; pop r15 ; jmp rax
0x0000000000020254 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000021100 : pop rsi ; pop r15 ; ret
0x00000000000cd6b7 : pop rsi ; pop rbp ; ret
0x00000000000202e8 : pop rsi ; ret
0x0000000000101d7b : pop rsi ; ret 0xcdbb
0x0000000000073635 : pop rsi ; sar rax, 2 ; ret
0x00000000000f9095 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000012dd74 : pop rsi ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x0000000000147300 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001981d4 : pop rsp ; add al, 1 ; add byte ptr [rsp + rdx*4], ah ; out dx, eax ; call rsp
0x00000000001467b4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001a3c54 : pop rsp ; add dword ptr [rax], 0xed46e800 ; jmp qword ptr [rsi]
0x00000000000d9562 : pop rsp ; add eax, 0x83077500 ; rol byte ptr [rcx], 0x39 ; ret 0xe875
0x0000000000148000 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000bb8f5 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000195945 : pop rsp ; cld ; call qword ptr [rax]
0x0000000000195809 : pop rsp ; cld ; call rdx
0x0000000000195805 : pop rsp ; cld ; inc dword ptr [rdx + 0x5c] ; cld ; call rdx
0x0000000000196099 : pop rsp ; cld ; jmp rax
0x0000000000195789 : pop rsp ; cld ; jmp rsi
0x00000000001b9554 : pop rsp ; fiadd dword ptr [rcx] ; add byte ptr [rax], ch ; fdivrp st(7) ; jmp rdi
0x0000000000198511 : pop rsp ; int1 ; call rsp
0x00000000001a9911 : pop rsp ; int1 ; jmp qword ptr [rcx]
0x0000000000102948 : pop rsp ; iretd ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000084cab : pop rsp ; jmp rax
0x0000000000086b3d : pop rsp ; jmp rcx
0x0000000000199eec : pop rsp ; mov bl, 1 ; add byte ptr [rbp + rdx*2 - 9], ah ; call rsp
0x0000000000102840 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000010285a : pop rsp ; mov esi, 3 ; jmp rax
0x000000000006fb6f : pop rsp ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000145190 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000423cd : pop rsp ; pop r13 ; pop r14 ; fmul st(0) ; ret
0x000000000004234b : pop rsp ; pop r13 ; pop r14 ; fmulp st(1) ; ret
0x000000000010400c : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000020250 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000210fc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000cd6b3 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000202e4 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000073631 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x000000000006d126 : pop rsp ; pop r13 ; pop rbp ; ret
0x00000000000206c3 : pop rsp ; pop r13 ; ret
0x00000000000b65d5 : pop rsp ; pop r14 ; ret
0x00000000000398c7 : pop rsp ; pop rbp ; ret
0x00000000001a0b54 : pop rsp ; push rax ; add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b62
0x00000000001b1154 : pop rsp ; push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x0000000000003838 : pop rsp ; ret
0x000000000000318d : pop rsp ; ret 0x52c0
0x00000000001a8654 : pop rsp ; retf ; add byte ptr [rax], al ; call 0x131a76b8
0x000000000019d554 : pop rsp ; sbb al, byte ptr [rax] ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x0000000000194ed1 : pop rsp ; sti ; call rax
0x000000000019e554 : pop rsp ; sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54b ; jmp rsp
0x00000000001aef54 : pop rsp ; xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a587d : popfq ; add byte ptr [rax], al ; add byte ptr [rcx], 0xee ; call qword ptr [rsi]
0x00000000001972b5 : popfq ; add byte ptr [rax], al ; jmp 0x1972c1
0x000000000019996d : popfq ; add dword ptr [rax], eax ; div esi ; call rsp
0x00000000001ae33e : popfq ; add ecx, dword ptr [rdx] ; ret
0x000000000019640d : popfq ; cld ; call qword ptr [rdx]
0x000000000019638d : popfq ; cld ; jmp qword ptr [rsi]
0x000000000019654d : popfq ; cld ; jmp rax
0x00000000000b72e3 : popfq ; insd dword ptr [rdi], dx ; or eax, 0x3d8d4800 ; ret 0xdaa
0x00000000000e9085 : popfq ; ret
0x00000000001489e0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000005a7b3 : popfq ; sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x000000000015b302 : psllq mm1, qword ptr [r15] ; jg 0x15b31d ; ret
0x000000000015ddd2 : psllq mm1, qword ptr [r15] ; jg 0x15dded ; ret
0x00000000001608f2 : psllq mm1, qword ptr [r15] ; jg 0x16090d ; ret
0x000000000015b303 : psllq mm1, qword ptr [rdi] ; jg 0x15b31c ; ret
0x000000000015ddd3 : psllq mm1, qword ptr [rdi] ; jg 0x15ddec ; ret
0x00000000001608f3 : psllq mm1, qword ptr [rdi] ; jg 0x16090c ; ret
0x00000000000a5e66 : psllq mm1, qword ptr [rdi] ; jg 0xa5e7a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5e65 : psllq mm1, qword ptr [rdi] ; jg 0xa5e7b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a5ec7 : psllq mm1, qword ptr [rdi] ; jg 0xa5edc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a6b36 : psllq mm1, qword ptr [rdi] ; jg 0xa6b4a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b35 : psllq mm1, qword ptr [rdi] ; jg 0xa6b4b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a6b97 : psllq mm1, qword ptr [rdi] ; jg 0xa6bac ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a8f46 : psllq mm1, qword ptr [rdi] ; jg 0xa8f5a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8f45 : psllq mm1, qword ptr [rdi] ; jg 0xa8f5b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a8fa7 : psllq mm1, qword ptr [rdi] ; jg 0xa8fbc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a9a16 : psllq mm1, qword ptr [rdi] ; jg 0xa9a2a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a15 : psllq mm1, qword ptr [rdi] ; jg 0xa9a2b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a9a77 : psllq mm1, qword ptr [rdi] ; jg 0xa9a8c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bf21c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x00000000000ad5c7 : push -0x38b6ffcf ; ret 0xffff
0x00000000001877d8 : push -0x570011ac ; push rbx ; out dx, al ; jmp qword ptr [rax]
0x0000000000002c01 : push -0x7329150 ; ret
0x00000000001118e4 : push -0x74fff86c ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000f5d84 : push -0x76000003 ; ret 0xcb8
0x000000000004b15c : push -0x76000005 ; ret 0x8941
0x000000000005c896 : push -0x7c000006 ; ret 0x8908
0x0000000000170934 : push -0x9ffffff ; ret 0x7501
0x000000000002057f : push -0xcfffff7 ; ret
0x00000000000ac567 : push -0xfb872b8 ; ret
0x00000000001968fd : push 0 ; add ah, dl ; jae 0x1968f2 ; jmp rsp
0x000000000012c46a : push 0 ; push 0x19 ; call qword ptr [rax]
0x0000000000045f8f : push 0x11b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000004665e : push 0x13b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000012c46c : push 0x19 ; call qword ptr [rax]
0x00000000000fa398 : push 0x244c8903 ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x00000000000e108c : push 0x2494b60f ; ret
0x0000000000081862 : push 0x25 ; xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x000000000005633c : push 0x39fffffb ; fmul dword ptr [rdi] ; ret
0x00000000001ba2fa : push 0x41380e0a ; ret
0x0000000000198fc5 : push 0x44840001 ; cmc ; jmp rsp
0x0000000000085c7c : push 0x48ee894c ; mov edi, ebx ; call rax
0x00000000000ac882 : push 0x5a ; or al, 0 ; ret
0x00000000000e8a43 : push 0x5c415d5b ; pop r13 ; ret
0x00000000001960f9 : push 0x6a60fffc ; cld ; jmp rax
0x0000000000185822 : push 0x6e ; ja 0x1857ad ; ret 0x48f
0x00000000001960fd : push 0xfc ; jmp rax
0x0000000000096e3b : push 0xff ; ja 0x96e21 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000134f8e : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000a68c2 : push 5 ; add byte ptr [rax], al ; ret
0x00000000000504c1 : push qword ptr [r9] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000194e4f : push qword ptr [rax + 0x1e] ; sti ; call qword ptr [rax]
0x0000000000194e6f : push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x000000000019592f : push qword ptr [rax + 0x40fffc5e] ; pop rsi ; cld ; call rax
0x0000000000195e1b : push qword ptr [rax + 0x40fffc86] ; xchg ah, bh ; call rax
0x0000000000196313 : push qword ptr [rax + 0x40fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rax
0x000000000019507f : push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; jmp rax
0x0000000000195b83 : push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019597f : push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000194f0b : push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x0000000000194def : push qword ptr [rax + 6] ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x000000000019a9fb : push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x0000000000187dcb : push qword ptr [rax - 0x14] ; int1 ; jmp qword ptr [rax]
0x0000000000188e9b : push qword ptr [rax - 0x24] ; call rax
0x00000000001952d3 : push qword ptr [rax - 0x28] ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x000000000019526f : push qword ptr [rax - 0x29] ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x00000000001952ef : push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x0000000000189f9b : push qword ptr [rax - 0x2f000a7f] ; mov dr0, ebp ; jmp rsi
0x0000000000187fb7 : push qword ptr [rax - 0x3f000dff] ; add edx, esi ; jmp rax
0x0000000000187e67 : push qword ptr [rax - 0x3f000e12] ; out dx, al ; int1 ; call rax
0x0000000000187df3 : push qword ptr [rax - 0x3f000e14] ; in al, dx ; int1 ; call rax
0x0000000000196357 : push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x0000000000196543 : push qword ptr [rax - 0x62] ; cld ; jmp rax
0x0000000000060dbb : push qword ptr [rax - 0x77] ; ret
0x0000000000195e4b : push qword ptr [rax - 0x7f] ; cld ; call qword ptr [rax]
0x00000000001954eb : push qword ptr [rax - 0xf] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x0000000000187f77 : push qword ptr [rax - 1] ; int1 ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f5f : push qword ptr [rax - 2] ; int1 ; jmp qword ptr [rax - 0x2f000e02]
0x000000000019553f : push qword ptr [rax - 8] ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000194e2f : push qword ptr [rax] ; adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001954b3 : push qword ptr [rax] ; add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x000000000019549b : push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x0000000000194ddf : push qword ptr [rax] ; add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000194e8f : push qword ptr [rax] ; cmp bh, bl ; call qword ptr [rax]
0x0000000000195273 : push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x000000000017584b : push qword ptr [rax] ; jmp 0x175853
0x00000000000a56cf : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000019556f : push qword ptr [rax] ; sub ah, bh ; push rax ; sub esp, edi ; call rax
0x0000000000194e67 : push qword ptr [rax] ; sub bl, bh ; call rax
0x00000000001955f7 : push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x000000000019528f : push qword ptr [rax] ; xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x00000000001722b8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x0000000000189eef : push qword ptr [rbp + 0x7b] ; cmc ; jmp rsi
0x000000000007469b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000007ba4d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000072b65 : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000142960 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000072b0d : push qword ptr [rbp + rdi*4 - 0xa] ; ret 0x7508
0x00000000000c89ae : push qword ptr [rbp + rsi - 0x77] ; ret 0xe283
0x0000000000048b7e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000011fd42 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x000000000012877b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017423c : push qword ptr [rbp - 0x16] ; pop rbx ; ret
0x00000000000484c6 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000007bfd1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000115b32 : push qword ptr [rbp - 0xe] ; xor eax, eax ; leave ; ret
0x00000000000cc295 : push qword ptr [rbx + 0x31] ; ret
0x00000000000f5a48 : push qword ptr [rbx + 0x34] ; ret
0x000000000003576c : push qword ptr [rbx + 1] ; ret
0x0000000000047b26 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000072cbc : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000195db7 : push qword ptr [rbx + rax*4 - 0x7cbb0004] ; cld ; call rsp
0x0000000000073cde : push qword ptr [rbx + rcx - 0x18] ; ret 0xfabb
0x0000000000189e87 : push qword ptr [rbx] ; cmc ; inc dword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189da3 : push qword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189e77 : push qword ptr [rbx] ; cmc ; jmp rsi
0x0000000000189d9f : push qword ptr [rbx] ; cmc ; push qword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189e73 : push qword ptr [rbx] ; cmc ; push qword ptr [rbx] ; cmc ; jmp rsi
0x0000000000198e93 : push qword ptr [rcx + 0x14840001] ; cmc ; call rsp
0x00000000001978b3 : push qword ptr [rcx + rcx*8 - 0xfac0000] ; in eax, dx ; call rsp
0x000000000019b033 : push qword ptr [rcx + rsi + 2] ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x0000000000197583 : push qword ptr [rcx + rsi*4 - 0x7f5c0000] ; in eax, dx ; jmp rsp
0x0000000000074b81 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000cf38b : push qword ptr [rcx] ; ror byte ptr [rax - 0x75], 0x54 ; ret
0x0000000000134d52 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or cl, ch ; ret 0xf382
0x0000000000075f78 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000504c2 : push qword ptr [rcx] ; sal bh, cl ; int1 ; add eax, r8d ; ret
0x00000000000b7c15 : push qword ptr [rcx] ; test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x000000000011589c : push qword ptr [rdi + 0x1b] ; ret
0x000000000003542d : push qword ptr [rdi + 0x20] ; ret
0x00000000000f7618 : push qword ptr [rdi + 0x35] ; ret
0x00000000000f76bc : push qword ptr [rdi + 0x41] ; add rsp, 0x60 ; pop rbx ; ret
0x00000000000fc763 : push qword ptr [rdi + 0xa] ; ret
0x00000000000f6cb2 : push qword ptr [rdi + 0xb] ; ret
0x00000000000357a1 : push qword ptr [rdi + 0xc] ; ret
0x00000000000cd58c : push qword ptr [rdi + 1] ; ret
0x00000000000357eb : push qword ptr [rdi + 2] ; ret
0x00000000000f6bba : push qword ptr [rdi + 3] ; ret
0x00000000000f6c09 : push qword ptr [rdi + 4] ; ret
0x00000000000cc170 : push qword ptr [rdi + 5] ; ret
0x00000000000cc07f : push qword ptr [rdi + 6] ; ret
0x00000000000c9656 : push qword ptr [rdi + 7] ; ret
0x0000000000035735 : push qword ptr [rdi + 8] ; ret
0x00000000000c83dc : push qword ptr [rdi + 9] ; pop rbx ; ret
0x00000000000bc43c : push qword ptr [rdi + 9] ; ret
0x000000000007b596 : push qword ptr [rdi + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x00000000000e84c6 : push qword ptr [rdi + rax - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001347f6 : push qword ptr [rdi + rbp*4 - 0x18] ; ret 0x3a
0x0000000000197f6b : push qword ptr [rdi + rsi*8 + 0x1f840000] ; out dx, eax ; jmp rsp
0x0000000000096e3c : push qword ptr [rdi - 0x27] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115874 : push qword ptr [rdi - 0x33] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000018906b : push qword ptr [rdi] ; fcomi st(3) ; jmp qword ptr [rcx]
0x0000000000189017 : push qword ptr [rdi] ; fcomi st(3) ; jmp rsp
0x0000000000188fe7 : push qword ptr [rdi] ; fcomi st(3) ; push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x0000000000188ad7 : push qword ptr [rdi] ; scasd eax, dword ptr [rdi] ; lcall ptr [rbp - 0x51] ; jmp qword ptr [rcx]
0x0000000000195803 : push qword ptr [rdx + 0x42fffc5c] ; pop rsp ; cld ; call rdx
0x0000000000195cef : push qword ptr [rdx + 0x42fffc84] ; test bh, ah ; call rdx
0x00000000001961e7 : push qword ptr [rdx + 0x42fffcab] ; stosd dword ptr [rdi], eax ; cld ; call rdx
0x00000000001962af : push qword ptr [rdx + rbp*4 - 0x55bb0004] ; cld ; call rsp
0x000000000019aacb : push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x00000000001989db : push qword ptr [rdx + rdi + 0x24440001] ; jmp rsp
0x00000000000ad2ab : push qword ptr [rdx + rdx*2 - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000001970db : push qword ptr [rdx + rdx*4] ; add byte ptr [rsp + rbp*8 - 0x16], dh ; jmp rsp
0x000000000018a6ff : push qword ptr [rdx - 0x4d000983] ; jge 0x18a705 ; call qword ptr [rdx]
0x000000000018a9ff : push qword ptr [rdx - 0x4d000986] ; jp 0x18aa05 ; call rsp
0x00000000001961cf : push qword ptr [rdx - 0x59] ; cld ; jmp rdx
0x00000000001963ff : push qword ptr [rdx] ; lahf ; cld ; jmp qword ptr [rdx + 0x12fffc9e]
0x00000000001892e7 : push qword ptr [rdx] ; push rax ; hlt ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x0000000000196183 : push qword ptr [rsi + 0x46fffca8] ; test al, 0xfc ; call rsi
0x0000000000109979 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000001869eb : push qword ptr [rsi + rbp*2 + 0x6627ffed] ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000186a1f : push qword ptr [rsi + rbp*2 + 0x6eb4ffed] ; in eax, dx ; call rcx
0x0000000000186a3f : push qword ptr [rsi + rbp*2 + 0x6eb4ffed] ; in eax, dx ; call rdx
0x0000000000186a57 : push qword ptr [rsi + rbp*2 + 0x6eb4ffed] ; in eax, dx ; jmp qword ptr [rdi]
0x0000000000197e6b : push qword ptr [rsi + rbp*8 - 0x261c0000] ; out dx, al ; call rsp
0x0000000000195003 : push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x000000000019a643 : push qword ptr [rsp + 0x65540001] ; clc ; jmp rsp
0x000000000018870b : push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x0000000000188feb : push qword ptr [rsp + rax*8] ; jmp qword ptr [rcx]
0x00000000001974db : push qword ptr [rsp + rbp*4 + 0x6b440000] ; in eax, dx ; jmp rsp
0x00000000001976e3 : push qword ptr [rsp + rdi*4 - 0x502c0000] ; in eax, dx ; call rsp
0x0000000000135026 : push r12 ; mov eax, 1 ; ret
0x000000000007b20c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000071c3a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007c891 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000112ee4 : push rax ; adc byte ptr [rbx], ch ; add byte ptr [rax + 0xf], cl ; ret
0x000000000012c6fd : push rax ; adc dh, dh ; ret 0x7401
0x000000000008156d : push rax ; adc dh, dh ; ret 0xf0f
0x000000000018802b : push rax ; add al, 0xf2 ; call qword ptr [rax]
0x00000000000819e6 : push rax ; add al, ch ; ret
0x0000000000195498 : push rax ; add bh, ah ; push qword ptr [rax] ; add al, 0xfc ; jmp qword ptr [rax]
0x000000000007b20d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001a0b55 : push rax ; add byte ptr [rax], al ; cwde ; stosb byte ptr [rdi], al ; jmp 0x1a0b61
0x0000000000187f97 : push rax ; add dl, dh ; jmp qword ptr [rax]
0x0000000000077f5c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001b0bc5 : push rax ; add dword ptr [rax], eax ; cmp byte ptr [rcx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0bf5 : push rax ; add dword ptr [rax], eax ; cwde ; jno 0x1b0bf6 ; jmp qword ptr [rcx]
0x00000000001b0b35 : push rax ; add dword ptr [rax], eax ; js 0x1b0bb0 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0b4d : push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b4e ; jmp qword ptr [rcx]
0x000000000002d711 : push rax ; add dword ptr [rcx + rdi - 0x7d], esi ; ret
0x000000000009574f : push rax ; add eax, ebp ; or dl, byte ptr [rcx - 0x76b70001] ; ret 0xc031
0x0000000000187fc3 : push rax ; add edx, esi ; inc dword ptr [rax] ; add dh, dl ; jmp qword ptr [rax]
0x000000000018800b : push rax ; add esi, edx ; call qword ptr [rax]
0x0000000000195393 : push rax ; add esp, edi ; call rax
0x000000000013bbc9 : push rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000013b827 : push rax ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000141021 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000001b2920 : push rax ; and esi, esi ; jmp qword ptr [rsi]
0x00000000000218e8 : push rax ; call rbx
0x00000000001bb550 : push rax ; clc ; call qword ptr [rbx]
0x0000000000195b51 : push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x0000000000195b11 : push rax ; cld ; jmp qword ptr [rax + 0x20fffc58]
0x000000000004b829 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001b1ad0 : push rax ; cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; call rsi
0x000000000019527b : push rax ; fdiv st(3), st(0) ; call rax
0x00000000001952c0 : push rax ; fdivp st(3) ; jmp qword ptr [rax]
0x0000000000195293 : push rax ; fdivr st(3) ; call rax
0x00000000001952f7 : push rax ; fsincos ; call rax
0x0000000000189145 : push rax ; hlt ; call rcx
0x00000000001890fb : push rax ; hlt ; dec dword ptr [rax + 0x4d] ; hlt ; call rax
0x0000000000189141 : push rax ; hlt ; inc edi ; push rax ; hlt ; call rcx
0x00000000001892e9 : push rax ; hlt ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x0000000000187e03 : push rax ; in al, dx ; int1 ; inc dword ptr [rax] ; in eax, dx ; int1 ; call qword ptr [rax]
0x00000000001954d0 : push rax ; in eax, -5 ; call qword ptr [rax - 0x1f000417]
0x00000000001b0ee0 : push rax ; jbe 0x1b0edb ; jmp qword ptr [rcx]
0x000000000019605c : push rax ; jge 0x19605e ; call rax
0x0000000000196064 : push rax ; jl 0x196066 ; call rax
0x00000000001a0a21 : push rax ; jmp 0x1a0a25
0x000000000019606c : push rax ; jnp 0x19606e ; call rax
0x00000000001b11d0 : push rax ; jnp 0x1b11cb ; jmp qword ptr [rcx]
0x000000000019607c : push rax ; jns 0x19607e ; call rax
0x0000000000196074 : push rax ; jp 0x196076 ; call rax
0x0000000000074fe2 : push rax ; lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000196124 : push rax ; lodsb al, byte ptr [rsi] ; cld ; jmp rax
0x000000000005f10a : push rax ; loop 0x5f115 ; dec dword ptr [rcx + rcx*4 - 1] ; call 0x7b3a9
0x0000000000023ace : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000135816 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001132e6 : push rax ; mov rsi, rdx ; call rax
0x0000000000196353 : push rax ; movsb byte ptr [rdi], byte ptr [rsi] ; cld ; push qword ptr [rax - 0x5c] ; cld ; jmp rax
0x000000000007ee42 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret 0x4801
0x0000000000081ef2 : push rax ; or dh, dh ; ret 0x7404
0x0000000000081e65 : push rax ; or dh, dh ; ret 0xf04
0x000000000001fe57 : push rax ; or dh, dh ; ret 0xf08
0x000000000014509c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013a7a1 : push rax ; out dx, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000187e77 : push rax ; out dx, al ; int1 ; inc dword ptr [rax] ; out dx, eax ; int1 ; call qword ptr [rax]
0x0000000000187bb3 : push rax ; outsb dx, byte ptr [rsi] ; int1 ; inc dword ptr [rax] ; outsd dx, dword ptr [rsi] ; int1 ; call qword ptr [rax]
0x0000000000194676 : push rax ; pop r9 ; clc ; ret 0x6e1f
0x0000000000195740 : push rax ; pop rbp ; cld ; jmp rax
0x00000000000acb0e : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019654c : push rax ; popfq ; cld ; jmp rax
0x0000000000195b4f : push rax ; push rax ; cld ; call qword ptr [rax + 0x10fffc58]
0x000000000019597b : push rax ; push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x0000000000195b8c : push rax ; push rcx ; cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x000000000018952b : push rax ; push rdx ; hlt ; dec dword ptr [rax + 0x53] ; hlt ; call rax
0x0000000000023ad0 : push rax ; push rsp ; ret
0x00000000000080d8 : push rax ; ret
0x00000000000c0201 : push rax ; ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000c3194 : push rax ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000195353 : push rax ; sar ebx, -1 ; ret
0x0000000000194e3f : push rax ; sbb bl, bh ; jmp rax
0x000000000007c886 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000072bda : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000001100a2 : push rax ; sbb dh, dh ; ret 0x7508
0x00000000001149e5 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000000f5b51 : push rax ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000195617 : push rax ; sub bh, ah ; call rax
0x000000000018b05b : push rax ; sub dl, bh ; jmp rax
0x000000000019567b : push rax ; sub edi, esp ; jmp rax
0x0000000000195573 : push rax ; sub esp, edi ; call rax
0x00000000001955f4 : push rax ; sub esp, edi ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x00000000001ae200 : push rax ; test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000195c2c : push rax ; test edi, esp ; jmp rax
0x00000000001adb60 : push rax ; xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x0000000000195bd0 : push rax ; xor al, 0xfc ; call qword ptr [rax + 0x10fffc35]
0x000000000007bfcd : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x00000000001a94c0 : push rax ; xor cl, dh ; jmp qword ptr [rcx]
0x0000000000195b8f : push rax ; xor edi, esp ; call qword ptr [rax]
0x00000000000e2410 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0x2575
0x00000000000e2435 : push rbp ; adc byte ptr [rax + 0x39], cl ; ret 0xe474
0x0000000000172b37 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000012ed3c : push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000000f5c22 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f5ba4 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000004950f : push rbp ; add byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000000f244d : push rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000102f51 : push rbp ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000000d45cc : push rbp ; add byte ptr [rcx], bh ; ret 0x840f
0x0000000000195b31 : push rbp ; cld ; call qword ptr [rax + 0x10fffc54]
0x0000000000195b2d : push rbp ; cld ; call qword ptr [rax]
0x00000000000edca8 : push rbp ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000000001892ed : push rbp ; hlt ; jmp qword ptr [rbx]
0x0000000000001cb9 : push rbp ; je 0x1ce7 ; ret
0x00000000000e2fd7 : push rbp ; jno 0xe2fdf ; dec dword ptr [rax - 0x77] ; ret
0x00000000001146c4 : push rbp ; nop ; mov rdx, r13 ; call rax
0x0000000000149b28 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000113e64 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000d6ebb : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xd6eed ; or byte ptr [rcx], ch ; ret
0x0000000000099568 : push rbp ; ret
0x000000000009bb76 : push rbp ; ret 0x8348
0x000000000009955a : push rbp ; ret 0x8349
0x00000000001059da : push rbp ; rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000001142d2 : push rbp ; sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x00000000000025de : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x257b ; loop 0x25c6 ; ret 0x23cb
0x0000000000111668 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x000000000004bccf : push rbp ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000d57eb : push rbp ; test al, 0x89 ; ret
0x0000000000023657 : push rbp ; test al, 0xe8 ; ret 0xffff
0x0000000000113cf1 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x0000000000115990 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000008eb1a : push rbp ; xor rax, rax ; ret
0x00000000000891d1 : push rbx ; adc byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000b6849 : push rbx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000105de1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000db207 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000085f7f : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001b0edd : push rbx ; add dword ptr [rax], eax ; push rax ; jbe 0x1b0ede ; jmp qword ptr [rcx]
0x0000000000110a3c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000126689 : push rbx ; and dword ptr [rdx], ebp ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x0000000000195b3d : push rbx ; cld ; call qword ptr [rax]
0x0000000000195981 : push rbx ; cld ; jmp rax
0x0000000000195b81 : push rbx ; cld ; push qword ptr [rax + 0x52] ; cld ; jmp rax
0x000000000019597d : push rbx ; cld ; push qword ptr [rax + 0x53] ; cld ; jmp rax
0x000000000019b2a1 : push rbx ; cli ; call rsp
0x00000000001b02f1 : push rbx ; cmc ; call qword ptr [rdx]
0x0000000000002053 : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000e03b6 : push rbx ; cmp cl, ch ; ret
0x00000000000dfeb7 : push rbx ; cmp cl, ch ; ret 0xfffe
0x0000000000189531 : push rbx ; hlt ; call rax
0x0000000000189269 : push rbx ; hlt ; call rcx
0x0000000000189265 : push rbx ; hlt ; inc edi ; push rbx ; hlt ; call rcx
0x0000000000189225 : push rbx ; hlt ; jmp qword ptr [rbx]
0x0000000000189221 : push rbx ; hlt ; lcall ptr [rcx] ; push rbx ; hlt ; jmp qword ptr [rbx]
0x000000000002a692 : push rbx ; je 0x2a6a9 ; cmp esi, 3 ; je 0x2a6a9 ; pop rbx ; ret
0x0000000000072ad9 : push rbx ; je 0x72b3d ; pop rbp ; pop r12 ; ret
0x0000000000072b7e : push rbx ; je 0x72be2 ; pop rbp ; pop r12 ; ret
0x00000000000cdbcd : push rbx ; je 0xcdbaa ; mov eax, 1 ; ret
0x00000000000cdbcc : push rbx ; je 0xcdbab ; mov eax, 1 ; ret
0x00000000001a0ad9 : push rbx ; jmp 0x1a0add
0x00000000000ac54c : push rbx ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000a6f22 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006ce2a : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000007b42b : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003cdc : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000045b69 : push rbx ; or edi, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001877dd : push rbx ; out dx, al ; jmp qword ptr [rax]
0x000000000002d8a8 : push rbx ; ret
0x00000000000891d5 : push rbx ; sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000076ba6 : push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000101f2e : push rbx ; sub al, 0 ; pop rbp ; pop r12 ; ret
0x0000000000144373 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144389 ; xor eax, eax ; ret
0x00000000001443a3 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1443b9 ; xor eax, eax ; ret
0x00000000001443d3 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x1443e9 ; xor eax, eax ; ret
0x0000000000144403 : push rbx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144419 ; xor eax, eax ; ret
0x000000000007a8a4 : push rbx ; sub cl, ch ; ret 0xfffe
0x0000000000078771 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000184c7c : push rbx ; xchg eax, edx ; jae 0x184c5b ; push rsi ; pop rdx ; je 0x184c50 ; ret 0xacfc
0x000000000004b514 : push rcx ; adc al, 0 ; call 0x777f5
0x00000000001322d5 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000b7956 : push rcx ; add dword ptr [rax + 0x39], ecx ; ret 0x2973
0x00000000001b0c3d : push rcx ; add dword ptr [rax], eax ; adc byte ptr [rdx - 0xb], dh ; jmp qword ptr [rcx]
0x00000000001b0c6d : push rcx ; add dword ptr [rax], eax ; jb 0x1b0c6e ; jmp qword ptr [rcx]
0x00000000001b0c0d : push rcx ; add dword ptr [rax], eax ; mov al, 0x71 ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c85 : push rcx ; add dword ptr [rax], eax ; pop rax ; jb 0x1b0c86 ; jmp qword ptr [rcx]
0x00000000001b0ccd : push rcx ; add dword ptr [rax], eax ; sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000d6d6e : push rcx ; add dword ptr [rbx - 0x7cb7fe3b], eax ; ret
0x000000000009ede9 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000009ee68 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000013aafe : push rcx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000183f05 : push rcx ; call qword ptr [rsi]
0x0000000000187f7d : push rcx ; call rax
0x00000000001959d1 : push rcx ; cld ; call rdx
0x0000000000195a0d : push rcx ; cld ; jmp qword ptr [rdx]
0x00000000001959cd : push rcx ; cld ; ljmp ptr [rcx + rdx*2] ; cld ; call rdx
0x0000000000195b8d : push rcx ; cld ; push rax ; xor edi, esp ; call qword ptr [rax]
0x0000000000194fb4 : push rcx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rcx
0x0000000000189088 : push rcx ; fcomi st(3) ; jmp rcx
0x0000000000189161 : push rcx ; hlt ; call qword ptr [rdi]
0x0000000000189165 : push rcx ; hlt ; jmp qword ptr [rcx]
0x00000000001891a9 : push rcx ; hlt ; jmp rdx
0x00000000001974a1 : push rcx ; in eax, dx ; jmp rsp
0x000000000009fd1d : push rcx ; jl 0x9fd6e ; adc dword ptr [rcx - 1], edi ; ret
0x000000000009fe84 : push rcx ; jl 0x9fed5 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0470 : push rcx ; jl 0xa04c1 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a05d7 : push rcx ; jl 0xa0628 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000000a0bbd : push rcx ; jl 0xa0c0e ; adc dword ptr [rcx - 1], edi ; ret
0x00000000000a0d24 : push rcx ; jl 0xa0d75 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000187f79 : push rcx ; jmp qword ptr [rax - 0x2f000e01]
0x0000000000187f6d : push rcx ; jmp qword ptr [rax]
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x0000000000194fa4 : push rcx ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rcx
0x0000000000194fac : push rcx ; movsd dword ptr [rdi], dword ptr [rsi] ; std ; call rcx
0x000000000018765d : push rcx ; out dx, al ; jmp qword ptr [rax]
0x00000000000d209c : push rcx ; ret
0x000000000003d31f : push rcx ; rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x0000000000082f23 : push rcx ; sysenter
0x00000000000a9de2 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a8372 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000a9f40 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9c18 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009eaa4 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000000a81ba : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000015b469 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000009ea14 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009e9a4 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002da7c : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000019b61d : push rdi ; add al, byte ptr [rax] ; adc al, 0xc3 ; cli ; jmp rsp
0x000000000019b625 : push rdi ; add al, byte ptr [rax] ; ret
0x00000000000a9bea : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a743c : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000a827c : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000fea0a : push rdi ; add ebx, ebp ; and eax, 0x83489066 ; ret 0x3c01
0x00000000000a9c48 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000108a5a : push rdi ; and byte ptr [rax - 0x73], cl ; adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000001ba169 : push rdi ; call qword ptr [rdx]
0x00000000001528b8 : push rdi ; clc ; ret
0x00000000000038eb : push rdi ; clc ; salc ; jb 0x3971 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000195b21 : push rdi ; cld ; call qword ptr [rax + 0x10fffc56]
0x0000000000195b1d : push rdi ; cld ; call qword ptr [rax]
0x0000000000152a30 : push rdi ; cld ; ret
0x000000000019b311 : push rdi ; cli ; jmp rsp
0x0000000000153557 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ad49 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000135895 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000886da : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000015acc9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015ab1a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000010484d : push rdi ; mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000010454d : push rdi ; mov bl, 0xf1 ; dec dword ptr [rcx - 0x75] ; jge 0x10455d ; call rbx
0x000000000007b164 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000015abaa : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000123010 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000a9c8c : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cca : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9c6a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000bb221 : push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x000000000004a00a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000004842a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000013eaa2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000048431 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000077f60 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000a7620 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a8470 : push rdi ; or eax, 0x1d478d48 ; ret
0x000000000016f7ae : push rdi ; ret
0x00000000000b0aa4 : push rdi ; ret 0xd
0x000000000009d4e5 : push rdi ; ret 0xf800
0x000000000016f84e : push rdi ; ret 0xff3
0x000000000013be73 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000010f536 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000013cf8b : push rdi ; sbb byte ptr [rcx + 0x63], cl ; ret
0x0000000000153757 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000152f7a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000153357 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001019ea : push rdi ; sub al, 0 ; add rsp, 8 ; ret
0x00000000001358dd : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x0000000000104bec : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007400f : push rdi ; sub rdx, rsi ; mov rdi, r15 ; call rax
0x00000000000a9f20 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008d52b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001b0d8d : push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e0b ; cmc ; jmp qword ptr [rcx]
0x00000000001b0d15 : push rdx ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x0000000000123ebe : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000001987a1 : push rdx ; call rsp
0x0000000000195a09 : push rdx ; cld ; call qword ptr [rdx + 0x22fffc51]
0x0000000000195a05 : push rdx ; cld ; jmp qword ptr [rdx]
0x0000000000195b85 : push rdx ; cld ; jmp rax
0x0000000000189535 : push rdx ; hlt ; call rax
0x000000000018952d : push rdx ; hlt ; dec dword ptr [rax + 0x53] ; hlt ; call rax
0x00000000000ef6d2 : push rdx ; idiv edi ; dec dword ptr [rbp + rcx*4 + 0x25] ; ret
0x000000000018a7c3 : push rdx ; jl 0x18a7c1 ; call qword ptr [rsi]
0x000000000018a7bf : push rdx ; jl 0x18a7c1 ; push rdx ; jl 0x18a7c5 ; call qword ptr [rsi]
0x0000000000188708 : push rdx ; mov dh, bl ; push qword ptr [rsp + rax*4] ; jmp qword ptr [rsi]
0x0000000000189563 : push rdx ; mov esp, esi ; jmp rsp
0x000000000018955f : push rdx ; mov esp, esi ; push rdx ; mov esp, esi ; jmp rsp
0x0000000000089676 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000013f3d2 : push rdx ; or byte ptr [rcx], bh ; ret 0x3875
0x00000000001957ec : push rdx ; pop rdi ; cld ; jmp rdx
0x00000000001a71b5 : push rdx ; ret
0x0000000000023aca : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x000000000019aad1 : push rdx ; stc ; call rsp
0x0000000000101f82 : push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x0000000000120652 : push rdx ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000001123e4 : push rdx ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000144433 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144449 ; xor eax, eax ; ret
0x0000000000144463 : push rdx ; sub byte ptr [rax], al ; test eax, eax ; jne 0x144479 ; xor eax, eax ; ret
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000001961f7 : push rdx ; test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x0000000000195cd8 : push rdx ; xchg esp, edi ; jmp rdx
0x000000000016e494 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa6e9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0xaa740 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000720a2 : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000075be0 : push rsi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x75b83
0x000000000015b701 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000f95c6 : push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x00000000001b119d : push rsi ; add dword ptr [rax], eax ; and byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b11b5 : push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 0xb], bh ; jmp qword ptr [rcx]
0x00000000001b1155 : push rsi ; add dword ptr [rax], eax ; fdivr dword ptr [rdx - 0xb] ; jmp qword ptr [rcx]
0x00000000001b110d : push rsi ; add dword ptr [rax], eax ; nop ; jp 0x1b110e ; jmp qword ptr [rcx]
0x00000000001b11cd : push rsi ; add dword ptr [rax], eax ; push rax ; jnp 0x1b11ce ; jmp qword ptr [rcx]
0x00000000001b1125 : push rsi ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x000000000015b771 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5df5 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000020c29 : push rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015b691 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000a5d93 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000016e4a9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001529e2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000195b29 : push rsi ; cld ; call qword ptr [rax + 0x10fffc55]
0x0000000000195b25 : push rsi ; cld ; call qword ptr [rax]
0x0000000000153151 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152d85 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152f65 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000153145 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000152ba5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000019b2d1 : push rsi ; cli ; jmp rsp
0x0000000000185820 : push rsi ; cli ; push 0x6e ; ja 0x1857af ; ret 0x48f
0x00000000001000b2 : push rsi ; cmc ; dec dword ptr [rax - 0x77] ; out -0x18, eax ; ret
0x0000000000171df6 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000194ffc : push rsi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; std ; jmp rsi
0x0000000000171de6 : push rsi ; hlt ; sub eax, edx ; ret
0x00000000001825f9 : push rsi ; in al, dx ; call qword ptr [rax]
0x0000000000181d47 : push rsi ; int 0xea
0x0000000000171db6 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000001132c2 : push rsi ; je 0x1132d8 ; mov eax, 7 ; ret
0x00000000000f5eeb : push rsi ; js 0xf5f3f ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000f6888 : push rsi ; js 0xf68dc ; mov dword ptr [rdi + 0x100], edx ; ret
0x0000000000056808 : push rsi ; or al, 0x83 ; ret
0x000000000005678b : push rsi ; or al, 0xf6 ; ret 0xf08
0x0000000000094b2d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000bb21e : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x28], dh ; ret
0x0000000000184c80 : push rsi ; pop rdx ; je 0x184c4c ; ret 0xacfc
0x0000000000195788 : push rsi ; pop rsp ; cld ; jmp rsi
0x0000000000034bcf : push rsi ; ret
0x00000000000e5147 : push rsi ; ret 0x7420
0x000000000009f9ca : push rsi ; ret 0x7518
0x0000000000061bbf : push rsi ; ret 0xf02
0x00000000000e4b21 : push rsi ; ret 0xf08
0x00000000000582e8 : push rsi ; ret 0xf10
0x000000000019616c : push rsi ; stosd dword ptr [rdi], eax ; cld ; jmp rsi
0x00000000000eef5f : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000171dc6 : push rsi ; sub eax, edx ; ret
0x0000000000195c74 : push rsi ; test bh, ah ; jmp rsi
0x00000000000fb567 : push rsi ; xor ax, ax ; ret
0x000000000016e4be : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000197170 : push rsp ; adc al, 0xeb ; call rsp
0x00000000001b0fa5 : push rsp ; add dword ptr [rax], eax ; js 0x1b0fa6 ; jmp qword ptr [rbx]
0x0000000000198d7d : push rsp ; add dword ptr [rax], eax ; mov ah, 0x20 ; hlt ; call rsp
0x00000000001bad4c : push rsp ; add dword ptr [rax], eax ; rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001b074c : push rsp ; add qword ptr [rax], r8 ; mov al, 0x6c ; cmc ; jmp qword ptr [rcx]
0x000000000010eea1 : push rsp ; and al, 0x10 ; mov edi, 0x2000004 ; call rax
0x000000000010ed9d : push rsp ; and al, 0x10 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000003dfe3 : push rsp ; and al, 0x18 ; call 0x3c0a9
0x000000000012c7b8 : push rsp ; and al, 0x18 ; lea r9, qword ptr [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000081630 : push rsp ; and al, 0x20 ; call qword ptr [rax]
0x00000000000819ac : push rsp ; and al, 0x20 ; call rax
0x00000000000ba6ee : push rsp ; and al, 0x20 ; mov rsi, r14 ; mov rdi, r12 ; call rbx
0x00000000000fdd14 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000848ea : push rsp ; and al, 0x68 ; call rax
0x0000000000085c7a : push rsp ; and al, 0x68 ; mov rsi, r13 ; mov rdi, rbx ; call rax
0x000000000004a1d0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004a18a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000812c2 : push rsp ; and eax, 0x950f4100 ; ret
0x00000000001af411 : push rsp ; call rsi
0x00000000001bb8b1 : push rsp ; clc ; call qword ptr [rax]
0x00000000001bb8e9 : push rsp ; clc ; jmp qword ptr [rcx]
0x000000000019a648 : push rsp ; clc ; jmp rsp
0x0000000000195b39 : push rsp ; cld ; call qword ptr [rax + 0x10fffc53]
0x0000000000195b35 : push rsp ; cld ; call qword ptr [rax]
0x00000000001bb54c : push rsp ; cli ; add dword ptr [rax], eax ; push rax ; clc ; call qword ptr [rbx]
0x00000000001a6ba9 : push rsp ; cli ; call qword ptr [rax]
0x000000000019a5a4 : push rsp ; fiadd word ptr [rcx] ; add byte ptr [rcx + rcx*2 - 8], al ; jmp rsp
0x0000000000189285 : push rsp ; hlt ; call qword ptr [rdi]
0x0000000000189289 : push rsp ; hlt ; jmp qword ptr [rcx]
0x00000000001a244c : push rsp ; imul eax, dword ptr [rax], 0xecf56000 ; call qword ptr [rsi]
0x0000000000198bd8 : push rsp ; insd dword ptr [rdi], dx ; call rsp
0x00000000000cd9d6 : push rsp ; jne 0xcd963 ; mov eax, 0x7d00 ; ret
0x00000000001a2c4c : push rsp ; jno 0x1a2c56 ; add byte ptr [rax + 0x1a], dh ; in eax, dx ; call rdx
0x000000000009f12b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x00000000001095e4 : push rsp ; lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000196298 : push rsp ; lodsd eax, dword ptr [rsi] ; cld ; jmp rsp
0x0000000000135027 : push rsp ; mov eax, 1 ; ret
0x00000000001a754c : push rsp ; mov edx, 0x73600000 ; out dx, eax ; call rax
0x0000000000199218 : push rsp ; or dh, dh ; jmp rsp
0x00000000001b294c : push rsp ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; and byte ptr [rcx], 0xf6 ; jmp qword ptr [rsi]
0x00000000001958b4 : push rsp ; pop rsi ; cld ; jmp rsp
0x00000000001b0b4c : push rsp ; push rax ; add dword ptr [rax], eax ; nop ; jo 0x1b0b4f ; jmp qword ptr [rcx]
0x0000000000197628 : push rsp ; pushfq ; in eax, dx ; call rsp
0x0000000000023ad1 : push rsp ; ret
0x0000000000034df8 : push rsp ; ret 0x2e0f
0x000000000010a3f4 : push rsp ; ret 0x8940
0x0000000000034aba : push rsp ; ret 0xf66
0x000000000019a0cb : push rsp ; ret 1
0x00000000001a8c4c : push rsp ; rol dword ptr [rax], 1 ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x00000000000e75e3 : push rsp ; ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x000000000019849c : push rsp ; sbb byte ptr [rcx], al ; add ah, ah ; int1 ; call rsp
0x0000000000195da0 : push rsp ; xchg ah, bh ; jmp rsp
0x00000000001acd94 : pushfq ; adc al, byte ptr [rcx] ; add al, bh ; fpatan ; jmp qword ptr [rcx]
0x0000000000146fc0 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x00000000001abf94 : pushfq ; add al, 1 ; add byte ptr [rax], cl ; call rcx
0x000000000019b29c : pushfq ; add al, byte ptr [rax] ; xor al, 0x53 ; cli ; call rsp
0x00000000001b3b94 : pushfq ; add byte ptr [rcx], 0 ; cmp byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x000000000008638d : pushfq ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0xe96e
0x00000000001af994 : pushfq ; add dword ptr ds:[rax], eax ; sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001bc464 : pushfq ; add ebp, esi ; add al, byte ptr [rax] ; ret 0x503
0x0000000000023ff1 : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000db20f : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8d0f
0x000000000019ae64 : pushfq ; and al, 2 ; add ah, dh ; sar cl, 1 ; call rsp
0x0000000000196511 : pushfq ; cld ; call qword ptr [rax + 0x10fffca4]
0x00000000001b9594 : pushfq ; fiadd dword ptr [rcx] ; add al, bl ; fdivrp st(7) ; jmp rdi
0x0000000000197629 : pushfq ; in eax, dx ; call rsp
0x0000000000188760 : pushfq ; jle 0x188759 ; jmp qword ptr [rdi]
0x0000000000188760 : pushfq ; jle 0x18875d ; jmp qword ptr [rdi]
0x000000000001fb06 : pushfq ; jmp 0x1face
0x000000000007841c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000019776c : pushfq ; mov edi, 0xbb840000 ; in eax, dx ; call rsp
0x00000000001b5f94 : pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; cwde ; int1 ; sti ; call rcx
0x0000000000147cc0 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145c74 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000001874b4 : pushfq ; out dx, al ; call rsp
0x00000000001972b4 : pushfq ; popfq ; add byte ptr [rax], al ; jmp 0x1972c2
0x00000000001959cc : pushfq ; push rcx ; cld ; ljmp ptr [rcx + rdx*2] ; cld ; call rdx
0x000000000019a104 : pushfq ; ret
0x00000000000bd78f : pushfq ; ret 0xb60f
0x00000000000ac17b : pushfq ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000019749c : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x000000000019879c : pushfq ; sub al, 1 ; add byte ptr [rdx + rdx*2], al ; call rsp
0x00000000000f907a : rcl ah, cl ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001bad50 : rcl byte ptr [rax + rdi*8], 0xff ; ret
0x00000000001a0a20 : rcl byte ptr [rax - 0x15], 1 ; call rdx
0x00000000001b02f0 : rcl byte ptr [rbx - 0xb], 1 ; call qword ptr [rdx]
0x00000000001aac30 : rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x0000000000189534 : rcl byte ptr [rdx - 0xc], 1 ; call rax
0x00000000000f5b50 : rcl dword ptr [rax - 0x3f], -0x17 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x0000000000184c7f : rcl dword ptr [rsi + 0x5a], cl ; je 0x184c4d ; ret 0xacfc
0x0000000000184c7b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x184c51 ; ret 0xacfc
0x0000000000189220 : rcpps xmm6, xmm4 ; lcall ptr [rcx] ; push rbx ; hlt ; jmp qword ptr [rbx]
0x00000000001048ac : rcr bh, 0xff ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000034f9f : rcr bl, 0x3f ; fsubp st(1) ; ret
0x000000000003c1b0 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000fc49e : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; ret
0x000000000001fb76 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000c9be0 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000047a13 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000048437 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000019573c : rcr byte ptr [rbp - 4], 0xff ; push rax ; pop rbp ; cld ; jmp rax
0x0000000000194ed4 : rcr byte ptr [rbp - 5], 1 ; jmp qword ptr [rax]
0x00000000000cd408 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000075051 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000022b50 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000bb569 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x000000000003a26e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c9c2c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000054b8b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x0000000000084ba8 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000045c48 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000006fb6b : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000010c998 : rcr byte ptr [rbx - 0x77], cl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x000000000018509d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001afa10 : rcr byte ptr [rdi], 0xf5 ; jmp qword ptr [rdx]
0x00000000001956b0 : rcr byte ptr [rdx], 1 ; cld ; jmp qword ptr [rax]
0x00000000001956bc : rcr byte ptr [rsi], 0xfc ; call qword ptr [rax]
0x0000000000048469 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x000000000014dc36 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000142fa4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000123de8 : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9a : rep stosq qword ptr [rdi], rax ; ret
0x0000000000000937 : ret
0x00000000000202fc : ret 0
0x000000000000a641 : ret 0x10
0x00000000000007bf : ret 0x102
0x0000000000087067 : ret 0x106d
0x000000000006cddf : ret 0x107
0x00000000000a603d : ret 0x11
0x00000000000821a2 : ret 0x110
0x00000000000e6f47 : ret 0x110f
0x000000000004840c : ret 0x114d
0x0000000000076d1c : ret 0x116d
0x00000000000e0dcc : ret 0x1175
0x00000000000d8fb6 : ret 0x1176
0x00000000000242a8 : ret 0x1189
0x00000000001079d9 : ret 0x11e8
0x00000000000b3cb4 : ret 0x11eb
0x0000000000006639 : ret 0x12
0x00000000000ff98c : ret 0x1274
0x00000000000091b9 : ret 0x13
0x00000000000991ca : ret 0x1374
0x000000000011788a : ret 0x1376
0x0000000000051f17 : ret 0x13e8
0x000000000005a6dc : ret 0x144
0x0000000000123489 : ret 0x1472
0x000000000009f169 : ret 0x147c
0x00000000000493f2 : ret 0x148
0x00000000000d6f2b : ret 0x148b
0x000000000007bfe2 : ret 0x149
0x000000000003763d : ret 0x14c
0x00000000000a00dc : ret 0x14d
0x00000000000d30ec : ret 0x14eb
0x0000000000034c00 : ret 0x1575
0x00000000000ed571 : ret 0x1589
0x000000000000e460 : ret 0x16
0x000000000002b591 : ret 0x1633
0x0000000000108647 : ret 0x1674
0x00000000001176d7 : ret 0x1676
0x0000000000018809 : ret 0x17
0x00000000000fcce6 : ret 0x1777
0x00000000000a0019 : ret 0x180f
0x0000000000136045 : ret 0x1872
0x000000000002c4a6 : ret 0x1874
0x000000000008eb85 : ret 0x1876
0x000000000001e718 : ret 0x18c7
0x00000000000189b8 : ret 0x18c9
0x0000000000019270 : ret 0x18ca
0x000000000001a368 : ret 0x18d2
0x000000000007d9c5 : ret 0x18eb
0x00000000001a35f1 : ret 0x18f
0x00000000000bd314 : ret 0x190
0x00000000000587ca : ret 0x197
0x000000000008e825 : ret 0x1974
0x000000000005ec5e : ret 0x1a
0x000000000009edca : ret 0x1a74
0x000000000003bf12 : ret 0x1a75
0x00000000001855fa : ret 0x1ad4
0x00000000000d516a : ret 0x1aeb
0x0000000000183d8d : ret 0x1b49
0x0000000000108a62 : ret 0x1b72
0x000000000009512a : ret 0x1b8
0x0000000000001bf5 : ret 0x1bb7
0x00000000000be4db : ret 0x1be
0x000000000008408f : ret 0x1bf
0x000000000000349f : ret 0x1bf9
0x00000000000fcde1 : ret 0x1c77
0x000000000017f1f0 : ret 0x1d4
0x000000000017f988 : ret 0x1d5
0x000000000008e726 : ret 0x1d74
0x00000000000021d9 : ret 0x1dd4
0x00000000000c0604 : ret 0x1e74
0x0000000000024c2b : ret 0x1e76
0x00000000000268e2 : ret 0x1f0f
0x00000000000ac773 : ret 0x1f74
0x0000000000084d2e : ret 0x1f76
0x00000000000c23b4 : ret 0x1fbd
0x000000000002d952 : ret 0x200
0x00000000000b16b5 : ret 0x2041
0x00000000000899ad : ret 0x2074
0x00000000000d5d59 : ret 0x20be
0x000000000005cb3b : ret 0x21
0x0000000000034778 : ret 0x2148
0x00000000000f5ac9 : ret 0x21e8
0x000000000008993b : ret 0x2275
0x00000000000aa847 : ret 0x2276
0x0000000000089a68 : ret 0x2288
0x0000000000003ff0 : ret 0x23
0x000000000016f9b2 : ret 0x2373
0x00000000000368a2 : ret 0x237f
0x00000000000025e7 : ret 0x23cb
0x000000000017e1f8 : ret 0x24
0x00000000000027d8 : ret 0x244f
0x00000000000cfcac : ret 0x2476
0x000000000007aa6e : ret 0x2501
0x000000000009ec48 : ret 0x2574
0x000000000008425d : ret 0x2575
0x0000000000023dc8 : ret 0x2576
0x0000000000005ec8 : ret 0x26
0x000000000008ba06 : ret 0x2774
0x00000000000fcfc3 : ret 0x27e8
0x000000000000054f : ret 0x2800
0x00000000000a17a5 : ret 0x280f
0x0000000000127810 : ret 0x2875
0x0000000000024273 : ret 0x2876
0x00000000001412d2 : ret 0x2886
0x000000000013ddb2 : ret 0x28bb
0x00000000000c020a : ret 0x28f5
0x0000000000127b84 : ret 0x29
0x00000000001381da : ret 0x290d
0x000000000012ee7a : ret 0x2936
0x00000000000b2fb1 : ret 0x2941
0x00000000000556a3 : ret 0x2944
0x0000000000047468 : ret 0x2948
0x00000000000b07ba : ret 0x2949
0x000000000009b2cf : ret 0x294c
0x0000000000078cdf : ret 0x294d
0x0000000000048b64 : ret 0x2973
0x00000000000aaf44 : ret 0x2975
0x00000000000779aa : ret 0x2976
0x00000000000ea934 : ret 0x2977
0x000000000012ab52 : ret 0x2992
0x000000000012bae2 : ret 0x29d2
0x0000000000060591 : ret 0x29e9
0x000000000011c1e7 : ret 0x2a
0x0000000000001b19 : ret 0x2a63
0x0000000000084c3b : ret 0x2a75
0x000000000012083a : ret 0x2a7e
0x000000000011fc32 : ret 0x2a8a
0x000000000011a9b2 : ret 0x2a94
0x0000000000107b97 : ret 0x2b
0x0000000000046198 : ret 0x2b48
0x000000000002322e : ret 0x2b49
0x00000000001212c2 : ret 0x2b74
0x000000000006ad97 : ret 0x2b76
0x00000000000aaba2 : ret 0x2b77
0x000000000012f84b : ret 0x2b8
0x0000000000109592 : ret 0x2bac
0x000000000010938a : ret 0x2bae
0x000000000010b7aa : ret 0x2bbd
0x00000000000f7b94 : ret 0x2c
0x0000000000127809 : ret 0x2c3c
0x0000000000100ffa : ret 0x2c61
0x00000000000fd5b2 : ret 0x2c68
0x00000000000ffdfe : ret 0x2c73
0x00000000000fd352 : ret 0x2cc3
0x0000000000034df9 : ret 0x2e0f
0x000000000012f985 : ret 0x2e66
0x00000000000caaa9 : ret 0x2f
0x00000000000ff92c : ret 0x2f3c
0x00000000000886de : ret 0x2f74
0x00000000000cb781 : ret 0x2fb6
0x00000000000cb352 : ret 0x2fba
0x00000000000e2d9a : ret 0x2fe9
0x0000000000010e90 : ret 0x30
0x000000000003aca8 : ret 0x3039
0x0000000000001b88 : ret 0x306a
0x00000000000ba33a : ret 0x307e
0x00000000000bde9a : ret 0x308b
0x00000000000e1fdb : ret 0x30f
0x000000000000d7b8 : ret 0x31
0x000000000002310d : ret 0x3101
0x0000000000126b92 : ret 0x3108
0x0000000000047fd9 : ret 0x3145
0x000000000012f918 : ret 0x314c
0x000000000017e6e8 : ret 0x33
0x00000000000f6d02 : ret 0x3375
0x00000000000f000d : ret 0x33eb
0x0000000000080412 : ret 0x3463
0x000000000009f149 : ret 0x347c
0x00000000000310a5 : ret 0x348
0x000000000002944d : ret 0x349
0x00000000000662ba : ret 0x34c
0x000000000006d48b : ret 0x35
0x000000000006d71a : ret 0x3559
0x00000000000886e8 : ret 0x3574
0x00000000000f6ca0 : ret 0x3575
0x000000000003bf68 : ret 0x357e
0x0000000000068db2 : ret 0x35b0
0x00000000000d9855 : ret 0x35e8
0x0000000000057c07 : ret 0x36
0x00000000000e7e51 : ret 0x3673
0x0000000000047bc4 : ret 0x37
0x0000000000054e2a : ret 0x3718
0x00000000000cc2b3 : ret 0x37e8
0x0000000000039979 : ret 0x38
0x0000000000184eda : ret 0x3827
0x00000000000bbcfe : ret 0x3840
0x000000000007371f : ret 0x3841
0x0000000000102e6f : ret 0x3845
0x000000000013f3d5 : ret 0x3875
0x000000000008eb65 : ret 0x3876
0x000000000003a73a : ret 0x387a
0x000000000007b52b : ret 0x389
0x0000000000183566 : ret 0x38ae
0x000000000006e516 : ret 0x38b
0x000000000005ed1d : ret 0x38e9
0x00000000000663be : ret 0x3901
0x00000000000d9b68 : ret 0x3902
0x000000000012260b : ret 0x3904
0x000000000009eb66 : ret 0x3941
0x00000000000e4757 : ret 0x3944
0x00000000000dddc7 : ret 0x3945
0x0000000000037381 : ret 0x3948
0x000000000002772a : ret 0x3949
0x000000000002a296 : ret 0x394c
0x000000000003413d : ret 0x394d
0x00000000000300fa : ret 0x3995
0x00000000000537c2 : ret 0x39e9
0x00000000001347fa : ret 0x3a
0x00000000000aa152 : ret 0x3a01
0x0000000000023016 : ret 0x3a28
0x000000000016f99b : ret 0x3a73
0x00000000000e3f90 : ret 0x3ae9
0x00000000000d31e1 : ret 0x3b01
0x00000000000dbd37 : ret 0x3b42
0x00000000000dbd87 : ret 0x3b43
0x000000000013d6f3 : ret 0x3b48
0x0000000000134d22 : ret 0x3b74
0x00000000000bf815 : ret 0x3b8
0x00000000000bc6aa : ret 0x3bba
0x00000000001105c4 : ret 0x3bf
0x00000000000d028e : ret 0x3c01
0x0000000000089921 : ret 0x3c75
0x00000000000f146f : ret 0x3c76
0x000000000003953e : ret 0x3ce8
0x00000000000d8216 : ret 0x3d01
0x0000000000034840 : ret 0x3d75
0x0000000000042180 : ret 0x3d7e
0x000000000002293e : ret 0x3d83
0x0000000000046ef7 : ret 0x3dbe
0x00000000000bf2c2 : ret 0x3e9
0x0000000000070efb : ret 0x3f7
0x00000000000f5329 : ret 0x3f76
0x00000000000d924a : ret 0x4001
0x00000000000ec0e5 : ret 0x4002
0x000000000007f432 : ret 0x4007
0x00000000000009f5 : ret 0x4021
0x000000000005399b : ret 0x4050
0x00000000000acbb9 : ret 0x408d
0x0000000000022d30 : ret 0x4101
0x00000000000b8595 : ret 0x4102
0x00000000000de302 : ret 0x4104
0x000000000004d6a9 : ret 0x4108
0x000000000004f20c : ret 0x4110
0x0000000000082bdc : ret 0x4117
0x00000000000ee1a8 : ret 0x4118
0x000000000009ee13 : ret 0x4153
0x000000000012c773 : ret 0x415f
0x00000000000f7d75 : ret 0x4164
0x0000000000023b8e : ret 0x41c3
0x000000000009b317 : ret 0x4201
0x000000000012de55 : ret 0x4203
0x00000000000bc5f4 : ret 0x4240
0x000000000009f75a : ret 0x4266
0x00000000000dab66 : ret 0x428b
0x00000000000bd41c : ret 0x428d
0x000000000009a97a : ret 0x4301
0x000000000002a853 : ret 0x4389
0x0000000000074d83 : ret 0x4401
0x00000000000e17c5 : ret 0x4404
0x00000000000c2854 : ret 0x4407
0x00000000000ccdf5 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x000000000004dc71 : ret 0x440f
0x0000000000072857 : ret 0x4410
0x0000000000000456 : ret 0x4412
0x00000000000d8da4 : ret 0x4422
0x000000000010f556 : ret 0x4428
0x0000000000113388 : ret 0x4430
0x00000000000e17f6 : ret 0x4489
0x0000000000034ea0 : ret 0x448b
0x000000000003ce72 : ret 0x44c6
0x00000000000e5d72 : ret 0x44c7
0x000000000005d3da : ret 0x45
0x00000000000e3cab : ret 0x4501
0x000000000006c712 : ret 0x4502
0x00000000000662db : ret 0x4504
0x0000000000117b57 : ret 0x4510
0x00000000000b856e : ret 0x4574
0x0000000000036b2e : ret 0x4577
0x00000000000e02ff : ret 0x45c6
0x000000000011fcdb : ret 0x45e9
0x000000000006e678 : ret 0x45f6
0x00000000000aaf27 : ret 0x4675
0x0000000000029d97 : ret 0x4676
0x00000000001131c6 : ret 0x46e9
0x00000000000b8507 : ret 0x4703
0x000000000009ab5f : ret 0x470e
0x000000000009ebc4 : ret 0x474
0x0000000000184064 : ret 0x474c
0x00000000000256f6 : ret 0x4801
0x0000000000094911 : ret 0x4802
0x000000000006e681 : ret 0x4803
0x000000000002656d : ret 0x4804
0x00000000000949bd : ret 0x4805
0x00000000000949a5 : ret 0x4806
0x0000000000108a4b : ret 0x4807
0x0000000000126f6f : ret 0x4808
0x000000000002c4b4 : ret 0x4809
0x000000000010b192 : ret 0x480a
0x000000000010ad92 : ret 0x480b
0x00000000000bb6a2 : ret 0x480e
0x0000000000051184 : ret 0x480f
0x0000000000048d94 : ret 0x4810
0x000000000011c12c : ret 0x4811
0x0000000000137621 : ret 0x4812
0x0000000000108f3d : ret 0x4814
0x000000000004b632 : ret 0x481e
0x000000000004b652 : ret 0x4820
0x000000000005432c : ret 0x482d
0x0000000000125bfe : ret 0x482e
0x000000000002146f : ret 0x4830
0x0000000000066165 : ret 0x4840
0x00000000000cc46c : ret 0x4864
0x000000000011568d : ret 0x4874
0x0000000000117785 : ret 0x4875
0x0000000000110eb8 : ret 0x48b
0x0000000000133b94 : ret 0x48bf
0x000000000008b758 : ret 0x48c3
0x000000000003aba0 : ret 0x48d
0x0000000000185826 : ret 0x48f
0x0000000000022cfa : ret 0x4901
0x000000000003437c : ret 0x4903
0x0000000000029019 : ret 0x4904
0x000000000002648c : ret 0x4906
0x000000000004f8a9 : ret 0x4908
0x00000000000bf359 : ret 0x4909
0x000000000012faa0 : ret 0x4910
0x000000000008739e : ret 0x4920
0x00000000000862e8 : ret 0x4930
0x00000000000c7859 : ret 0x4948
0x00000000000038f3 : ret 0x49ec
0x00000000000eacb0 : ret 0x4a08
0x00000000000d903c : ret 0x4a74
0x00000000000b8a30 : ret 0x4ae9
0x0000000000032d55 : ret 0x4c01
0x0000000000094b81 : ret 0x4c02
0x00000000000d7c12 : ret 0x4c04
0x00000000000539a6 : ret 0x4c05
0x0000000000061c84 : ret 0x4c08
0x00000000000d885b : ret 0x4c20
0x000000000004acf6 : ret 0x4c40
0x00000000000d9908 : ret 0x4c6
0x00000000000c07c5 : ret 0x4c80
0x0000000000053400 : ret 0x4c8b
0x00000000000415b5 : ret 0x4d01
0x0000000000023ca1 : ret 0x4d02
0x00000000000a6062 : ret 0x4d10
0x00000000001100f2 : ret 0x4d30
0x0000000000022800 : ret 0x4d74
0x0000000000185287 : ret 0x4e27
0x00000000000755d0 : ret 0x4e8b
0x00000000000beb69 : ret 0x4eb
0x0000000000021938 : ret 0x4ee9
0x000000000000b328 : ret 0x4f
0x0000000000029d8e : ret 0x4f72
0x00000000000369d4 : ret 0x4f77
0x00000000001bc469 : ret 0x503
0x00000000000d7a45 : ret 0x5089
0x000000000016f984 : ret 0x5173
0x00000000000ebf3a : ret 0x51e
0x00000000000fd599 : ret 0x51e8
0x000000000002c2b3 : ret 0x527e
0x000000000000318e : ret 0x52c0
0x0000000000008658 : ret 0x53
0x000000000006d008 : ret 0x5389
0x000000000012e8ab : ret 0x53ff
0x00000000000edc6c : ret 0x5408
0x00000000000bbdcb : ret 0x5438
0x000000000009f129 : ret 0x547c
0x000000000004a1f6 : ret 0x5488
0x000000000002a11a : ret 0x5489
0x00000000001834ec : ret 0x5508
0x000000000003295f : ret 0x5525
0x000000000000245e : ret 0x5576
0x00000000000d6efa : ret 0x5589
0x000000000000b538 : ret 0x56
0x0000000000089907 : ret 0x5675
0x000000000011d7c2 : ret 0x56e9
0x00000000000bddaa : ret 0x572
0x0000000000087802 : ret 0x575
0x0000000000117592 : ret 0x577
0x0000000000134eba : ret 0x57c
0x0000000000101793 : ret 0x57e8
0x00000000000cf893 : ret 0x57e9
0x00000000001857b8 : ret 0x5803
0x00000000000396fb : ret 0x589
0x00000000001831c0 : ret 0x591c
0x00000000000b1e3a : ret 0x594
0x00000000000d9041 : ret 0x5974
0x000000000011fc23 : ret 0x5978
0x0000000000003269 : ret 0x5a51
0x0000000000123ef3 : ret 0x5a74
0x0000000000183f27 : ret 0x5ae4
0x00000000000e7a99 : ret 0x5ba
0x0000000000002f9f : ret 0x5bdb
0x0000000000111660 : ret 0x5bf
0x0000000000026d01 : ret 0x5c77
0x0000000000003055 : ret 0x5cbe
0x00000000000e9cbd : ret 0x5ee9
0x00000000000004b9 : ret 0x6080
0x0000000000002725 : ret 0x617e
0x0000000000185c52 : ret 0x62c1
0x0000000000054d53 : ret 0x6348
0x0000000000077662 : ret 0x6349
0x00000000000d8f70 : ret 0x634d
0x00000000000aaf0a : ret 0x6375
0x000000000008d8df : ret 0x63be
0x000000000012689a : ret 0x646
0x000000000009f119 : ret 0x647c
0x0000000000069a45 : ret 0x65e8
0x0000000000130e79 : ret 0x6600
0x00000000000e91fa : ret 0x6601
0x000000000003d251 : ret 0x6610
0x000000000008eaf2 : ret 0x6620
0x0000000000002827 : ret 0x6642
0x00000000000230ea : ret 0x669
0x000000000008b7a5 : ret 0x66c3
0x00000000000f95d6 : ret 0x674
0x00000000001831df : ret 0x67b2
0x0000000000108083 : ret 0x67e8
0x00000000000bc5f1 : ret 0x6948
0x00000000000f41e9 : ret 0x69e9
0x000000000010689a : ret 0x69f
0x0000000000118cad : ret 0x6ae9
0x00000000000c28af : ret 0x6b45
0x00000000000ce18f : ret 0x6b8
0x0000000000003ce2 : ret 0x6bba
0x000000000010fd52 : ret 0x6bf
0x00000000000ac6d1 : ret 0x6c74
0x00000000001942f3 : ret 0x6e1f
0x0000000000185de1 : ret 0x6f9
0x000000000002face : ret 0x6fe9
0x000000000011958e : ret 0x708d
0x0000000000108b79 : ret 0x71e8
0x0000000000114888 : ret 0x71e9
0x000000000014dcce : ret 0x7280
0x000000000007ba51 : ret 0x7401
0x0000000000084e33 : ret 0x7402
0x0000000000081ef5 : ret 0x7404
0x0000000000072b69 : ret 0x7408
0x000000000006dba1 : ret 0x7420
0x0000000000051562 : ret 0x7450
0x00000000000c5fe5 : ret 0x748d
0x00000000000aa9ff : ret 0x74e9
0x00000000000a1297 : ret 0x7501
0x00000000000a129c : ret 0x7502
0x0000000000061ba6 : ret 0x7504
0x0000000000072b11 : ret 0x7508
0x000000000017090b : ret 0x7510
0x000000000008f2f4 : ret 0x7518
0x0000000000170918 : ret 0x7520
0x00000000000d8e38 : ret 0x7540
0x00000000000d6617 : ret 0x7580
0x00000000000e1cb5 : ret 0x75e8
0x000000000016e872 : ret 0x7677
0x0000000000023222 : ret 0x774
0x000000000004878a : ret 0x777
0x0000000000107f73 : ret 0x77e8
0x000000000011d7a1 : ret 0x77e9
0x0000000000002eec : ret 0x793b
0x00000000000cda89 : ret 0x7974
0x000000000011f6cc : ret 0x7a8d
0x0000000000023dfa : ret 0x7b8
0x0000000000034d85 : ret 0x7c7
0x000000000008ea82 : ret 0x7e20
0x00000000000f78e3 : ret 0x7e8
0x0000000000089eec : ret 0x7f10
0x0000000000059904 : ret 0x7f3c
0x0000000000158ffe : ret 0x80
0x000000000008b0c9 : ret 0x8000
0x00000000000343bc : ret 0x8001
0x00000000000bf552 : ret 0x8010
0x00000000000cfc59 : ret 0x8040
0x00000000000e0f7f : ret 0x8041
0x00000000000a649d : ret 0x8072
0x000000000011e176 : ret 0x8080
0x00000000000038b0 : ret 0x80fc
0x00000000000d7ead : ret 0x8141
0x0000000000045d16 : ret 0x8148
0x000000000003508f : ret 0x8166
0x00000000000f5a69 : ret 0x81e8
0x00000000000e1689 : ret 0x820f
0x000000000012bbc6 : ret 0x828d
0x00000000000817df : ret 0x82e9
0x0000000000076cd1 : ret 0x82eb
0x0000000000031275 : ret 0x8301
0x0000000000130fae : ret 0x8302
0x0000000000121bc9 : ret 0x8303
0x00000000000d8d1a : ret 0x8304
0x0000000000099ab5 : ret 0x8305
0x0000000000099aad : ret 0x8306
0x000000000005e0cb : ret 0x8308
0x0000000000055c34 : ret 0x830f
0x000000000012fcd2 : ret 0x8320
0x00000000000df12f : ret 0x833b
0x0000000000046daa : ret 0x8341
0x000000000003a61d : ret 0x8348
0x000000000003d6e4 : ret 0x8349
0x000000000006f353 : ret 0x8389
0x0000000000074cf0 : ret 0x840
0x00000000000ceb8e : ret 0x8401
0x000000000010de28 : ret 0x8408
0x000000000002006c : ret 0x840f
0x00000000000e918d : ret 0x844
0x00000000000977a8 : ret 0x8440
0x00000000000aa966 : ret 0x8444
0x00000000000973d7 : ret 0x8445
0x00000000000e06f0 : ret 0x8488
0x0000000000054d45 : ret 0x8504
0x000000000006ce96 : ret 0x8508
0x000000000002191c : ret 0x850f
0x00000000000456b1 : ret 0x8539
0x00000000000f1b6d : ret 0x8545
0x0000000000020130 : ret 0x8548
0x000000000002c2c5 : ret 0x854d
0x00000000000eb2d8 : ret 0x8589
0x00000000000522bc : ret 0x858b
0x000000000004ea24 : ret 0x85c7
0x00000000000240f0 : ret 0x860f
0x00000000000355b6 : ret 0x870f
0x0000000000182afe : ret 0x871e
0x000000000003d6d7 : ret 0x875
0x000000000008eb95 : ret 0x876
0x000000000003ce6d : ret 0x87e
0x00000000000fcf63 : ret 0x87e8
0x000000000002bc4a : ret 0x87e9
0x0000000000106e0a : ret 0x880
0x000000000008938a : ret 0x8801
0x000000000009f9e2 : ret 0x8802
0x0000000000024e31 : ret 0x8804
0x0000000000057621 : ret 0x880f
0x0000000000025949 : ret 0x8840
0x00000000000025b4 : ret 0x88ad
0x0000000000024202 : ret 0x8901
0x000000000005c89b : ret 0x8908
0x000000000010a3f5 : ret 0x8940
0x000000000004b161 : ret 0x8941
0x00000000000b9785 : ret 0x8942
0x0000000000076b9c : ret 0x8944
0x0000000000050ebe : ret 0x8945
0x00000000000b9ba6 : ret 0x8946
0x0000000000026dc1 : ret 0x8948
0x0000000000024ffe : ret 0x8949
0x0000000000030cca : ret 0x894c
0x0000000000022d0f : ret 0x894d
0x00000000000490ab : ret 0x894e
0x000000000003b360 : ret 0x8966
0x000000000008e6fa : ret 0x8a04
0x0000000000002553 : ret 0x8a4c
0x000000000006562f : ret 0x8ae9
0x000000000006c962 : ret 0x8b04
0x000000000002da3e : ret 0x8b05
0x00000000000d8870 : ret 0x8b10
0x000000000018532e : ret 0x8b36
0x000000000002c53a : ret 0x8b41
0x00000000000f07f3 : ret 0x8b44
0x00000000000d7070 : ret 0x8b47
0x0000000000035d75 : ret 0x8b48
0x00000000000744d6 : ret 0x8b49
0x000000000004902e : ret 0x8b4a
0x000000000002a27d : ret 0x8b4c
0x000000000006e418 : ret 0x8b64
0x00000000000adcdc : ret 0x8b8
0x00000000000c1a48 : ret 0x8c0f
0x00000000000037b6 : ret 0x8cba
0x000000000005bd95 : ret 0x8d01
0x000000000004ac1d : ret 0x8d04
0x0000000000051fef : ret 0x8d0f
0x00000000000c4201 : ret 0x8d41
0x00000000001194af : ret 0x8d44
0x0000000000119500 : ret 0x8d45
0x0000000000020778 : ret 0x8d48
0x0000000000030319 : ret 0x8d49
0x0000000000048529 : ret 0x8d4a
0x00000000000483c5 : ret 0x8d4c
0x00000000000a32f2 : ret 0x8d4d
0x0000000000082c3c : ret 0x8d4e
0x000000000013ee5b : ret 0x8d8b
0x000000000002854c : ret 0x8e0f
0x00000000000fc5c1 : ret 0x8e75
0x000000000006afe2 : ret 0x8e8
0x00000000000b14fd : ret 0x8eb
0x000000000010e85c : ret 0x8ee8
0x00000000000e0799 : ret 0x8f0f
0x0000000000105246 : ret 0x8f7
0x00000000000711f8 : ret 0x8feb
0x000000000019f908 : ret 0x900e
0x00000000000d7cdd : ret 0x9066
0x000000000002d90d : ret 0x90c3
0x00000000001402b5 : ret 0x90f3
0x00000000000780ec : ret 0x91eb
0x0000000000052008 : ret 0x92e8
0x00000000001195b5 : ret 0x930f
0x0000000000087a3e : ret 0x93be
0x0000000000126d03 : ret 0x93c
0x0000000000061b92 : ret 0x940f
0x000000000003dad7 : ret 0x941
0x00000000000db0af : ret 0x947c
0x000000000012fae7 : ret 0x948
0x000000000008d5c8 : ret 0x94c
0x00000000000dcbca : ret 0x94d
0x000000000004c391 : ret 0x9522
0x0000000000114619 : ret 0x952b
0x0000000000030b18 : ret 0x953d
0x0000000000184153 : ret 0x9576
0x0000000000071389 : ret 0x95eb
0x00000000000f874f : ret 0x95f
0x00000000000f8aef : ret 0x970f
0x0000000000003798 : ret 0x975
0x00000000000817f9 : ret 0x976
0x00000000000f7253 : ret 0x97e8
0x00000000000e3f2c : ret 0x9848
0x0000000000089955 : ret 0x9874
0x0000000000075be4 : ret 0x98eb
0x000000000002a0da : ret 0x9a
0x0000000000042208 : ret 0x9a74
0x000000000013e027 : ret 0x9ae9
0x00000000000d0443 : ret 0x9aeb
0x00000000000b8b77 : ret 0x9be9
0x000000000006af23 : ret 0x9ce9
0x000000000006820a : ret 0x9d
0x00000000000a6480 : ret 0x9d72
0x00000000000ae5c8 : ret 0x9e74
0x0000000000022f83 : ret 0x9e9
0x00000000000aebdc : ret 0x9eb
0x0000000000044e11 : ret 0x9f74
0x0000000000005991 : ret 0xa
0x00000000001ab5ac : ret 0xa02
0x000000000006f64a : ret 0xa1
0x00000000000e8419 : ret 0xa1e8
0x000000000003bfe8 : ret 0xa274
0x00000000000ea0ba : ret 0xa2a
0x00000000000e9e1f : ret 0xa2c
0x0000000000183e43 : ret 0xa514
0x00000000000eaf0d : ret 0xa6e9
0x000000000012abcf : ret 0xa74
0x00000000000ba732 : ret 0xa8e9
0x00000000001842c7 : ret 0xac65
0x00000000000b617e : ret 0xace8
0x0000000000184c84 : ret 0xacfc
0x00000000000f639d : ret 0xade9
0x00000000000d97dd : ret 0xaeb
0x00000000000aa9ea : ret 0xaf0f
0x0000000000020cce : ret 0xaf72
0x0000000000086d61 : ret 0xafe9
0x000000000005ae2a : ret 0xb
0x00000000000e13aa : ret 0xb0d
0x00000000000821df : ret 0xb48b
0x000000000004b1ad : ret 0xb589
0x000000000002f459 : ret 0xb60f
0x00000000000fe018 : ret 0xb6e9
0x00000000000bd435 : ret 0xb70f
0x0000000000127838 : ret 0xb74
0x0000000000077d0c : ret 0xb76
0x00000000000c06ee : ret 0xb77d
0x00000000000f7033 : ret 0xb7e8
0x0000000000034b83 : ret 0xb8
0x00000000000347b1 : ret 0xb848
0x000000000002c305 : ret 0xb87f
0x00000000000607c8 : ret 0xb908
0x000000000018418e : ret 0xb9b9
0x0000000000003189 : ret 0xba88
0x00000000000c98d3 : ret 0xbb
0x000000000006c81d : ret 0xbb41
0x000000000005dfff : ret 0xbbe9
0x00000000000488b2 : ret 0xbc41
0x0000000000002480 : ret 0xbd07
0x000000000012955f : ret 0xbd74
0x000000000004b19a : ret 0xbd89
0x00000000000824fd : ret 0xbde8
0x0000000000061808 : ret 0xbe08
0x00000000000c2836 : ret 0xbe0f
0x0000000000183ee4 : ret 0xbe57
0x0000000000053498 : ret 0xbf07
0x0000000000060051 : ret 0xbf08
0x000000000007db9e : ret 0xbfe9
0x0000000000134d88 : ret 0xbfeb
0x0000000000005fd9 : ret 0xc
0x000000000008af89 : ret 0xc000
0x000000000004242e : ret 0xc001
0x00000000000423e2 : ret 0xc002
0x0000000000123497 : ret 0xc019
0x000000000006c072 : ret 0xc031
0x00000000000ddb3a : ret 0xc041
0x000000000012bbaa : ret 0xc069
0x0000000000047d6c : ret 0xc083
0x00000000000ff985 : ret 0xc084
0x000000000008d595 : ret 0xc085
0x00000000000ddd7c : ret 0xc141
0x0000000000034a17 : ret 0xc148
0x000000000004a538 : ret 0xc149
0x0000000000136058 : ret 0xc173
0x00000000000358bd : ret 0xc189
0x0000000000107e29 : ret 0xc1e8
0x0000000000047542 : ret 0xc221
0x000000000003aba6 : ret 0xc229
0x000000000003ad40 : ret 0xc269
0x00000000000c3fe1 : ret 0xc26b
0x0000000000083f8b : ret 0xc275
0x00000000000f5c0a : ret 0xc283
0x0000000000035d67 : ret 0xc289
0x000000000016f854 : ret 0xc2b2
0x000000000011d770 : ret 0xc2e9
0x000000000003a6f8 : ret 0xc35b
0x0000000000083f8d : ret 0xc3f3
0x00000000000f9640 : ret 0xc3f6
0x0000000000181d02 : ret 0xc4c3
0x0000000000183a98 : ret 0xc4ff
0x000000000014dd68 : ret 0xc580
0x00000000000e5965 : ret 0xc5e8
0x000000000010e61a : ret 0xc601
0x0000000000122954 : ret 0xc602
0x00000000000e4ece : ret 0xc683
0x0000000000056263 : ret 0xc689
0x000000000009f4a4 : ret 0xc6e8
0x0000000000087841 : ret 0xc6eb
0x000000000012f7c6 : ret 0xc707
0x00000000000f95ca : ret 0xc72
0x0000000000037291 : ret 0xc748
0x00000000000442b6 : ret 0xc749
0x00000000000aaf61 : ret 0xc75
0x000000000009d24f : ret 0xc76
0x0000000000082490 : ret 0xc789
0x00000000000f346d : ret 0xc7e9
0x00000000000334a8 : ret 0xc801
0x0000000000098791 : ret 0xc829
0x0000000000071cb4 : ret 0xc883
0x0000000000025b9c : ret 0xc985
0x00000000000899c6 : ret 0xc9ff
0x00000000000deb92 : ret 0xca39
0x00000000000eaed7 : ret 0xca83
0x00000000000b3160 : ret 0xcae8
0x000000000005cb8d : ret 0xcb73
0x00000000000d31ed : ret 0xcb75
0x00000000000f5c39 : ret 0xcb8
0x000000000018352a : ret 0xcca7
0x000000000012c00a : ret 0xcd
0x000000000018560d : ret 0xcd11
0x00000000000a6450 : ret 0xcd72
0x0000000000101d7c : ret 0xcdbb
0x000000000002c79d : ret 0xcde8
0x0000000000083931 : ret 0xce31
0x0000000000031ff8 : ret 0xce80
0x000000000005c46d : ret 0xce83
0x000000000007ef9b : ret 0xcf31
0x00000000000b0a86 : ret 0xd
0x00000000000d2ade : ret 0xd008
0x00000000000d9c30 : ret 0xd009
0x00000000000bbf63 : ret 0xd021
0x00000000000cd8a2 : ret 0xd029
0x000000000014dbdc : ret 0xd073
0x0000000000046dbf : ret 0xd084
0x000000000003296e : ret 0xd089
0x00000000000b58ed : ret 0xd0f7
0x00000000000ee7a1 : ret 0xd101
0x00000000000fe9f4 : ret 0xd108
0x000000000005fc5d : ret 0xd129
0x00000000000d85ca : ret 0xd138
0x00000000000dbe32 : ret 0xd139
0x00000000000ddd83 : ret 0xd141
0x000000000012f8e9 : ret 0xd148
0x0000000000108b19 : ret 0xd1e8
0x0000000000033e55 : ret 0xd231
0x000000000002086d : ret 0xd284
0x000000000009ee20 : ret 0xd308
0x0000000000061a97 : ret 0xd309
0x0000000000061f73 : ret 0xd329
0x0000000000086216 : ret 0xd341
0x000000000003c3db : ret 0xd348
0x00000000000b0b57 : ret 0xd3e8
0x0000000000036942 : ret 0xd521
0x000000000000089a : ret 0xd5a4
0x00000000000528e2 : ret 0xd5e9
0x00000000000e0b83 : ret 0xd609
0x000000000005febd : ret 0xd629
0x00000000000dba8a : ret 0xd639
0x000000000010876e : ret 0xd6e9
0x00000000000ba5dd : ret 0xd721
0x00000000000ddf31 : ret 0xd739
0x0000000000105dc6 : ret 0xd74
0x00000000000b9529 : ret 0xd76
0x00000000000cc313 : ret 0xd7e8
0x00000000000c3554 : ret 0xd801
0x00000000000aa9ef : ret 0xd889
0x00000000001850a5 : ret 0xd8f
0x00000000000204df : ret 0xd975
0x00000000000d764d : ret 0xd9eb
0x0000000000123080 : ret 0xda21
0x00000000000de8c0 : ret 0xda39
0x0000000000115363 : ret 0xda75
0x00000000000b72ea : ret 0xdaa
0x0000000000034eb1 : ret 0xdaf7
0x00000000000f0c82 : ret 0xdb31
0x000000000002539b : ret 0xdb85
0x00000000000bb0f1 : ret 0xdc00
0x00000000000e2681 : ret 0xdc74
0x0000000000185186 : ret 0xdcd9
0x00000000000887ce : ret 0xdce8
0x00000000000c84a0 : ret 0xdd72
0x00000000000e0ce3 : ret 0xddeb
0x0000000000184102 : ret 0xde5d
0x0000000000074615 : ret 0xde74
0x000000000013a757 : ret 0xde77
0x0000000000045ced : ret 0xde8
0x0000000000182e91 : ret 0xde9e
0x000000000010f435 : ret 0xdeb
0x000000000008ae49 : ret 0xe000
0x000000000019c8d5 : ret 0xe01
0x00000000001708c9 : ret 0xe074
0x0000000000023ded : ret 0xe077
0x00000000001247a6 : ret 0xe083
0x00000000001a9cb9 : ret 0xe0a
0x0000000000061cda : ret 0xe0e8
0x000000000012dd7a : ret 0xe0ff
0x00000000000e284c : ret 0xe174
0x0000000000028555 : ret 0xe183
0x0000000000030389 : ret 0xe1e8
0x000000000002429b : ret 0xe277
0x0000000000020628 : ret 0xe281
0x0000000000027352 : ret 0xe283
0x00000000000b0baa : ret 0xe2d
0x00000000000210b9 : ret 0xe2ff
0x000000000004b173 : ret 0xe383
0x0000000000095d26 : ret 0xe3e9
0x00000000000e2439 : ret 0xe474
0x000000000011ea96 : ret 0xe4e8
0x0000000000096b70 : ret 0xe575
0x000000000007d9b7 : ret 0xe675
0x0000000000050583 : ret 0xe680
0x00000000001852a6 : ret 0xe71f
0x00000000000d9086 : ret 0xe775
0x00000000000d3648 : ret 0xe777
0x000000000006f1c2 : ret 0xe8
0x00000000000fb134 : ret 0xe801
0x00000000000d956b : ret 0xe875
0x0000000000051e85 : ret 0xe87f
0x000000000006c20b : ret 0xe883
0x00000000000cd78f : ret 0xe8b8
0x0000000000020497 : ret 0xe8c1
0x000000000002ba92 : ret 0xe901
0x000000000002fb2e : ret 0xe902
0x0000000000026ec9 : ret 0xe904
0x00000000000bb651 : ret 0xe907
0x0000000000089a56 : ret 0xe908
0x0000000000146e26 : ret 0xe910
0x000000000004b70d : ret 0xe920
0x0000000000086393 : ret 0xe96e
0x0000000000183607 : ret 0xe970
0x000000000003bf2c : ret 0xe974
0x0000000000110c44 : ret 0xe975
0x000000000008653c : ret 0xe977
0x000000000002acaa : ret 0xea
0x000000000004607b : ret 0xea75
0x00000000000aab9a : ret 0xea81
0x000000000004b18a : ret 0xeac0
0x00000000000d6e62 : ret 0xeac1
0x000000000009d4d4 : ret 0xeb01
0x00000000000d775a : ret 0xeb04
0x0000000000144e66 : ret 0xeb10
0x00000000000ca1f2 : ret 0xeb11
0x000000000008635f : ret 0xeb5b
0x00000000000394fa : ret 0xeb72
0x0000000000185db8 : ret 0xec2
0x00000000000b8dd5 : ret 0xec77
0x00000000000d79a1 : ret 0xec7f
0x0000000000119608 : ret 0xed75
0x0000000000028098 : ret 0xed85
0x000000000013e7e2 : ret 0xee10
0x00000000000e0dc7 : ret 0xee72
0x0000000000022c8f : ret 0xee75
0x0000000000141f7a : ret 0xeebc
0x000000000012dc7c : ret 0xeee8
0x0000000000185a5a : ret 0xef32
0x0000000000072a2e : ret 0xef75
0x00000000000d31e9 : ret 0xef7c
0x00000000000078f9 : ret 0xf
0x000000000008ad09 : ret 0xf000
0x0000000000025941 : ret 0xf01
0x0000000000061bc1 : ret 0xf02
0x00000000000dc0d2 : ret 0xf039
0x000000000006ce2d : ret 0xf04
0x000000000009f9c3 : ret 0xf077
0x000000000001fe5a : ret 0xf08
0x000000000011952f : ret 0xf089
0x000000000009a02b : ret 0xf0e
0x000000000002fb37 : ret 0xf0e9
0x0000000000081570 : ret 0xf0f
0x00000000000582ea : ret 0xf10
0x000000000009f22c : ret 0xf188
0x0000000000020341 : ret 0xf189
0x00000000001045e2 : ret 0xf1b2
0x00000000000fc1f9 : ret 0xf1e8
0x000000000006ee5c : ret 0xf20
0x000000000008b3f9 : ret 0xf201
0x000000000006c375 : ret 0xf229
0x000000000002c1b8 : ret 0xf2e8
0x0000000000037614 : ret 0xf301
0x0000000000134d5a : ret 0xf382
0x00000000001238ce : ret 0xf3c3
0x00000000000567ca : ret 0xf40
0x000000000009a6fe : ret 0xf41
0x00000000000dd1da : ret 0xf426
0x00000000000dc12a : ret 0xf436
0x00000000000deacb : ret 0xf44
0x00000000000dc555 : ret 0xf45
0x000000000003cbc6 : ret 0xf48
0x0000000000052ef7 : ret 0xf4c
0x00000000000ccfe2 : ret 0xf528
0x00000000000d7226 : ret 0xf53
0x0000000000097275 : ret 0xf5e8
0x00000000000c15c8 : ret 0xf601
0x0000000000049aa2 : ret 0xf631
0x00000000001195eb : ret 0xf641
0x000000000011955b : ret 0xf643
0x0000000000034abb : ret 0xf66
0x00000000000ff274 : ret 0xf683
0x00000000000aa7bc : ret 0xf685
0x0000000000035d5d : ret 0xf701
0x00000000000821c3 : ret 0xf710
0x0000000000049b15 : ret 0xf74
0x0000000000047645 : ret 0xf741
0x000000000008f6ec : ret 0xf748
0x0000000000048774 : ret 0xf749
0x00000000000bd0aa : ret 0xf7c6
0x0000000000113cf8 : ret 0xf7e
0x0000000000052bd3 : ret 0xf7e9
0x00000000000dff2c : ret 0xf80
0x000000000008abc9 : ret 0xf800
0x000000000010f1aa : ret 0xf852
0x0000000000182d70 : ret 0xf869
0x00000000000aed85 : ret 0xf883
0x00000000000c5f55 : ret 0xf889
0x00000000000c2229 : ret 0xf8c1
0x000000000002100d : ret 0xf8e9
0x00000000000f957a : ret 0xf95c
0x0000000000127830 : ret 0xf980
0x0000000000063814 : ret 0xf983
0x00000000000f27ea : ret 0xf9cb
0x00000000000c416f : ret 0xfa29
0x000000000007b9e2 : ret 0xfa3e
0x00000000000523c0 : ret 0xfa80
0x000000000003dee2 : ret 0xfa81
0x0000000000029a79 : ret 0xfa83
0x0000000000073ce2 : ret 0xfabb
0x0000000000032982 : ret 0xfac1
0x00000000000dba4d : ret 0xfad1
0x00000000000733b0 : ret 0xfae8
0x000000000014207a : ret 0xfb58
0x0000000000127be1 : ret 0xfb80
0x00000000000d9bbe : ret 0xfb83
0x000000000008aa89 : ret 0xfc00
0x000000000003f4d6 : ret 0xfc01
0x000000000003f48a : ret 0xfc02
0x00000000000ffde1 : ret 0xfc07
0x000000000005c8da : ret 0xfc2f
0x000000000008b419 : ret 0xfc3
0x00000000001959fc : ret 0xfc53
0x00000000001959f4 : ret 0xfc54
0x00000000001959ec : ret 0xfc55
0x00000000001959e4 : ret 0xfc56
0x00000000001959dc : ret 0xfc57
0x00000000001957e8 : ret 0xfc5f
0x0000000000057fda : ret 0xfc78
0x0000000000195cd4 : ret 0xfc87
0x00000000001963d4 : ret 0xfca4
0x000000000019620c : ret 0xfca7
0x000000000004b3e2 : ret 0xfd44
0x00000000000d56ea : ret 0xfd7a
0x00000000000aa8c8 : ret 0xfd83
0x00000000000f51fa : ret 0xfda2
0x000000000002f3e0 : ret 0xfdf
0x000000000008a949 : ret 0xfe00
0x00000000000aa8e9 : ret 0xfe83
0x00000000001212e8 : ret 0xfe9
0x0000000000044b7a : ret 0xfe90
0x0000000000033ee2 : ret 0xfeb9
0x000000000014dbae : ret 0xfec5
0x000000000012dc6c : ret 0xfee8
0x000000000008a809 : ret 0xff00
0x00000000001242aa : ret 0xff0d
0x0000000000044d4f : ret 0xff2
0x00000000000b7450 : ret 0xff25
0x000000000009f68a : ret 0xff3
0x0000000000089165 : ret 0xff31
0x000000000009e8cd : ret 0xff41
0x000000000002b3e2 : ret 0xff44
0x0000000000089904 : ret 0xff48
0x000000000010157a : ret 0xff63
0x000000000007fc4a : ret 0xff78
0x000000000008a6c9 : ret 0xff80
0x000000000003c216 : ret 0xff81
0x000000000003c1ca : ret 0xff82
0x0000000000063832 : ret 0xff83
0x000000000008288a : ret 0xffae
0x0000000000069de9 : ret 0xffaf
0x000000000001f96b : ret 0xffb8
0x0000000000042317 : ret 0xffbf
0x000000000008a589 : ret 0xffc0
0x000000000009c00c : ret 0xffd0
0x000000000009e7e9 : ret 0xffd3
0x000000000009c2fc : ret 0xffd7
0x0000000000087681 : ret 0xffdf
0x000000000008a449 : ret 0xffe0
0x0000000000057afa : ret 0xffe1
0x0000000000066b2d : ret 0xffe5
0x00000000001a37b9 : ret 0xffe7
0x0000000000020fda : ret 0xffe8
0x0000000000021005 : ret 0xffe9
0x00000000001735b6 : ret 0xffea
0x0000000000040f87 : ret 0xffec
0x000000000014365f : ret 0xffed
0x0000000000133637 : ret 0xffee
0x000000000003b58c : ret 0xffef
0x000000000008a309 : ret 0xfff0
0x0000000000031d08 : ret 0xfff1
0x00000000000f35e4 : ret 0xfff2
0x00000000000c47d7 : ret 0xfff3
0x00000000000b071e : ret 0xfff4
0x000000000009e6b5 : ret 0xfff5
0x00000000000ef61e : ret 0xfff6
0x00000000000b194c : ret 0xfff7
0x000000000004ec76 : ret 0xfff8
0x00000000000346c6 : ret 0xfff9
0x000000000005115a : ret 0xfffa
0x000000000002b0b3 : ret 0xfffb
0x00000000000343c6 : ret 0xfffc
0x000000000005fac0 : ret 0xfffd
0x00000000000325e8 : ret 0xfffe
0x000000000002d905 : ret 0xffff
0x000000000001f6bc : ret 1
0x000000000004b519 : ret 2
0x00000000000011c8 : ret 3
0x0000000000007608 : ret 4
0x0000000000001570 : ret 5
0x000000000000dda0 : ret 6
0x00000000000ab4aa : ret 7
0x0000000000001a8c : ret 8
0x000000000017137a : ret 9
0x0000000000092c2f : retf -0x7af1 ; call qword ptr [rsi]
0x00000000001a85f5 : retf 0 ; call 0x131a7657
0x00000000001a85c5 : retf 0 ; call 0x211a7627
0x00000000001a8625 : retf ; add byte ptr [rax], al ; call 0x131a7687
0x00000000001a8655 : retf ; add byte ptr [rax], al ; call 0x131a76b7
0x00000000001a8685 : retf ; add byte ptr [rax], al ; call 0x131a76e7
0x00000000001a86b5 : retf ; add byte ptr [rax], al ; call 0x131a7717
0x0000000000102d3e : retf ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d4c ; call rbx
0x0000000000102d3d : retf ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102d4d ; call rbx
0x0000000000102d23 : retf ; int1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000102d4c : retf ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000102d30 : retf ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102d3e ; call rbx
0x0000000000143663 : retf ; nop dword ptr [rax] ; call qword ptr [rax]
0x0000000000189015 : retf ; push qword ptr [rdi] ; fcomi st(3) ; jmp rsp
0x000000000019f140 : rol al, 0xe9 ; call qword ptr [rsi]
0x00000000000aa215 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000aacde : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x00000000000ff7cc : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x000000000009ec6c : rol bl, 0x66 ; nop ; mov rax, rdi ; ret
0x000000000009f0cd : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000acd6d : rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000ada9b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000072e8c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008eced : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000003a6c7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x0000000000110bbd : rol byte ptr [rax + 0x38], 0xd6 ; cmovne eax, ecx ; ret
0x000000000009f662 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000bd832 : rol byte ptr [rax + 0x49000151], 1 ; ret
0x000000000008ba02 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x0000000000001390 : rol byte ptr [rax + rax], 0 ; ret
0x0000000000180bc0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000024bc0 : rol byte ptr [rax + rcx*2], 0x83 ; ret
0x000000000006632c : rol byte ptr [rax + rcx*2], 1 ; ret
0x00000000001240f9 : rol byte ptr [rax + rcx*4 + 0x5e], 3 ; pop rbx ; ret
0x000000000003d320 : rol byte ptr [rax - 0x6df0f506], 1 ; ret 0xb60f
0x00000000000ac94d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000016e77d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001a7b35 : rol byte ptr [rax], 0 ; clc ; xchg eax, ebx ; sti ; call qword ptr [rax]
0x0000000000187f94 : rol byte ptr [rax], 0xf2 ; push rax ; add dl, dh ; jmp qword ptr [rax]
0x00000000000bc608 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000006b62f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000105447 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7f40 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000003569c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000008d80b : rol byte ptr [rbp + 0x48be75c0], 1 ; add esp, 8 ; ret
0x00000000000966d2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000005d9e1 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x0000000000036269 : rol byte ptr [rbp - 0x3f6bf02e], 0xc3 ; xor eax, eax ; ret
0x000000000011d717 : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0x8545
0x000000000011d8fd : rol byte ptr [rbp - 0x6bf0be40], cl ; ret 0xf741
0x0000000000195c28 : rol byte ptr [rbp - 0x7aaf0004], 0xfc ; jmp rax
0x000000000004846b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000001190e9 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x00000000001059db : rol byte ptr [rbx - 0x34d6fe3d], 1 ; ret
0x00000000000d71b7 : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000010a69c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000073058 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x000000000002df31 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000d16a5 : rol byte ptr [rbx - 0x6bf0fe06], 0xc0 ; ret
0x000000000005df0f : rol byte ptr [rbx - 0x7af00008], cl ; ret
0x00000000000abf92 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000122ac6 : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000012dbc1 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x0000000000188008 : rol byte ptr [rbx], 1 ; push rax ; add esi, edx ; call qword ptr [rax]
0x00000000000aab91 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000011d719 : rol byte ptr [rcx + 0xf], 0x94 ; ret 0x8545
0x000000000011d8ff : rol byte ptr [rcx + 0xf], 0x94 ; ret 0xf741
0x0000000000097323 : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x000000000009eb62 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000b862b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x14c
0x000000000009ec1b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000d6535 : rol byte ptr [rcx + rbp - 0x20], 1 ; ret
0x000000000002975b : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000ac04e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xac020 ; ret
0x0000000000123db2 : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000103197 : rol byte ptr [rcx - 0x77], 0xdd ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000c284e : rol byte ptr [rcx - 0x77], 1 ; ret 0x8341
0x00000000000db9ee : rol byte ptr [rcx - 0x77], 1 ; ret 0x8d48
0x00000000000c23ad : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x0000000000195c4c : rol byte ptr [rcx - 0x7e990004], 1 ; cld ; call rsi
0x000000000008b3f2 : rol byte ptr [rcx - 0x80], cl ; stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x00000000000abf72 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000e80fa : rol byte ptr [rcx], 0x39 ; ret
0x00000000000d9568 : rol byte ptr [rcx], 0x39 ; ret 0xe875
0x00000000000e5df2 : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret 0x3941
0x0000000000048082 : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x48081 ; xor eax, eax ; ret
0x00000000000aa99b : rol byte ptr [rcx], 0x5d ; pop r12 ; pop r13 ; ret
0x000000000010997d : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000000d9247 : rol byte ptr [rcx], 0x83 ; ret 0x4001
0x000000000002b152 : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000006ee57 : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0xf20
0x000000000004606a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x0000000000102127 : rol byte ptr [rcx], 0xd9 ; ret 0x3944
0x00000000000aa9fb : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000aa9e6 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000187fbc : rol byte ptr [rcx], 0xf2 ; jmp rax
0x00000000001a7390 : rol byte ptr [rcx], 1 ; out dx, eax ; jmp rsi
0x000000000014dbde : rol byte ptr [rcx], 1 ; ret 0x148
0x000000000019c8d2 : rol byte ptr [rcx], 3 ; ret 0xe01
0x00000000001bc6d8 : rol byte ptr [rcx], cl ; ret 0xa
0x00000000001bc680 : rol byte ptr [rcx], cl ; ret 0xb
0x00000000000f6a0c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x000000000010aa6d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000abfd2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000188040 : rol byte ptr [rdx + rsi*8], 0xff ; rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000188044 : rol byte ptr [rdx + rsi*8], 1 ; jmp rax
0x0000000000188028 : rol byte ptr [rdx + rsi*8], 1 ; push rax ; add al, 0xf2 ; call qword ptr [rax]
0x0000000000195e40 : rol byte ptr [rdx - 0x7daf0004], 0xfc ; jmp rax
0x00000000000abf82 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000218e6 : rol byte ptr [rdx], 0x50 ; call rbx
0x0000000000187fe4 : rol byte ptr [rdx], 0xf2 ; jmp rax
0x00000000001073d5 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000cd227 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000000000bf6ef : rol byte ptr [rip + 0x16e], 1 ; ret
0x000000000010a93d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x000000000002e50e : rol byte ptr [rip + 0x788d4800], cl ; sbb dword ptr [rax - 0x77], ecx ; ret
0x00000000000abfc2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d7a41 : rol byte ptr [rsp + rax*2], 0x29 ; ret 0x5089
0x0000000000181d00 : rol cl, 0xc2 ; ret
0x000000000019f200 : rol cl, 0xe9 ; call qword ptr [rdx]
0x0000000000195324 : rol dh, 0xfb ; call qword ptr [rax]
0x000000000011d097 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x0000000000195318 : rol dl, 1 ; sti ; jmp qword ptr [rax]
0x00000000000abf1c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x0000000000110b91 : rol dword ptr [rax + 0x38], -0x3a ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000001a7c3d : rol dword ptr [rax], 0 ; shl bl, 0xef ; call rsp
0x00000000001a7c25 : rol dword ptr [rax], 0 ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a8c35 : rol dword ptr [rax], 1 ; add byte ptr [rax], bh ; fdiv st(0) ; call qword ptr [rax]
0x00000000001a8c4d : rol dword ptr [rax], 1 ; add byte ptr [rax], dh ; fdiv st(0) ; call qword ptr [rax]
0x000000000006bcf8 : rol dword ptr [rax], 1 ; ret
0x000000000009f0c7 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000001f9be : rol dword ptr [rbx + rbp*8], -0x34 ; mov qword ptr [rdi], rcx ; ret
0x00000000000c612b : rol dword ptr [rcx + 0xf], 0x49 ; fadd qword ptr [rcx] ; ret
0x0000000000066328 : rol dword ptr [rcx + rcx*2], -0x7d ; rol byte ptr [rax + rcx*2], 1 ; ret
0x0000000000022d7b : rol dword ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000111f31 : rol dword ptr [rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000a7e69 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000123f5e : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000111f30 : rol dword ptr fs:[rdi], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000360c5 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000008b459 : rol ebx, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000137738 : rol ecx, 1 ; jmp 0xffffffff80d66e54
0x00000000001379bf : rol ecx, 1 ; jmp 0xffffffff80d670db
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000008b458 : rol r11d, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000360c4 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000119362 : ror ax, 8 ; ret
0x0000000000035f64 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x00000000000360c6 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008eb62 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x8eba9 ; add rax, rdi ; ret
0x000000000008b8b7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000a128e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000007442a : ror byte ptr [rax + 0x29], 1 ; ret
0x0000000000023db6 : ror byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000013bd6d : ror byte ptr [rax + 0x39], 0xca ; je 0x13bd87 ; ret
0x00000000000fcdef : ror byte ptr [rax + 0x39], 0xd7 ; ja 0xfce27 ; ret
0x0000000000114a68 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000f6a0e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000000f6c9d : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x0000000000048f16 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000114988 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000d3fb0 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000046f15 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000bc400 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x0000000000115aa2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x0000000000128ecc : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x0000000000097967 : ror byte ptr [rax + 0xf], 1 ; ret
0x0000000000047fd5 : ror byte ptr [rax + 0xf], 1 ; ret 0x3145
0x000000000002c864 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002c855 : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x0000000000049a9e : ror byte ptr [rax + 0xf], 1 ; ret 0xf631
0x000000000009f213 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00000000000965ac : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008d459 : ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000123f33 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000076b99 : ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000af121 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b81d6 : ror byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000042205 : ror byte ptr [rax + 1], cl ; ret 0x9a74
0x00000000000ae5c5 : ror byte ptr [rax + 1], cl ; ret 0x9e74
0x000000000003bfe5 : ror byte ptr [rax + 1], cl ; ret 0xa274
0x000000000003bf29 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000008b8b4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000df820 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000017cfc8 : ror byte ptr [rax + rax], 0 ; ret
0x000000000008ece5 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000aa84c : ror byte ptr [rax - 0x2f], 1 ; call 0xffffffffc30f35a8
0x000000000002d902 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000001096b6 : ror byte ptr [rax - 0x3f], 0xe9 ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000005715a : ror byte ptr [rax - 0x3f], 1 ; clc ; add cl, byte ptr [rax + 0x29] ; ret
0x00000000000c0202 : ror byte ptr [rax - 0x46], 1 ; ret
0x00000000000bb5f8 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000cdbb8 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000008eb22 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000008eb52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000009f102 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008eb42 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000008217b : ror byte ptr [rax - 0x73], 0x54 ; ret
0x000000000008249a : ror byte ptr [rax - 0x73], 1 ; push rsp ; ret
0x00000000000cf38d : ror byte ptr [rax - 0x75], 0x54 ; ret
0x000000000010a3f1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000c6108 : ror byte ptr [rax - 0x75], 0x7c ; ret
0x000000000007ba0a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000048db3 : ror byte ptr [rax - 0x77], 0x14 ; ret
0x000000000009ed49 : ror byte ptr [rax - 0x77], 0xa ; ret
0x000000000012e269 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x12e20b ; xor eax, eax ; pop rbx ; ret
0x0000000000097964 : ror byte ptr [rax - 0x77], 0xd0 ; cmove rax, rbx ; pop rbx ; ret
0x0000000000132d88 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x0000000000115992 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x000000000013a749 : ror byte ptr [rax - 0x77], 0xef ; add rbx, r12 ; call r14
0x000000000008810c : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000013fffa : ror byte ptr [rax - 0x77], 1 ; ret 0x1be
0x000000000003b35d : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000078f65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000bf1f5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000052005 : ror byte ptr [rax - 0x77], 1 ; ret 0x92e8
0x000000000012f8e6 : ror byte ptr [rax - 0x77], 1 ; ret 0xd148
0x0000000000020625 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000872a2 : ror byte ptr [rax - 0x77], 1 ; xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000001323b9 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x000000000007db6d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000007a391 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x7a3a6 ; ret
0x00000000001024ab : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rsi + rax + 0x5b], dh ; ret
0x00000000000773e2 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x00000000000954d1 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000003adac : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013b2e1 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000137096 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x0000000000136e1e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136e85 ; ret
0x00000000000f8920 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x000000000003a08d : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000453b4 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000134d54 : ror byte ptr [rax - 0x7d], 0xc4 ; or cl, ch ; ret 0xf382
0x0000000000143630 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001337cd : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013c31a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001221d6 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000009f162 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000009f142 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000009f122 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000f6e3e : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000082c35 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2917454
0x00000000000c3195 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000e0cc6 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x000000000004f583 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4820
0x00000000000fdad5 : ror byte ptr [rax - 0x7d], cl ; clc ; add al, 0xf ; xchg eax, ebp ; ret 0xdaf7
0x0000000000075f7a : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000046180 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000d5273 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a6476 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000026489 : ror byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000000000bee4e : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000077ccf : ror byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000002593e : ror byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000007818a : ror byte ptr [rax - 9], cl ; cmc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cd : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001178da : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000000aff1a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000008d7b4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000b856b : ror byte ptr [rbp + 0x39], cl ; ret 0x4574
0x00000000000ad077 : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000f0c86 : ror byte ptr [rbx + 0xf48246c], cl ; xchg eax, ebp ; ret
0x000000000019d4b0 : ror byte ptr [rbx], 0xe9 ; call qword ptr [rbx]
0x000000000019d510 : ror byte ptr [rbx], 0xe9 ; jmp qword ptr [rax]
0x00000000000f6cff : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x0000000000024c28 : ror byte ptr [rcx + 0x39], cl ; ret 0x1e76
0x0000000000023dc5 : ror byte ptr [rcx + 0x39], cl ; ret 0x2576
0x0000000000024270 : ror byte ptr [rcx + 0x39], cl ; ret 0x2876
0x00000000000ac9b7 : ror byte ptr [rcx + 0x48c47503], 0x83 ; ret
0x00000000000aeb63 : ror byte ptr [rcx + 0xf082444], 0x84 ; ret
0x000000000012a2db : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x0000000000034f34 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000094f36 : ror byte ptr [rcx - 0x39], cl ; ret
0x000000000003522e : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x000000000012300e : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000d6e9e : ror byte ptr [rcx - 0x76bb79ec], 1 ; ret 0xeac1
0x00000000000aa844 : ror byte ptr [rcx - 0x77], 1 ; ret 0x2276
0x0000000000094f78 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000a605f : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000099aaa : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000ac950 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000bb250 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x000000000010752c : ror byte ptr [rcx], 0xf8 ; ret
0x000000000008f529 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000105f90 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000101c65 : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000ea9b0 : ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x00000000000bd432 : ror byte ptr [rdi], 0x48 ; ret 0xb70f
0x000000000003a6f5 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x000000000004745f : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000bd9ed : ror byte ptr [rdi], 0x84 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007573c : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000970aa : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000885e6 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000f4b37 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000e393f : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000000000c49f6 : ror byte ptr [rdi], 0x84 ; ret 1
0x0000000000096fda : ror byte ptr [rdi], 0x84 ; ret 2
0x0000000000063693 : ror byte ptr [rdi], 0x84 ; ret 3
0x000000000002aecd : ror byte ptr [rdi], 0x84 ; ret 5
0x0000000000110ba2 : ror byte ptr [rdi], 0x84 ; sbb eax, 0x89000001 ; ret 0x8944
0x000000000007638c : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001657ba : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000084ab5 : ror byte ptr [rdi], 0x85 ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000009f08c : ror byte ptr [rdi], 0x85 ; jge 0x9f09a ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000086641 : ror byte ptr [rdi], 0x85 ; lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000a4cc1 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000005cd99 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1607 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000600bb : ror byte ptr [rdi], 0x85 ; ret 0x31
0x00000000000db88f : ror byte ptr [rdi], 0x85 ; ret 0xfff8
0x00000000001138d5 : ror byte ptr [rdi], 0x85 ; ret 0xfffa
0x000000000011985e : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000000000122258 : ror byte ptr [rdi], 0x88 ; ret
0x00000000000f86c7 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000000001003a4 : ror byte ptr [rdi], 0x89 ; ret 0xfffe
0x00000000000bbdd3 : ror byte ptr [rdi], 0x89 ; ret 3
0x00000000000cd89f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000884fd : ror byte ptr [rdi], 0x94 ; ret
0x00000000000ed56e : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x00000000000e2d97 : ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000bbcfb : ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000136cd6 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000bbdc8 : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x0000000000059901 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x00000000000817dc : ror byte ptr [rdi], 0x94 ; ret 0x82e9
0x00000000000e0af8 : ror byte ptr [rdi], 0x94 ; ret 0x8445
0x0000000000020775 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x0000000000061a94 : ror byte ptr [rdi], 0x94 ; ret 0xd309
0x000000000006ffba : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000010fb93 : ror byte ptr [rdi], 0x95 ; ret
0x00000000000d9ae5 : ror byte ptr [rdi], 0x95 ; ret 0x8341
0x00000000000ba72f : ror byte ptr [rdi], 0x95 ; ret 0xa8e9
0x00000000000ba5da : ror byte ptr [rdi], 0x95 ; ret 0xd721
0x0000000000045c3d : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x00000000000ad2af : ror byte ptr [rdi], 0x95 ; ret 0xe883
0x00000000000ad59c : ror byte ptr [rdi], 0x95 ; ret 0xf983
0x00000000000d9bbb : ror byte ptr [rdi], 0x95 ; ret 0xfb83
0x000000000007371c : ror byte ptr [rdi], 0x9f ; ret 0x3841
0x00000000000cdbb5 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000ea9ad : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b34b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ac17c : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8b0a : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000033bce : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x33bb8 ; ret
0x00000000000e5df5 : ror byte ptr [rdi], 1 ; ret 0x3941
0x00000000000dc0cf : ror byte ptr [rdi], 1 ; ret 0xf039
0x000000000007f529 : ror byte ptr [rdi], 1 ; test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c18fb : ror byte ptr [rdi], 1 ; test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009731d : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000009f1ad : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000007550c : ror byte ptr [rdi], cl ; test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x00000000000bc04a : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3840
0x0000000000098967 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x00000000000b7880 : ror byte ptr [rdi], cl ; xchg eax, ebx ; ret 0xd108
0x0000000000010af1 : ror byte ptr [rdx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000195378 : ror ch, 0xfb ; call qword ptr [rax]
0x000000000019536c : ror cl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000099b2f : ror dword ptr [r9 + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x0000000000074143 : ror dword ptr [rax + 0x29], cl ; ret
0x00000000000c31dc : ror dword ptr [rax + 0x63], 1 ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000cd3b1 : ror dword ptr [rax + 0x63], cl ; ret
0x000000000014a745 : ror dword ptr [rax + 1], -8 ; ret
0x000000000014a609 : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x000000000014a85e : ror dword ptr [rax + 1], -8 ; sub rax, rdx ; ret
0x000000000013f2c7 : ror dword ptr [rax + 1], cl ; ret
0x000000000010a1e4 : ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000012ee76 : ror dword ptr [rax - 0x73], 5 ; ret 0x2936
0x00000000000de82e : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000dab7c : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000000000049da3 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x000000000009ed35 : ror dword ptr [rax - 0x77], 0xa ; ret
0x0000000000105ded : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000dcbc7 : ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x0000000000142d41 : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000052bd0 : ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000014dc32 : ror dword ptr [rax - 0x77], 1 ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000071bfd : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x71bf7 ; ret
0x000000000007af3d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7af37 ; ret
0x000000000003a178 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000032752 : ror dword ptr [rax - 0x7d], cl ; ret
0x000000000004b64f : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000c15c5 : ror dword ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000e56ef : ror dword ptr [rax], -0x17 ; ret 0xfffe
0x000000000012fd40 : ror dword ptr [rbp + 0x39], 1 ; ret 0x850f
0x000000000009b080 : ror dword ptr [rbx - 0x73], 0x14 ; cmovs ebp, dword ptr [rcx] ; ret
0x0000000000099b30 : ror dword ptr [rcx + 0x1ef8c1f8], -0x77 ; ret 0x8b48
0x00000000000dcbc4 : ror dword ptr [rcx + 0x21], 1 ; ror dword ptr [rax - 0x77], 1 ; ret 0x94d
0x000000000002c2c2 : ror dword ptr [rcx + 1], 1 ; ret 0x854d
0x0000000000094a95 : ror dword ptr [rcx + rcx*4 + 0xf], 1 ; pop rbx ; ret
0x00000000000e75e4 : ror dword ptr [rcx + rcx*4], cl ; push rsp ; ret
0x00000000000e925b : ror dword ptr [rcx - 0x75], 0x2c ; ret 0x8948
0x00000000000e9263 : ror dword ptr [rcx - 0x77], 0x1c ; ret 0x8348
0x00000000001708c7 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009a6f3 : ror dword ptr [rdi - 0x73], 0x44 ; movups xmm1, xmmword ptr [rdi] ; xchg eax, ebx ; ret
0x000000000009f025 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000003c3d8 : ror dword ptr [rdi], -0x6b ; ret 0xd348
0x00000000000e3f8d : ror dword ptr [rdi], -0x6c ; ret 0x3ae9
0x00000000000d85c7 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000016efe8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f6f4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f4c6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x00000000001705f0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f446 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000016f784 : ror dword ptr [rdi], -0x7b ; je 0x16f794 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f27b : ror dword ptr [rdi], -0x7b ; jno 0x16f290 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f343 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011ac97 : ror dword ptr [rdi], -0x7b ; ret 0xfffe
0x000000000016efc0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000f8aec : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000009ee17 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000826ae : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000123bf5 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x0000000000119363 : ror eax, 8 ; ret
0x0000000000071bfc : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x71bf8 ; ret
0x000000000007af3c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x7af38 ; ret
0x0000000000071385 : sahf ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x71325
0x00000000001b5965 : sahf ; add dword ptr [rax], eax ; pop rax ; fcomi st(6) ; jmp rsi
0x0000000000095a5f : sahf ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000196405 : sahf ; cld ; call qword ptr [rdx]
0x0000000000196585 : sahf ; cld ; call rax
0x0000000000196545 : sahf ; cld ; jmp rax
0x00000000000025e2 : sahf ; jl 0x2577 ; loop 0x25c2 ; ret 0x23cb
0x00000000000025e1 : sahf ; jl 0x2578 ; loop 0x25c3 ; ret 0x23cb
0x000000000014b58e : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000195710 : sahf ; pop rbx ; cld ; jmp qword ptr [rax]
0x00000000000e9183 : sahf ; ret
0x00000000000493f1 : sahf ; ret 0x148
0x00000000000c23b3 : sahf ; ret 0x1fbd
0x0000000000183565 : sahf ; ret 0x38ae
0x000000000003887c : sahf ; ret 0x8348
0x00000000000e918c : sahf ; ret 0x844
0x00000000000bbf8f : sahf ; ret 0xe8c1
0x000000000000245b : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x0000000000084122 : sahf ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004baae : sahf ; xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bf6ed : sal bh, 0xd0 ; add eax, 0x16e ; ret
0x00000000000d7201 : sal bh, 0xd0 ; and eax, 2 ; ret
0x0000000000136d1e : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000137369 : sal bh, 0xd8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000010ebc2 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b34e : sal bh, 0xd8 ; pop rbx ; ret
0x000000000006b31b : sal bh, 0xd8 ; ret
0x00000000000aacf2 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x000000000008b0c7 : sal bh, 1 ; ret 0x8000
0x000000000008af87 : sal bh, 1 ; ret 0xc000
0x000000000008ae47 : sal bh, 1 ; ret 0xe000
0x000000000008ad07 : sal bh, 1 ; ret 0xf000
0x000000000008abc7 : sal bh, 1 ; ret 0xf800
0x000000000008aa87 : sal bh, 1 ; ret 0xfc00
0x000000000008a947 : sal bh, 1 ; ret 0xfe00
0x000000000008a807 : sal bh, 1 ; ret 0xff00
0x000000000008a6c7 : sal bh, 1 ; ret 0xff80
0x000000000008a587 : sal bh, 1 ; ret 0xffc0
0x000000000008a447 : sal bh, 1 ; ret 0xffe0
0x000000000008a307 : sal bh, 1 ; ret 0xfff0
0x000000000008a1c7 : sal bh, 1 ; ret 0xfff8
0x000000000008a087 : sal bh, 1 ; ret 0xfffc
0x0000000000089f47 : sal bh, 1 ; ret 0xfffe
0x00000000000504c4 : sal bh, cl ; int1 ; add eax, r8d ; ret
0x0000000000123de7 : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000188e3d : sal bl, 1 ; jmp qword ptr [rcx]
0x0000000000045a28 : sal bl, 1 ; ret
0x00000000000896c3 : sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000ac71f : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000000cf261 : sal byte ptr [rax + rcx + 0xf], 0xb6 ; add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x00000000001369a5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000008eb18 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x0000000000053995 : sal byte ptr [rbp + 0xc], 0x31 ; div dh ; ret 0x4050
0x000000000013c441 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000008d830 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000006acc0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000005155e : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000114a77 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035307 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000012e164 : sal byte ptr [rbp + 9], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000115154 : sal byte ptr [rbp + 9], 0xf3 ; ret
0x000000000007a394 : sal byte ptr [rbp + 9], cl ; ret
0x000000000012c1e3 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000012de01 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000001340c4 : sal byte ptr [rbp + rax + 0x4c], 0x89 ; out dx, eax ; call rax
0x0000000000138279 : sal byte ptr [rbp + rax*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000014a740 : sal byte ptr [rbp + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x00000000001386b0 : sal byte ptr [rbp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000115061 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000007c845 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000009eae5 : sal byte ptr [rbp - 0x10], cl ; ret
0x0000000000048086 : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000011539e : sal byte ptr [rbp - 0x11], cl ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000895d0 : sal byte ptr [rbp - 0x13], 0xf3 ; ret
0x00000000000aa380 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000071c00 : sal byte ptr [rbp - 0x13], cl ; ret
0x000000000009edda : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000138ee6 : sal byte ptr [rbp - 0x19], 0x5b ; ret
0x000000000009f80b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000d15cf : sal byte ptr [rbp - 0x21], cl ; ret
0x000000000009eb83 : sal byte ptr [rbp - 0x26], 0xf3 ; ret
0x0000000000033bd3 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000012357b : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000ac622 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000008d80d : sal byte ptr [rbp - 0x42], 0x48 ; add esp, 8 ; ret
0x000000000008873e : sal byte ptr [rbp - 0x51], 1 ; xor eax, eax ; pop rbx ; ret
0x00000000000fb69e : sal byte ptr [rbp - 0x61], 0x89 ; out dx, eax ; call 0xf78b7
0x00000000001154f6 : sal byte ptr [rbp - 0x69], 0x48 ; mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x000000000008967a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000adacb : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000012b002 : sal byte ptr [rbx + 0x31], 0xc0 ; pop rbx ; ret
0x000000000012cc4c : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ff212 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000000fef33 : sal byte ptr [rbx + rbx + 0x48], 0x39 ; ret
0x000000000012d7f2 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x0000000000113cf4 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x00000000000ffa15 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000001382a2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x000000000006dcdf : sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000012de3e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000006f61a : sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000009ee0e : sal byte ptr [rcx + 0x44], 0x38 ; ret 0x4153
0x0000000000105d99 : sal byte ptr [rcx + rdi*2 + 0x48], 0x39 ; ret
0x000000000008b7fc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000114a66 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000fac85 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0x71 ; ret
0x00000000000f6aa1 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x00000000001035a2 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000123eee : sal byte ptr [rdi + rcx*2 + 0x41], 0x38 ; ret 0x5a74
0x0000000000188838 : sal byte ptr [rdi - 0xd], cl ; call rdx
0x000000000008b9cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000123443 : sal byte ptr [rdx + rbp*2 + 0x48], 0x39 ; ret 0x5576
0x00000000000a1293 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x0000000000089a63 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000009f1ab : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000001b0cd0 : sal byte ptr [rdx - 0xb], 1 ; jmp qword ptr [rcx]
0x000000000011498c : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x000000000013dd37 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x0000000000132dea : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x132e08 ; call rax
0x0000000000138f6a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x138f88 ; call rax
0x0000000000139683 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x1396a1 ; call rax
0x0000000000134fce : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135044 ; call rax
0x00000000001359ee : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x135a54 ; call rax
0x00000000000f0d16 : sal byte ptr [rsi + rbp + 0x48], 0x83 ; call 0xffffffffc298552a
0x0000000000112b51 : sal byte ptr [rsi + rdx*8 + 0x49], 0x8b ; and al, 0x38 ; jmp 0x112b27
0x000000000008b521 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000122950 : sal byte ptr [rsp + rcx - 0xa], cl ; ret 0xc602
0x0000000000108da2 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x0000000000195538 : sal ch, 1 ; sti ; jmp qword ptr [rax]
0x00000000001954f0 : sal dl, 0xfb ; call qword ptr [rax]
0x0000000000034e0a : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 0x28 ; ret
0x0000000000034acf : sal dword ptr [rbp + 0xe], 0x48 ; add esp, 0x28 ; ret
0x000000000004876f : sal dword ptr [rbp + rsi*2 + 0x4c], -0x77 ; ret 0xf749
0x000000000013be84 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000ac602 : sal dword ptr [rbx + rdx + 0x48], -0x7d ; ret 0x8b04
0x0000000000189ec0 : sal dword ptr [rbx - 0xb], cl ; call rbx
0x000000000013bd6b : sal dword ptr [rcx], -0x40 ; cmp rdx, rcx ; je 0x13bd89 ; ret
0x000000000009ed47 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x0000000000123de5 : sal dword ptr [rcx], -0x40 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000007ba08 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000001951cc : sal dword ptr [rdi - 0x27e70003], -5 ; jmp rax
0x00000000001951a8 : sal dword ptr [rdi - 0x483e0003], -3 ; call qword ptr [rax]
0x0000000000195188 : sal dword ptr [rdi - 0x483e0003], -3 ; jmp qword ptr [rax]
0x00000000001950d8 : sal dword ptr [rdi - 0x483e0003], -3 ; jmp rcx
0x000000000009ebd9 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0x9ebd8 ; ret
0x0000000000188e35 : sal ebx, 1 ; call rdi
0x000000000014dc35 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000188e99 : sal ebx, 1 ; push qword ptr [rax - 0x24] ; call rax
0x0000000000188e01 : sal ebx, cl ; jmp qword ptr [rcx]
0x00000000001ae5d1 : sal esp, 1 ; jmp rcx
0x00000000001a91b5 : salc ; add byte ptr [rax], al ; test al, 0x1f ; int1 ; call qword ptr [rsi]
0x0000000000170906 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000019a49d : salc ; add dword ptr [rax], eax ; test byte ptr [rax + rdi*8], ah ; jmp rsp
0x0000000000132d8b : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000150f76 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000174101 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001132e9 : salc ; call rax
0x00000000000aa5ea : salc ; clc ; ret
0x000000000019b711 : salc ; cli ; call rsp
0x0000000000110bc0 : salc ; cmovne eax, ecx ; ret
0x0000000000123eff : salc ; ja 0x123eec ; mov eax, 0xffffffff ; ret
0x00000000000038ed : salc ; jb 0x396f ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000004821e : salc ; jne 0x48215 ; xor eax, eax ; ret
0x0000000000073020 : salc ; mov eax, 0xffffffff ; ja 0x73039 ; ret
0x0000000000001bf0 : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000112b53 : salc ; mov rax, qword ptr [r12 + 0x38] ; jmp 0x112b25
0x00000000000ac739 : salc ; mov rax, rdi ; ret
0x00000000000e1261 : salc ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rdx, rcx ; jmp rdx
0x00000000000c52d1 : salc ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000022e4 : salc ; ret
0x00000000000025e6 : salc ; ret 0x23cb
0x00000000001952f1 : salc ; sti ; jmp qword ptr [rax]
0x00000000000368ae : salc ; xlatb ; cmp byte ptr [rax], al ; ret
0x0000000000061b8c : sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x000000000005ebe8 : sar bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000120f30 : sar bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000195349 : sar bl, cl ; jmp rax
0x0000000000121d93 : sar byte ptr [rax + 0x5e], 0x89 ; ret
0x00000000001219c1 : sar byte ptr [rax + 0x64], 0x89 ; ret
0x0000000000140c62 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002a84b : sar byte ptr [rax + 1], 0xf ; ret 0x4389
0x00000000000cdbcf : sar byte ptr [rax + 1], cl ; ret
0x0000000000085817 : sar byte ptr [rax + 6], 0xf3 ; ret
0x0000000000075adc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000026ec1 : sar byte ptr [rax + rax*4], 0xf ; xchg eax, esp ; ret 0x8348
0x00000000001073a3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x00000000001a3820 : sar byte ptr [rdi], 1 ; in eax, dx ; jmp qword ptr [rax]
0x00000000000d72cd : sar byte ptr [rdx], 0xe ; je 0xd726c ; pop rbx ; ret
0x0000000000002b85 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x0000000000103acc : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x00000000000cd1fc : sar byte ptr [rsi + 9], 1 ; ret
0x0000000000183eff : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000196060 : sar byte ptr [rsp + rdi*8 - 1], 1 ; push rax ; jl 0x19606a ; call rax
0x0000000000187f4c : sar ch, 0xf1 ; jmp rax
0x0000000000195544 : sar cl, 0xfb ; call qword ptr [rax]
0x000000000019ae69 : sar cl, 1 ; call rsp
0x0000000000187f68 : sar dh, 1 ; int1 ; inc dword ptr [rax] ; push rcx ; jmp qword ptr [rax]
0x00000000000d97d5 : sar dword ptr [rax + 1], 0x4c ; mov edx, eax ; jmp 0xd97f2
0x000000000009fae3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x9faee ; ret
0x00000000000a0236 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0xa0241 ; ret
0x00000000000a0983 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0xa098e ; ret
0x00000000000fea4b : sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000e7df6 : sar dword ptr [rcx], 1 ; ret
0x000000000001f969 : sar dword ptr [rcx], 1 ; ret 0xffb8
0x00000000000d31e7 : sar dword ptr [rcx], cl ; ret 0xef7c
0x0000000000041925 : sar dword ptr [rdx + 1], -0x77 ; ret
0x00000000000fe9ef : sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x0000000000034f03 : sar eax, 0x10 ; ret
0x0000000000034b69 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000140624 : sar eax, 0x1f ; ret
0x0000000000034ebb : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003478d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003af5 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000fe5b2 : sar eax, 1 ; dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000072d6c : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000075660 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000734f9 : sar eax, 2 ; ret
0x000000000011905d : sar eax, 6 ; ret
0x0000000000195355 : sar ebx, -1 ; ret
0x0000000000195315 : sar ebx, -1 ; rol dl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000195345 : sar ebx, 1 ; call qword ptr [rax - 0x1f00042e]
0x000000000019534d : sar ebx, cl ; jmp qword ptr [rax]
0x0000000000183c63 : sar ecx, 1 ; jnp 0x183c24 ; ret
0x000000000003a634 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003a647 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x000000000008ece7 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000072d6b : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000003478c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x00000000000734f8 : sar rax, 2 ; ret
0x000000000011905c : sar rax, 6 ; ret
0x000000000008ece6 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000f68d9 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x00000000001132ee : sbb al, 0x20 ; je 0x113356 ; xor eax, eax ; pop rbx ; ret
0x00000000001132ed : sbb al, 0x20 ; je 0x113357 ; xor eax, eax ; pop rbx ; ret
0x0000000000136ccd : sbb al, 0x41 ; call qword ptr [rdx]
0x0000000000002f9c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x000000000010f738 : sbb al, 0x45 ; cmp byte ptr [rax], cl ; je 0x10f764 ; mov rdx, r8 ; jmp 0x10f754
0x00000000001b0a14 : sbb al, 0x4f ; add dword ptr [rax], eax ; sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001b0d14 : sbb al, 0x52 ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x00000000001b1e14 : sbb al, 0x63 ; add dword ptr [rax], eax ; pop rax ; mov ch, 0xf5 ; call rdi
0x0000000000189be8 : sbb al, 0x66 ; cmc ; inc dword ptr [rsi] ; cmc ; jmp rsp
0x00000000001b2b14 : sbb al, 0x70 ; add dword ptr [rax], eax ; call 0x271b243c
0x00000000000ffd13 : sbb al, 0x83 ; ret
0x000000000006999b : sbb al, 0x83 ; ret 0x8308
0x0000000000068ac8 : sbb al, 0x89 ; ret
0x00000000001b6614 : sbb al, 0xab ; add dword ptr [rax], eax ; call 0xffffffffd21b5d53
0x00000000000d59b3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001a7d14 : sbb al, 0xc2 ; add byte ptr [rax], al ; fsubr dword ptr [rcx] ; cli ; jmp qword ptr [rdi]
0x00000000000dec45 : sbb al, 0xe9 ; adc eax, 0x1fffffe ; ret 0x8b49
0x00000000001af829 : sbb al, 0xf5 ; call qword ptr [rdx]
0x00000000001ab314 : sbb al, 0xf8 ; add byte ptr [rax], al ; call 0x111aa559
0x00000000001956f5 : sbb al, 0xfc ; jmp rax
0x00000000001ad7cd : sbb al, 1 ; add al, dl ; stc ; call qword ptr [rax]
0x00000000001ad7ed : sbb al, 1 ; add byte ptr [rax - 0x79], dh ; hlt ; call qword ptr [rax]
0x00000000001951d0 : sbb al, bl ; sti ; jmp rax
0x000000000019d50d : sbb al, byte ptr [rax] ; add al, al ; or ebp, ecx ; jmp qword ptr [rax]
0x000000000019d555 : sbb al, byte ptr [rax] ; add al, bl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019d525 : sbb al, byte ptr [rax] ; add al, cl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000019d53d : sbb al, byte ptr [rax] ; add al, dl ; or ebp, ecx ; call qword ptr [rcx]
0x00000000001a2a85 : sbb al, byte ptr [rax] ; add byte ptr [rax + 0xd], cl ; in eax, dx ; jmp qword ptr [rax]
0x0000000000123cc0 : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x000000000004b9a2 : sbb al, byte ptr [rbx - 0x4a743] ; call qword ptr [rax]
0x00000000000ac72c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000005aa9a : sbb al, byte ptr [rcx - 0x7d] ; ret
0x0000000000076ca7 : sbb al, ch ; ret
0x000000000014365c : sbb al, ch ; ret 0xffed
0x00000000001956b1 : sbb bh, ah ; jmp qword ptr [rax]
0x00000000000d596a : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001aa2b8 : sbb bh, ch ; int1 ; jmp rcx
0x00000000001a6b79 : sbb bh, dl ; call qword ptr [rax]
0x0000000000194e41 : sbb bl, bh ; jmp rax
0x0000000000194e3d : sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x00000000001829e5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000033e51 : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000076b8e : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000014356f : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000012ee72 : sbb byte ptr [r8 + 1], cl ; ror dword ptr [rax - 0x73], 5 ; ret 0x2936
0x000000000013bde1 : sbb byte ptr [r8 + 1], r15b ; ret
0x0000000000113257 : sbb byte ptr [r8 + 1], r9b ; ret 0x8948
0x00000000000c9b92 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000013c186 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000064133 : sbb byte ptr [r8], al ; add dh, dh ; ret
0x00000000000a9e64 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e86 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000741da : sbb byte ptr [r9 - 0x77], r9b ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x0000000000076b8f : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x000000000007eed3 : sbb byte ptr [rax + 0x39], cl ; ret
0x00000000000d6366 : sbb byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000143570 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000007d397 : sbb byte ptr [rax + 0x5bd88948], dl ; pop rbp ; pop r12 ; ret
0x0000000000117883 : sbb byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; jmp 0x76d3b1db
0x000000000013bde2 : sbb byte ptr [rax + 1], bh ; ret
0x000000000013d7ed : sbb byte ptr [rax + 1], cl ; ret
0x0000000000113258 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x000000000012ee73 : sbb byte ptr [rax + 1], cl ; ror dword ptr [rax - 0x73], 5 ; ret 0x2936
0x00000000000c92b2 : sbb byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000024368 : sbb byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000024d03 : sbb byte ptr [rax - 0x75], cl ; and al, 0x30 ; call rax
0x00000000000dd5ca : sbb byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000028024 : sbb byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x000000000007b161 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000f4367 : sbb byte ptr [rax - 0x77], cl ; ret
0x00000000000f000a : sbb byte ptr [rax - 0x77], cl ; ret 0x33eb
0x00000000000891d6 : sbb byte ptr [rax - 0x77], cl ; ret 0x348
0x0000000000073f31 : sbb byte ptr [rax - 0x77], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x00000000000b22ba : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000078b09 : sbb byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000c9b93 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000f9096 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000009490e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000084387 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000009490d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000001b0ad8 : sbb byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000cae69 : sbb byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000007d87f : sbb byte ptr [rax - 9], cl ; fisttp dword ptr [rax + 0x21] ; ret
0x00000000001bc687 : sbb byte ptr [rax], al ; add al, ah ; or ch, byte ptr [rsi] ; ret 0xb
0x00000000001bc6df : sbb byte ptr [rax], al ; add al, ah ; or dword ptr [rsi], ebp ; ret 0xa
0x000000000007b9af : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000013c187 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0xd], bl ; ret
0x0000000000064134 : sbb byte ptr [rax], al ; add dh, dh ; ret
0x00000000000773e6 : sbb byte ptr [rax], al ; setne al ; ret
0x000000000000245c : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a9e65 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e87 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ec5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000013e918 : sbb byte ptr [rbp + 0x39], cl ; ret
0x000000000012c7ba : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000137e21 : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x3a ; call qword ptr [rax]
0x0000000000021859 : sbb byte ptr [rbp - 0x77], cl ; int1 ; call rbx
0x00000000000f6e42 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000076b04 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009f44d : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000076ba7 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000012cac4 : sbb byte ptr [rbx + 0x5d], bl ; pop r13 ; pop r14 ; ret
0x000000000003b177 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000194ed0 : sbb byte ptr [rbx + rdi*8 - 1], 0xd0 ; pop rbp ; sti ; jmp qword ptr [rax]
0x000000000007c887 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001b0d18 : sbb byte ptr [rbx - 0xb], dh ; call qword ptr [rsi]
0x000000000009eb5f : sbb byte ptr [rcx + 0x39], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x0000000000072bdb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000013cf8c : sbb byte ptr [rcx + 0x63], cl ; ret
0x00000000000ec0de : sbb byte ptr [rcx + 0xf], al ; mov dh, 0x75 ; add dh, dh ; ret 0x4002
0x0000000000081a66 : sbb byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x10 ; call rdi
0x00000000000ceef6 : sbb byte ptr [rcx + rcx*4 + 0x78], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000000ad3b0 : sbb byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x00000000000ad668 : sbb byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000038382 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call r15
0x00000000000750c3 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000ad918 : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; mov r9, r15 ; call rbx
0x00000000000779c5 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082f13 : sbb byte ptr [rcx + rcx*4 - 0x40], cl ; pop rbx ; ret
0x00000000001142d3 : sbb byte ptr [rcx - 0x76b37fab], cl ; call rax
0x000000000009e8fe : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x00000000000744d3 : sbb byte ptr [rcx - 0x77], cl ; ret 0x8b49
0x00000000000741db : sbb byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x00000000000b9b5c : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00000000000ac721 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000001956ac : sbb byte ptr [rcx], 0xfc ; call rax
0x000000000019849d : sbb byte ptr [rcx], al ; add ah, ah ; int1 ; call rsp
0x00000000000f0004 : sbb byte ptr [rcx], al ; mov rax, qword ptr [rsp + 0x18] ; mov rdx, rax ; jmp 0xf004c
0x00000000000fcb91 : sbb byte ptr [rcx], al ; ret 0x8d48
0x00000000000d4f32 : sbb byte ptr [rcx], bh ; ret 0x850f
0x0000000000075117 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000001178d8 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; ret
0x00000000001af998 : sbb byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000006b318 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000013ab48 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000013c31e : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000033e52 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000012e318 : sbb byte ptr [rdi], cl ; test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000002057 : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000001a4408 : sbb byte ptr [rsi - 0x13], ch ; jmp qword ptr [rcx]
0x0000000000109992 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x0000000000109991 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000004b78c : sbb byte ptr [rsi], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000140e8d : sbb ch, byte ptr [rax] ; add bl, dh ; ret
0x0000000000116852 : sbb ch, byte ptr [rcx - 0xd] ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001a2c51 : sbb ch, ch ; call rdx
0x00000000000d4f2f : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001b2a89 : sbb cl, bh ; jmp qword ptr [rsi]
0x00000000000f658e : sbb cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000001293e3 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x00000000001108bd : sbb cl, byte ptr [rcx - 0x75] ; and byte ptr [r8 + 0x39], r9b ; ret
0x00000000000a68bf : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x000000000014580d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014797d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001453fd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000144f09 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145719 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b92a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b14a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014b53a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad5a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001484dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014518d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014749d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000001454cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000001457e9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aef9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001458b9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147ffd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001477dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146fbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000014819d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014566d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144e5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000014525d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014b3ea : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac0a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd1a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014573d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000144f2d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001472fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144fcf : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014532d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000147433 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148133 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147c53 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b2eb : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014bc1b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014559d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000148473 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147773 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000147293 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147f93 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b43b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014ac5b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ff3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000102a8a : sbb cl, dh ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x102a9a ; call rbx
0x00000000001100a3 : sbb dh, dh ; ret 0x7508
0x000000000018905c : sbb dl, ch ; jmp qword ptr [rdi]
0x0000000000148c38 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000d5943 : sbb dword ptr [rax + 1], edi ; ret
0x000000000002e514 : sbb dword ptr [rax - 0x77], ecx ; ret
0x0000000000105da6 : sbb dword ptr [rax - 0x77], ecx ; ret 0xf66
0x0000000000140374 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000019d4ad : sbb dword ptr [rax], eax ; add al, al ; or ebp, ecx ; call qword ptr [rbx]
0x000000000019d4c5 : sbb dword ptr [rax], eax ; add al, cl ; or ebp, ecx ; call qword ptr [rbx]
0x0000000000148bc1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148c39 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000cd9d5 : sbb dword ptr [rbp + rsi*2 - 0x7e], edx ; mov eax, 0x7d00 ; ret
0x00000000001892ec : sbb dword ptr [rbp - 0xc], edx ; jmp qword ptr [rbx]
0x00000000000aad2e : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x0000000000116233 : sbb dword ptr [rbx + rax], edi ; ret
0x0000000000189224 : sbb dword ptr [rbx - 0xc], edx ; jmp qword ptr [rbx]
0x000000000018529d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000123eba : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000a7fde : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000001cb7 : sbb dword ptr [rdx + 0x55], esp ; je 0x1ce9 ; ret
0x000000000016cbcc : sbb eax, -1 ; ret
0x0000000000115b24 : sbb eax, 0 ; leave ; ret
0x0000000000047062 : sbb eax, 0x147694 ; mov rax, rbx ; pop rbx ; ret
0x00000000001956b9 : sbb eax, 0x1ec0fffc ; cld ; call qword ptr [rax]
0x00000000001742e0 : sbb eax, 0x25245b ; jne 0x1742d0 ; pop rbx ; ret
0x0000000000109521 : sbb eax, 0x2bad1a ; pop rbx ; ret
0x0000000000194e8d : sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000101a1f : sbb eax, 0x48fff53f ; mov eax, ebx ; pop rbx ; ret
0x00000000000a6949 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000001132e2 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000a809d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x00000000001ad80d : sbb eax, 0x66a00001 ; stc ; call qword ptr [rax]
0x0000000000039955 : sbb eax, 0x854d0005 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000105e2a : sbb eax, 0x888cc ; mov rax, rbx ; pop rbx ; ret
0x0000000000110ba5 : sbb eax, 0x89000001 ; ret 0x8944
0x0000000000127bdb : sbb eax, 0xf2cfb80 ; xchg eax, ebp ; ret 0xfb80
0x000000000012782a : sbb eax, dword ptr [rax - 0x6af0dc07] ; ret 0xf980
0x00000000001489e1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148a59 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000133020 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000d71b6 : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x000000000004846a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000d7200 : sbb eax, eax ; not eax ; and eax, 2 ; ret
0x0000000000123498 : sbb eax, eax ; ret
0x00000000001722d5 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000000d5cf3 : sbb ebp, ecx ; ret
0x00000000000bbaa7 : sbb ebx, 0x89000001 ; ret
0x0000000000181edd : sbb ebx, ebp ; jmp rsp
0x0000000000181ed9 : sbb ebx, ebp ; ljmp ptr [rbp + 0x19] ; jmp 0x181ee5
0x0000000000194e45 : sbb ebx, edi ; call rax
0x00000000000fef35 : sbb ecx, dword ptr [rax + 0x39] ; ret
0x0000000000054d50 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000012cc51 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000023acb : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000125914 : sbb edi, dword ptr [rcx] ; ret
0x0000000000199c09 : sbb edi, esi ; call rsp
0x00000000001956f1 : sbb edi, esp ; call qword ptr [rax - 0x1f0003e4]
0x0000000000041c3c : sbb edx, dword ptr [rip + 0x358d4800] ; ret
0x000000000019b039 : sbb edx, edi ; jmp rsp
0x00000000001aad89 : sbb edx, esi ; jmp qword ptr [rcx]
0x0000000000174889 : sbb esi, dword ptr [rax + 0x1f0fffea] ; add bl, dh ; ret
0x00000000000025df : sbb esi, dword ptr [rdx] ; sahf ; jl 0x257a ; loop 0x25c5 ; ret 0x23cb
0x000000000011589e : sbb esi, ebx ; ret
0x00000000001a90a9 : sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000000dc5b4 : sbb esi, esi ; ret
0x00000000001956ad : sbb esp, edi ; call rax
0x000000000019d53c : sbb r8b, byte ptr [rax] ; add al, dl ; or ebp, ecx ; call qword ptr [rcx]
0x000000000016cbcb : sbb rax, -1 ; ret
0x0000000000146962 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000d4d27 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000008e3dd : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000014b97e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000001110d5 : scasb al, byte ptr [rdi] ; loope 0x1110e5 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000ad5c6 : scasb al, byte ptr [rdi] ; push -0x38b6ffcf ; ret 0xffff
0x0000000000002f9a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000014ba7d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001a6ab5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; js 0x1a6abf ; stc ; call qword ptr [rax]
0x00000000001a6ae5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; pop rax ; cli ; call qword ptr [rax]
0x000000000007b5d9 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], 0 ; add bl, ch ; fucomp st(0) ; ret
0x000000000008de7d : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000188cdd : scasd eax, dword ptr [rdi] ; call rax
0x00000000001976e9 : scasd eax, dword ptr [rdi] ; in eax, dx ; call rsp
0x00000000001048d6 : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rax - 0x75] ; jge 0x1048e4 ; call rbx
0x00000000001048c8 : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x00000000001048ba : scasd eax, dword ptr [rdi] ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x1048c8 ; call rbx
0x00000000001176d3 : scasd eax, dword ptr [rdi] ; jmp 0x76d3b025
0x0000000000117886 : scasd eax, dword ptr [rdi] ; jmp 0x76d3b1d8
0x0000000000188add : scasd eax, dword ptr [rdi] ; jmp qword ptr [rcx]
0x0000000000188ad9 : scasd eax, dword ptr [rdi] ; lcall ptr [rbp - 0x51] ; jmp qword ptr [rcx]
0x000000000011934f : scasd eax, dword ptr [rdi] ; mov eax, edi ; bswap eax ; ret
0x000000000009d4ee : scasd eax, dword ptr [rdi] ; or al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000000000037300 : scasd eax, dword ptr [rdi] ; ret
0x000000000007407c : scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000aa9fe : scasd eax, dword ptr [rdi] ; ret 0x74e9
0x00000000000872a8 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000aa9e9 : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000000000037290 : scasd eax, dword ptr [rdi] ; ret 0xc748
0x0000000000033e54 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000001096bd : scasd eax, dword ptr [rdi] ; ret 0xf48
0x000000000010a1e3 : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000138e84 : scasd eax, dword ptr [rdi] ; sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138e99 ; ret
0x0000000000002bcf : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6efd1 ; ret
0x00000000000025ac : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000088740 : scasd eax, dword ptr [rdi] ; xor eax, eax ; pop rbx ; ret
0x00000000001099c5 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000f8b08 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000114a6c : setae al ; ret
0x000000000003041d : setae byte ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c75b8 : setbe al ; movzx eax, al ; pop rbx ; ret
0x000000000010a6a0 : setbe al ; ret
0x000000000012afb8 : sete al ; add rsp, 8 ; ret
0x000000000013aa54 : sete al ; movzx eax, al ; ret
0x000000000002df35 : sete al ; ret
0x00000000000d5b69 : setg dl ; jmp 0xd5af2
0x00000000000ac17a : setl al ; movzx eax, al ; neg eax ; ret
0x0000000000136e1c : setne al ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000ea9ab : setne al ; movzx eax, al ; cmova eax, edx ; ret
0x000000000006b349 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000ea98d : setne al ; movzx eax, al ; neg eax ; ret
0x0000000000102534 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000035f26 : setne al ; movzx eax, al ; ret
0x000000000007305c : setne al ; neg eax ; ret
0x00000000000773e8 : setne al ; ret
0x00000000000aebda : setne dl ; jmp 0xaebea
0x00000000000b14fb : setne dl ; jmp 0xb150a
0x00000000000b3cb2 : setne dl ; jmp 0xb3cca
0x0000000000096005 : sgdt ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ee1a2 : sgdt ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026553 : sgdt ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x00000000001a7c40 : shl bl, 0xef ; call rsp
0x0000000000195704 : shl byte ptr [rcx], 1 ; cld ; jmp qword ptr [rax]
0x00000000000aa29f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000034853 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x00000000001708c3 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000089ca5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000016f97b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016f992 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000008d566 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d577 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000009efe8 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000016f871 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001ad7d0 : shl byte ptr [rsi - 7], 1 ; call qword ptr [rax]
0x000000000017e1f0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000194fa8 : shl dword ptr [rbp + rdi*8 - 0x25aae01], 1 ; call rcx
0x0000000000194fb0 : shl dword ptr [rbp - 0x59ae0003], 1 ; std ; jmp rcx
0x0000000000194fa0 : shl dword ptr [rbx - 0x5bae0003], 1 ; std ; call rcx
0x0000000000194f98 : shl dword ptr [rcx - 0x5d2e0003], 1 ; std ; call rcx
0x0000000000183de8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000016f8f6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aa0fb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008d562 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000016f9ad : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000016f996 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016f97f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000016e43b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016f911 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008e93c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000009f228 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x000000000016f7d1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000045a24 : shl eax, 0x1e ; or eax, edx ; ret
0x000000000012411a : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000036083 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000048a2c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000489b7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048986 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000094a91 : shl ecx, cl ; or r9, r10 ; mov qword ptr [rdi], r9 ; pop rbx ; ret
0x00000000000208f0 : shl edi, 4 ; add rdi, rbp ; call rax
0x000000000003a688 : shl edx, 0x20 ; mov rax, rcx ; or rax, rdx ; ret
0x00000000000e4fdb : shl edx, 2 ; xor esi, esi ; call 0x8f249
0x00000000000e3533 : shl esi, 2 ; call 0x1f7f5
0x0000000000123fab : shl esi, 4 ; lea eax, dword ptr [rsi + 8] ; ret
0x000000000012414c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000048a2b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000489b6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000048985 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000036082 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000208ef : shl rdi, 4 ; add rdi, rbp ; call rax
0x00000000000e3532 : shl rsi, 2 ; call 0x1f7f6
0x000000000012414b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000187df8 : shr ah, 0xf1 ; call rax
0x0000000000187dfc : shr ah, 1 ; int1 ; jmp rax
0x00000000001126c5 : shr al, 0x65 ; ret
0x00000000000fac89 : shr al, 0x71 ; ret
0x0000000000112673 : shr al, 0xb7 ; ret
0x0000000000187d64 : shr al, 0xf1 ; jmp rax
0x00000000001149e6 : shr ax, 0xe ; and eax, 1 ; ret
0x0000000000143dd1 : shr bl, 0xe5 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000c84bf : shr bl, cl ; ret
0x0000000000047a2e : shr bl, cl ; stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x000000000018b058 : shr byte ptr [rax], 0xfa ; push rax ; sub dl, bh ; jmp rax
0x00000000000bd5ee : shr byte ptr [rbx + 7], 0 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000c222f : shr byte ptr [rcx - 0x40], 1 ; nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x0000000000196338 : shr byte ptr [rcx - 0x56af0004], 0xfc ; jmp rax
0x000000000009f80f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b9f4f : shr byte ptr [rcx], 1 ; ret
0x0000000000194e6c : shr byte ptr [rcx], 1 ; sti ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000029ae8 : shr byte ptr [rcx], cl ; ret
0x000000000008eceb : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000f8b0d : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000001b0a90 : shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x0000000000187ba8 : shr byte ptr [rsi - 0xf], 0xff ; shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x0000000000187bac : shr byte ptr [rsi - 0xf], 1 ; jmp rax
0x0000000000187e2c : shr ch, 0xf1 ; jmp rax
0x0000000000186c5d : shr ch, cl ; call rax
0x00000000000b63b8 : shr cl, 0xd ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000187d84 : shr cl, 0xf1 ; jmp rax
0x0000000000044ac0 : shr cl, cl ; ret
0x0000000000187e6c : shr dh, 0xf1 ; call rax
0x0000000000187e4c : shr dh, 0xf1 ; jmp rax
0x0000000000187e70 : shr dh, 1 ; int1 ; jmp rax
0x00000000001954e4 : shr dh, 1 ; sti ; jmp qword ptr [rax]
0x0000000000187da4 : shr dl, 0xf1 ; jmp rax
0x0000000000115533 : shr dword ptr [rbx], 1 ; sub eax, dword ptr [rax] ; test rax, rax ; je 0x115549 ; ret
0x0000000000194fcc : shr dword ptr [rcx - 0x55b10003], 1 ; std ; jmp rsi
0x00000000000c7080 : shr dword ptr [rcx], 1 ; ret
0x00000000001193f8 : shr eax, 0x18 ; ret
0x0000000000034b91 : shr eax, 0x1f ; ret
0x000000000017083c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x17084f ; xor eax, eax ; ret
0x00000000000347c0 : shr eax, 0x3f ; ret
0x0000000000107528 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000aac1a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000001149e7 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000d72b5 : shr eax, 3 ; and eax, 1 ; pop rbx ; ret
0x0000000000077f02 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000124120 : shr eax, 4 ; ret
0x0000000000077f12 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000aabf9 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000035f3f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000010a43b : shr eax, cl ; and eax, 1 ; ret
0x0000000000186f9d : shr ebp, cl ; jmp rcx
0x0000000000142fa1 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000035f97 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000048b3c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048ac1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a90 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000ca7b6 : shr ecx, cl ; ret
0x0000000000072e73 : shr edx, 2 ; sub eax, edx ; ret
0x000000000013c6ba : shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000000759b0 : shr edx, 4 ; and edx, 1 ; mov eax, edx ; ret
0x0000000000075aa0 : shr edx, 5 ; and edx, 1 ; mov eax, edx ; ret
0x000000000002da79 : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2da90 ; ret
0x0000000000048b3b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000048ac0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000048a8f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000347bf : shr rax, 0x3f ; ret
0x0000000000107527 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x000000000012411f : shr rax, 4 ; ret
0x0000000000072e72 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000013c6b9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x000000000009ea91 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009ea01 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009970e : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000009bd2c : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000107513 : sldt word ptr [rax] ; or eax, edi ; ret
0x000000000017d3c9 : sldt word ptr [rax] ; ret
0x00000000000e0fc1 : stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f65
0x000000000011e2a2 : stc ; adc eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000012e31b : stc ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000001ab42d : stc ; add byte ptr [rax], al ; nop ; call rbx
0x0000000000123bf1 : stc ; add dword ptr [rbx - 0x77], edx ; ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xfb83
0x000000000012782c : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000001a6aba : stc ; call qword ptr [rax]
0x000000000019ada2 : stc ; call qword ptr [rdi + rbx + 2]
0x00000000000ad91e : stc ; call rbx
0x000000000019a9e2 : stc ; call rsp
0x000000000010de11 : stc ; cmp cl, byte ptr [rdi] ; ret 0xc084
0x000000000012abc2 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x00000000000f907c : stc ; dec dword ptr [rax + 0x39] ; ret
0x0000000000088376 : stc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f34f2 : stc ; dec dword ptr [rax - 0x77] ; ret 0x3145
0x00000000000f4b33 : stc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x00000000000896bf : stc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbp + 0x48], 0x89 ; ret 0x8948
0x00000000000f8ee2 : stc ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000f95c2 : stc ; dec dword ptr [rcx - 0x73] ; push rsi ; add dword ptr [rax + 0x39], ecx ; ret 0xc72
0x000000000019ae22 : stc ; inc dword ptr [rdx - 0x367bfffe] ; stc ; call rsp
0x000000000019ac8a : stc ; inc dword ptr [rsi + rdx - 0x78cbfffe] ; stc ; call rsp
0x000000000000366f : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001aa549 : stc ; int1 ; call rsi
0x000000000014aa32 : stc ; je 0x14a9fe ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014c0c2 : stc ; je 0x14c08e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001b2a8a : stc ; jmp qword ptr [rsi]
0x000000000003329d : stc ; jmp rcx
0x000000000019aa02 : stc ; jmp rsp
0x0000000000183c64 : stc ; jnp 0x183c23 ; ret
0x000000000019ae62 : stc ; lcall ptr [rsp - 0x2f0bfffe] ; stc ; call rsp
0x000000000019aca2 : stc ; ljmp ptr [rdi + rdx + 2] ; add ah, al ; mov bh, cl ; call rsp
0x00000000001047ab : stc ; mov al, 0xf1 ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000153758 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000127ab2 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009e97b : stc ; mov rax, rdi ; ret
0x000000000019a9fa : stc ; push qword ptr [rax + rax + 0x3be40002] ; stc ; jmp rsp
0x0000000000048b7d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000019aaca : stc ; push qword ptr [rdx + rcx + 0x52140002] ; stc ; call rsp
0x00000000000aa5e9 : stc ; salc ; clc ; ret
0x000000000010a43a : stc ; shr eax, cl ; and eax, 1 ; ret
0x0000000000195545 : stc ; sti ; call qword ptr [rax]
0x000000000009ffe4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000008b3f5 : stc ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x0000000000046075 : std ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x00000000000cd98e : std ; add byte ptr [rax], al ; jne 0xcd961 ; ret
0x00000000000e7e22 : std ; add byte ptr [rcx], bh ; ret
0x0000000000195076 : std ; call qword ptr [rax + 0x20fffda6]
0x0000000000194f8a : std ; call qword ptr [rax]
0x0000000000194fc2 : std ; call qword ptr [rcx + 0x31fffda8]
0x000000000019cf8a : std ; call qword ptr [rcx]
0x0000000000194f72 : std ; call qword ptr [rdx]
0x0000000000195006 : std ; call qword ptr [rsi]
0x0000000000194f96 : std ; call rcx
0x000000000019b96a : std ; call rsp
0x00000000000f6401 : std ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000012e7f9 : std ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x0000000000076a47 : std ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000194fce : std ; dec dword ptr [rsi - 0x56] ; std ; jmp rsi
0x000000000019b962 : std ; dec esp ; adc eax, 0x77340001 ; std ; call rsp
0x000000000003505d : std ; fstp st(1) ; ret
0x00000000001af369 : std ; hlt ; jmp qword ptr [rcx]
0x000000000007676f : std ; imul edi, ebp, 0x89c085ff ; ret
0x0000000000195082 : std ; inc dword ptr [rax - 0x58] ; std ; jmp rax
0x0000000000195072 : std ; inc dword ptr [rax] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; call qword ptr [rax + 0x20fffda6]
0x000000000019b99a : std ; inc dword ptr [rdi + rdx] ; add dword ptr [rax], eax ; hlt ; ret 0xfffd
0x00000000001951aa : std ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x00000000001951a6 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; call qword ptr [rax]
0x0000000000195186 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001950d6 : std ; inc ecx ; mov bh, 0xfd ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x000000000019518a : std ; inc ecx ; mov bh, 0xfd ; jmp qword ptr [rax]
0x00000000001950da : std ; inc ecx ; mov bh, 0xfd ; jmp rcx
0x00000000001951ca : std ; inc ecx ; mov bh, 0xfd ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187f49 : std ; int1 ; inc eax ; std ; int1 ; jmp rax
0x0000000000187f35 : std ; int1 ; jmp qword ptr [rax]
0x0000000000187f4d : std ; int1 ; jmp rax
0x0000000000194f86 : std ; jmp qword ptr [rax]
0x000000000019cc92 : std ; jmp qword ptr [rdi]
0x000000000019c1c2 : std ; jmp qword ptr [rdx]
0x0000000000195086 : std ; jmp rax
0x0000000000194fb6 : std ; jmp rcx
0x0000000000194f76 : std ; jmp rdx
0x0000000000194fd2 : std ; jmp rsi
0x00000000001a4d42 : std ; jmp rsp
0x00000000001951ce : std ; lcall ptr [rax] ; fdivr st(3) ; jmp rax
0x0000000000187c9a : std ; lcall ptr [rax] ; ret 0xfffd
0x0000000000152f7b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000019507e : std ; push qword ptr [rax + 0x40fffda7] ; test al, 0xfd ; jmp rax
0x0000000000195002 : std ; push qword ptr [rsi - 0x58] ; std ; call qword ptr [rsi]
0x00000000000aebd9 : std ; setne dl ; jmp 0xaebeb
0x00000000000b14fa : std ; setne dl ; jmp 0xb150b
0x00000000000b3cb1 : std ; setne dl ; jmp 0xb3ccb
0x0000000000051341 : std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000000000084112 : std ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x00000000001035a0 : std ; xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x0000000000034ab5 : sti ; adc eax, 0x540f6600 ; ret 0xf66
0x000000000005a6d8 : sti ; add al, byte ptr [rcx - 0x77] ; ret 0x144
0x0000000000194f12 : sti ; call qword ptr [rax + 0x10fffb74]
0x0000000000194f1a : sti ; call qword ptr [rax + 0x10fffb77]
0x0000000000194f22 : sti ; call qword ptr [rax + 0x10fffb7a]
0x0000000000194f2a : sti ; call qword ptr [rax + 0x10fffb7d]
0x0000000000194f32 : sti ; call qword ptr [rax + 0x10fffb80]
0x0000000000194f3a : sti ; call qword ptr [rax + 0x10fffb83]
0x0000000000194f42 : sti ; call qword ptr [rax + 0x10fffb86]
0x0000000000195526 : sti ; call qword ptr [rax - 0x1f000410]
0x00000000001954d2 : sti ; call qword ptr [rax - 0x1f000417]
0x0000000000195346 : sti ; call qword ptr [rax - 0x1f00042e]
0x000000000019535a : sti ; call qword ptr [rax - 0x1f00043c]
0x0000000000194f02 : sti ; call qword ptr [rax - 0x1f000493]
0x0000000000194df6 : sti ; call qword ptr [rax]
0x0000000000194dd2 : sti ; call rax
0x00000000001b5f9a : sti ; call rcx
0x00000000001b646a : sti ; call rsi
0x000000000019b85a : sti ; call rsp
0x00000000000bea6e : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000cdec0 : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000006dcdb : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdi*2 + 0x48], 0x89 ; ret
0x000000000006f616 : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x89 ; ret
0x000000000007f42e : sti ; dec dword ptr [rax - 0x7d] ; ret 0x4007
0x000000000006d361 : sti ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000001951ea : sti ; inc dword ptr [rax + 0x10fffbe5] ; fdivr st(3) ; call rax
0x0000000000194eaa : sti ; inc dword ptr [rax + 0x47] ; sti ; jmp qword ptr [rax]
0x0000000000194efe : sti ; inc dword ptr [rax + 0x6c] ; sti ; call qword ptr [rax - 0x1f000493]
0x0000000000195432 : sti ; inc dword ptr [rax + 1] ; cld ; jmp qword ptr [rax]
0x0000000000194df2 : sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x0000000000195522 : sti ; inc dword ptr [rax - 0x11] ; sti ; call qword ptr [rax - 0x1f000410]
0x000000000019522a : sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195226 : sti ; inc dword ptr [rax - 0x1d] ; sti ; inc dword ptr [rax - 0x1b] ; sti ; call rax
0x0000000000195256 : sti ; inc dword ptr [rax - 0x25] ; sti ; jmp qword ptr [rax]
0x00000000001952d6 : sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x0000000000195532 : sti ; inc dword ptr [rax - 0x2f00040c] ; cmc ; sti ; jmp qword ptr [rax]
0x00000000001954de : sti ; inc dword ptr [rax - 0x2f000413] ; out dx, al ; sti ; jmp qword ptr [rax]
0x0000000000195366 : sti ; inc dword ptr [rax - 0x2f000438] ; leave ; sti ; jmp qword ptr [rax]
0x0000000000195312 : sti ; inc dword ptr [rax - 0x2f00043f] ; ret 0xfffb
0x0000000000194ece : sti ; inc dword ptr [rax - 0x2f0004a4] ; pop rbp ; sti ; jmp qword ptr [rax]
0x0000000000195342 : sti ; inc dword ptr [rax - 0x2f] ; sti ; call qword ptr [rax - 0x1f00042e]
0x0000000000195356 : sti ; inc dword ptr [rax - 0x3d] ; sti ; call qword ptr [rax - 0x1f00043c]
0x00000000001951e6 : sti ; inc dword ptr [rax - 0x7f00041d] ; in eax, -5 ; call qword ptr [rax]
0x0000000000194de2 : sti ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000195452 : sti ; inc dword ptr [rax] ; add esp, edi ; jmp rax
0x0000000000194e4a : sti ; inc dword ptr [rax] ; or eax, 0x1e70fffb ; sti ; call qword ptr [rax]
0x0000000000194e3a : sti ; inc dword ptr [rax] ; sbb bl, bh ; push rax ; sbb bl, bh ; jmp rax
0x0000000000194e8a : sti ; inc dword ptr [rax] ; sbb eax, 0x3a30fffb ; sti ; call qword ptr [rax]
0x0000000000194eb2 : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x0000000000195542 : sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x00000000001954ee : sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000018a4b8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000194e32 : sti ; jmp qword ptr [rax]
0x00000000001baf6a : sti ; jmp qword ptr [rdx]
0x000000000018c5b2 : sti ; jmp rax
0x00000000000d6f5b : sti ; lcall ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000019538e : sti ; ljmp ptr [rax] ; add ah, bh ; push rax ; add esp, edi ; call rax
0x0000000000153358 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009e95d : sti ; mov rax, rdi ; ret
0x00000000000e8bd9 : sti ; or byte ptr [rcx - 0x9ce8c28], cl ; ret
0x000000000011cfaa : sti ; or dword ptr [rdi], ecx ; ret
0x0000000000198289 : sti ; out dx, eax ; call rsp
0x0000000000194e4e : sti ; push qword ptr [rax + 0x1e] ; sti ; call qword ptr [rax]
0x0000000000194e6e : sti ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000194f0a : sti ; push qword ptr [rax + 0x5b] ; sti ; call qword ptr [rax]
0x0000000000194dee : sti ; push qword ptr [rax + 6] ; sti ; inc dword ptr [rax + 7] ; sti ; call qword ptr [rax]
0x00000000001952d2 : sti ; push qword ptr [rax - 0x28] ; sti ; inc dword ptr [rax - 0x26] ; sti ; jmp qword ptr [rax]
0x000000000019526e : sti ; push qword ptr [rax - 0x29] ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x00000000001952ee : sti ; push qword ptr [rax - 0x2a] ; sti ; jmp qword ptr [rax]
0x00000000001954ea : sti ; push qword ptr [rax - 0xf] ; sti ; inc eax ; sti ; call qword ptr [rax]
0x000000000019553e : sti ; push qword ptr [rax - 8] ; sti ; inc eax ; stc ; sti ; call qword ptr [rax]
0x0000000000194e2e : sti ; push qword ptr [rax] ; adc eax, 0x1620fffb ; sti ; call qword ptr [rax]
0x00000000001954b2 : sti ; push qword ptr [rax] ; add ah, bh ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000194dde : sti ; push qword ptr [rax] ; add edi, ebx ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x0000000000194e8e : sti ; push qword ptr [rax] ; cmp bh, bl ; call qword ptr [rax]
0x0000000000195272 : sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000194e66 : sti ; push qword ptr [rax] ; sub bl, bh ; call rax
0x000000000019528e : sti ; push qword ptr [rax] ; xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x000000000019527a : sti ; push rax ; fdiv st(3), st(0) ; call rax
0x0000000000195292 : sti ; push rax ; fdivr st(3) ; call rax
0x00000000001952f6 : sti ; push rax ; fsincos ; call rax
0x0000000000195352 : sti ; push rax ; sar ebx, -1 ; ret
0x0000000000194e3e : sti ; push rax ; sbb bl, bh ; jmp rax
0x0000000000183dea : sti ; ret
0x0000000000042316 : sti ; ret 0xffbf
0x000000000019af89 : sti ; stc ; jmp rsp
0x0000000000127bdd : sti ; sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x000000000002c377 : sti ; test rax, rax ; je 0x2c385 ; call rax
0x00000000000b05bf : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccd9ade
0x00000000000b5a67 : sti ; xor byte ptr [rax - 0x77], cl ; call 0x4ccdef86
0x00000000001027f0 : sti ; xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x0000000000002314 : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x00000000000f003c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001235e2 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019749d : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; mov ah, 0x51 ; in eax, dx ; jmp rsp
0x0000000000188acd : stosb byte ptr [rdi], al ; call rax
0x0000000000196179 : stosb byte ptr [rdi], al ; cld ; call qword ptr [rsi + 0x26fffca9]
0x00000000001962b5 : stosb byte ptr [rdi], al ; cld ; call rsp
0x00000000001962b1 : stosb byte ptr [rdi], al ; cld ; inc dword ptr [rdx + rbp*4 - 4] ; call rsp
0x0000000000196135 : stosb byte ptr [rdi], al ; cld ; jmp qword ptr [rax]
0x00000000001842c4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000029c42 : stosb byte ptr [rdi], al ; cwde ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r12
0x00000000001a0b59 : stosb byte ptr [rdi], al ; jmp 0x1a0b5d
0x0000000000047a30 : stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x000000000011e6db : stosb byte ptr [rdi], al ; or eax, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000002317 : stosb byte ptr [rdi], al ; ret
0x000000000011c1fa : stosb byte ptr [rdi], al ; ret 0x2a
0x000000000000366e : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x0000000000194fd1 : stosb byte ptr [rdi], al ; std ; jmp rsi
0x0000000000083b72 : stosb byte ptr [rdi], al ; sysenter
0x00000000001a66e5 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; cwde ; jae 0x1a66df ; jmp qword ptr [rdx]
0x00000000001a661d : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; loopne 0x1a6695 ; out dx, al ; jmp rdx
0x00000000001b6615 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; call 0xffffffffd21b5d52
0x0000000000196131 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax + 0x20fffcaa]
0x0000000000196329 : stosd dword ptr [rdi], eax ; cld ; call qword ptr [rax]
0x00000000001961ed : stosd dword ptr [rdi], eax ; cld ; call rdx
0x00000000001961e9 : stosd dword ptr [rdi], eax ; cld ; inc dword ptr [rdx - 0x55] ; cld ; call rdx
0x000000000019616d : stosd dword ptr [rdi], eax ; cld ; jmp rsi
0x0000000000123dea : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000035f9c : stosd dword ptr [rdi], eax ; ret
0x0000000000186c5c : stosd dword ptr [rdi], eax ; shr ch, cl ; call rax
0x0000000000123de9 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000035f9b : stosq qword ptr [rdi], rax ; ret
0x00000000001857b1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000195675 : sub ah, bh ; call qword ptr [rax]
0x0000000000195591 : sub ah, bh ; call rax
0x0000000000195551 : sub ah, bh ; inc dword ptr [rax] ; sub bh, ah ; jmp rax
0x0000000000195571 : sub ah, bh ; push rax ; sub esp, edi ; call rax
0x00000000001aef58 : sub ah, ch ; hlt ; jmp qword ptr [rcx]
0x0000000000021973 : sub al, 0 ; add byte ptr [rax], al ; call 0x2dc46
0x0000000000101f83 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000fdf5f : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fe2eb : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8ca4] ; ret
0x00000000000fe12b : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8e64] ; ret
0x00000000000ff2f7 : sub al, 0 ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001025a5 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x00000000000fe4b9 : sub al, 0 ; mov rdx, rax ; jmp 0xfe453
0x0000000000101f2f : sub al, 0 ; pop rbp ; pop r12 ; ret
0x00000000000ff896 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ff57c : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101ef9 : sub al, 0 ; pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe132 : sub al, 0 ; ret
0x000000000019d124 : sub al, 0x16 ; add byte ptr [rax], al ; call 0x1819ba3c
0x00000000001882c8 : sub al, 0x29 ; call qword ptr [rdi]
0x000000000019e524 : sub al, 0x2a ; add byte ptr [rax], al ; cwde ; jl 0x19e51b ; jmp qword ptr [rsi]
0x00000000000abc02 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000d6b9c : sub al, 0x44 ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000001b0924 : sub al, 0x4e ; add dword ptr [rax], eax ; pop rax ; outsb dx, byte ptr [rsi] ; cmc ; jmp qword ptr [rcx]
0x00000000001959d0 : sub al, 0x51 ; cld ; call rdx
0x00000000001b1124 : sub al, 0x56 ; add dword ptr [rax], eax ; test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x00000000001b2a24 : sub al, 0x6f ; add dword ptr [rax], eax ; pop rax ; and dh, dh ; jmp qword ptr [rsi]
0x00000000000abc05 : sub al, 0x75 ; pop rax ; ret
0x00000000000d7a99 : sub al, 0x83 ; ret 0x4801
0x00000000000bbcf9 : sub al, 0x85 ; ror byte ptr [rdi], 0x94 ; ret 0x3840
0x0000000000188694 : sub al, 0x8a ; dec dword ptr [rdi] ; mov ebx, esi ; jmp rdx
0x000000000016efc3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a7c24 : sub al, 0xc1 ; add byte ptr [rax], al ; test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a8624 : sub al, 0xcb ; add byte ptr [rax], al ; call 0x131a7688
0x00000000001a9924 : sub al, 0xde ; add byte ptr [rax], al ; or byte ptr [rbp - 0xf], bl ; jmp qword ptr [rcx]
0x000000000009dac6 : sub al, 0xf ; mov dh, 0x45 ; ret
0x000000000009bb82 : sub al, 0xf ; mov dh, 0x55 ; ret
0x0000000000127bde : sub al, 0xf ; xchg eax, ebp ; ret 0xfb80
0x00000000001ab249 : sub al, 0xf2 ; jmp rcx
0x0000000000101b2f : sub al, 0xff ; xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x00000000000adf8e : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019bc24 : sub al, 1 ; add byte ptr [rax], al ; sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001ae7cd : sub al, 1 ; add byte ptr [rax], dl ; fcomi st(4) ; call qword ptr [rbx]
0x000000000019879d : sub al, 1 ; add byte ptr [rdx + rdx*2], al ; call rsp
0x000000000019af9d : sub al, 2 ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x00000000001bc024 : sub al, 5 ; add al, byte ptr [rax] ; mov byte ptr [rdi - 8], ch ; call rcx
0x0000000000033ea2 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000019e555 : sub al, byte ptr [rax] ; add byte ptr [rax], bh ; jge 0x19e54a ; jmp rsp
0x0000000000120653 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000011fe76 : sub al, byte ptr [rax] ; call rax
0x000000000011ab20 : sub al, byte ptr [rax] ; jne 0x11ab38 ; jmp 0x11ab52
0x000000000011cbb8 : sub al, byte ptr [rax] ; jne 0x11cbd0 ; jmp 0x11cbea
0x000000000011fe29 : sub al, byte ptr [rax] ; jne 0x11fe3f ; jmp 0x11fe59
0x0000000000120f95 : sub al, byte ptr [rax] ; ret
0x00000000001282fe : sub al, byte ptr [rax] ; test eax, eax ; je 0x12830e ; ret
0x000000000005c6b9 : sub al, byte ptr [rbx - 0x5f743] ; call qword ptr [rax]
0x0000000000035302 : sub al, byte ptr [rcx + rdi] ; test eax, eax ; jne 0x35319 ; ret
0x00000000001ae5cd : sub al, byte ptr [rcx] ; add byte ptr [rax - 0x2f], dh ; hlt ; jmp rcx
0x000000000004c4e5 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b1db7 : sub al, ch ; ret
0x0000000000033635 : sub al, ch ; ret 0xfffe
0x00000000000f3124 : sub ax, 0x8900 ; ret
0x000000000005a7b4 : sub bh, 0xff ; dec dword ptr [rcx + 0x39] ; ret
0x0000000000195619 : sub bh, ah ; call rax
0x00000000001aed68 : sub bh, ah ; hlt ; jmp qword ptr [rcx]
0x0000000000195555 : sub bh, ah ; jmp rax
0x0000000000195679 : sub bh, ah ; push rax ; sub edi, esp ; jmp rax
0x000000000007206c : sub bh, bh ; loopne 0x72009 ; mov eax, 0xffffffff ; ret
0x00000000001a7d31 : sub bh, dl ; call qword ptr [rdi]
0x00000000001aa1f0 : sub bl, 0xf1 ; call rdi
0x0000000000194e69 : sub bl, bh ; call rax
0x00000000000abbf6 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000076b95 : sub byte ptr [r8 + 0x63], r9b ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000000741de : sub byte ptr [r8 + 1], r9b ; ret 0x8949
0x000000000013c151 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000142d37 : sub byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000001408d4 : sub byte ptr [r8], al ; call qword ptr [rax]
0x0000000000140ee7 : sub byte ptr [r8], r8b ; call qword ptr [rax]
0x000000000013be81 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000f5c07 : sub byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000076b96 : sub byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 1], cl ; ret 0x8944
0x00000000001216a4 : sub byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000000001358de : sub byte ptr [rax + 1], bh ; ret
0x00000000000741df : sub byte ptr [rax + 1], cl ; ret 0x8949
0x000000000013c152 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018695c : sub byte ptr [rax - 0x57d70013], ch ; in eax, dx ; call rsi
0x0000000000084fb4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000132548 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000032a2f : sub byte ptr [rax - 0x77], cl ; ret
0x00000000000f9e21 : sub byte ptr [rax - 0x77], cl ; ret 0x830f
0x00000000000896c5 : sub byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000f8ee7 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000073f35 : sub byte ptr [rax - 0x77], cl ; ret 0x9e9
0x000000000006d20c : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000713f8 : sub byte ptr [rax - 0x78], al ; cmp al, byte ptr [rax + 0xf] ; mov dh, 0xc7 ; ret
0x00000000000e2d94 : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2fe9
0x00000000000eef60 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000022e1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x00000000001434e0 : sub byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x000000000002aca4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret 0xea
0x00000000001382b5 : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001408d5 : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000195390 : sub byte ptr [rax], al ; cld ; push rax ; add esp, edi ; call rax
0x0000000000138e85 : sub byte ptr [rax], al ; cmp dword ptr fs:[rax], 0x18 ; je 0x138e98 ; ret
0x0000000000140e8e : sub byte ptr [rax], al ; ret
0x000000000013dd34 : sub byte ptr [rax], al ; test eax, eax ; je 0x13dd48 ; xor eax, eax ; ret
0x0000000000140e68 : sub byte ptr [rax], al ; test eax, eax ; jne 0x140e81 ; xor eax, eax ; pop rbx ; ret
0x0000000000144374 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144388 ; xor eax, eax ; ret
0x00000000001443a4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1443b8 ; xor eax, eax ; ret
0x00000000001443d4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1443e8 ; xor eax, eax ; ret
0x0000000000144404 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144418 ; xor eax, eax ; ret
0x0000000000144434 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144448 ; xor eax, eax ; ret
0x0000000000144464 : sub byte ptr [rax], al ; test eax, eax ; jne 0x144478 ; xor eax, eax ; ret
0x00000000000022e2 : sub byte ptr [rax], dl ; salc ; ret
0x0000000000140d39 : sub byte ptr [rax], r8b ; add rsp, 8 ; ret
0x00000000000abbfa : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000abbf9 : sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000019bc28 : sub byte ptr [rbp - 0x18], cl ; call qword ptr [rax]
0x00000000001b07f8 : sub byte ptr [rbp - 0xb], ch ; call qword ptr [rax]
0x00000000000206bf : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000044c97 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000001434b3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000001434b2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000001b3bc8 : sub byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x00000000000abbf7 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000819a9 : sub byte ptr [rcx + rcx*4 + 0x54], cl ; and al, 0x20 ; call rax
0x000000000013c1d7 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000008162a : sub byte ptr [rcx + rcx*4 - 1], cl ; mov qword ptr [rsp + 0x20], r10 ; call qword ptr [rax]
0x0000000000033500 : sub byte ptr [rcx - 0x17c7dbbc], cl ; xchg eax, esi ; ret
0x000000000002a27a : sub byte ptr [rcx - 0x77], al ; ret 0x8b4c
0x00000000000e3e99 : sub byte ptr [rcx - 0x7d], al ; cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xf44
0x00000000001434e1 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x000000000013be82 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000850e0 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000001a8208 : sub byte ptr [rdi - 0x10], al ; jmp qword ptr [rdi]
0x000000000012e7ac : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001b0a18 : sub byte ptr [rdi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000000aed82 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf883
0x00000000001206d4 : sub byte ptr [rdx], 0 ; call rax
0x000000000004c66f : sub byte ptr [rdx], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001ab1c8 : sub byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x000000000018997c : sub byte ptr [rip + 0x528fff5], al ; cmc ; jmp rax
0x0000000000189a00 : sub byte ptr [rip + 0x590fff5], al ; cmc ; jmp rax
0x00000000001ac2ba : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00000000001a8e1a : sub byte ptr [rsi + 0x300e4405], al ; add dword ptr [rsi], 0x77 ; ret
0x000000000019d948 : sub byte ptr [rsi - 0x17], al ; call qword ptr [rdx]
0x00000000001b08f8 : sub byte ptr [rsi - 0xb], ch ; jmp qword ptr [rcx]
0x00000000001af8d8 : sub byte ptr [rsi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000002c0c : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x0000000000140ee6 : sub byte ptr es:[r8], r8b ; call qword ptr [rax]
0x00000000001954e0 : sub ch, 0xfb ; call rax
0x00000000001afcd9 : sub ch, dh ; jmp qword ptr [rbx]
0x0000000000034b32 : sub cl, al ; add rsp, 0x28 ; ret
0x0000000000034ace : sub cl, al ; jne 0x34ae8 ; add rsp, 0x28 ; ret
0x0000000000034e09 : sub cl, al ; jne 0x34e20 ; add rsp, 0x28 ; ret
0x0000000000034931 : sub cl, al ; ret
0x00000000000f8ee1 : sub cl, bh ; dec dword ptr [rbp + rcx*4 + 0x24] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x00000000000d17bd : sub cl, byte ptr [rax - 0x7d] ; ret
0x0000000000099565 : sub cl, byte ptr [rdi] ; mov dh, 0x55 ; ret
0x00000000000662c8 : sub cl, byte ptr [rdi] ; test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007a8a5 : sub cl, ch ; ret 0xfffe
0x000000000010e70c : sub dh, al ; add byte ptr [rax], ah ; jmp 0x10e6da
0x000000000004bcd0 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000104bed : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac9e4 : sub dh, bh ; dec dword ptr [rax - 0x73] ; cld ; pop rbx ; ret
0x00000000001af3f8 : sub dh, bh ; hlt ; jmp rdi
0x0000000000102a7c : sub dh, cl ; int1 ; dec dword ptr [rcx - 0x75] ; jge 0x102a8c ; call rbx
0x00000000001882cd : sub dh, dl ; call qword ptr [rax]
0x0000000000188251 : sub dh, dl ; jmp qword ptr [rax + 0x20fff229]
0x00000000001ab1c9 : sub dh, dl ; jmp qword ptr [rdi]
0x00000000001882c5 : sub dh, dl ; ljmp ptr [rcx + rbp] ; call qword ptr [rdi]
0x00000000001aeaf8 : sub dl, ah ; hlt ; jmp qword ptr [rcx]
0x000000000018b061 : sub dl, bh ; call qword ptr [rax]
0x000000000018b05d : sub dl, bh ; jmp rax
0x000000000018b059 : sub dl, bh ; push rax ; sub dl, bh ; jmp rax
0x00000000001acdc8 : sub dl, bl ; jmp qword ptr [rcx]
0x0000000000064324 : sub dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; in al, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000012c57d : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000128735 : sub dword ptr [rax], eax ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x128749 ; ret
0x00000000001381dc : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012dd75 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001289b5 : sub dword ptr [rax], eax ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012b886 : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000012c564 : sub dword ptr [rax], eax ; test eax, eax ; je 0x12c576 ; ret
0x0000000000168ab3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000019873d : sub dword ptr [rcx], eax ; add byte ptr [rbx + rax*2 - 0xe], ah ; call rsp
0x000000000014362e : sub dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000000001515a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1515bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001516f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15170d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151847 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15185d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1519ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151ae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151afd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151c37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151c4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151d87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151d9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151ed7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x151eed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15203d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15218d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001522c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1522dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15242d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15257d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001526b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1526cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000152807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15281d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000153f77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x153f8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001540c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1540dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15422d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15437d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001544b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1544cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15461d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154757 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15476d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001548a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1548bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001549f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154c97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154cad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154de7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154dfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000154f37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x154f4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000155087 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15509d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001551d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1551ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156947 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15695d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156a97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156aad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156be7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156bfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156d37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156d4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156e87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156e9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000156fd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x156fed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157127 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15713d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157277 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15728d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001573c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1573dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157517 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15752d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157667 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15767d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001577b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1577cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157907 : sub dword ptr [rdi + 0x10], ebx ; jb 0x15791d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157a57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x157a6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000157ba7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x157bbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000151503 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001514ff : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x0000000000066500 : sub dword ptr [rdi], ecx ; test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f1db4 : sub dword ptr [rdi], ecx ; test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x00000000001515ad : sub dword ptr [rdi], esp ; jmp r9
0x0000000000170619 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f7a6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000001382d6 : sub eax, -0x80 ; add rsp, 8 ; ret
0x00000000000850b9 : sub eax, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000013bf5a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e7ac5 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x00000000000e8465 : sub eax, 0x36740000 ; xor eax, eax ; ret
0x00000000000822d2 : sub eax, 0x39480108 ; ret
0x000000000012afe2 : sub eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ea665 : sub eax, 0x5a0a8900 ; pop rcx ; pop rbx ; ret
0x0000000000034ba9 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000056841 : sub eax, 0x83000000 ; ret
0x00000000000989bd : sub eax, 0x854dffff ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bc67b : sub eax, 0x88d0000 ; rol byte ptr [rcx], cl ; ret 0xb
0x00000000001336a4 : sub eax, 0x8948f631 ; out -0x77, eax ; ret
0x000000000013744e : sub eax, 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ce094 : sub eax, 1 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000009751a : sub eax, 1 ; jne 0x97517 ; pop rbx ; pop rbp ; ret
0x000000000002a6e4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000004846f : sub eax, 1 ; ret
0x000000000011535e : sub eax, dword ptr [r8] ; cmp rdx, rax ; jne 0x115349 ; ret
0x00000000001095f3 : sub eax, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001095e6 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001151c2 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001096d8 : sub eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000011535f : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x115348 ; ret
0x0000000000109572 : sub eax, dword ptr [rax] ; je 0x10957d ; pop rbp ; ret
0x000000000010a305 : sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x0000000000109bdd : sub eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x0000000000115aac : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000109524 : sub eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000114aa4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ab8 ; xor eax, eax ; ret
0x0000000000114ad4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ae8 ; xor eax, eax ; ret
0x0000000000114b04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b18 ; xor eax, eax ; ret
0x0000000000114b34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b48 ; xor eax, eax ; ret
0x0000000000114b64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114b78 ; xor eax, eax ; ret
0x0000000000114b94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ba8 ; xor eax, eax ; ret
0x0000000000114bc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114bd8 ; xor eax, eax ; ret
0x0000000000114bf4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c08 ; xor eax, eax ; ret
0x0000000000114c24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c38 ; xor eax, eax ; ret
0x0000000000114c54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c68 ; xor eax, eax ; ret
0x0000000000114c84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114c98 ; xor eax, eax ; ret
0x0000000000114cb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114cc8 ; xor eax, eax ; ret
0x0000000000114ce4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114cf8 ; xor eax, eax ; ret
0x0000000000114d14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d28 ; xor eax, eax ; ret
0x0000000000114d44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d58 ; xor eax, eax ; ret
0x0000000000114d74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114d88 ; xor eax, eax ; ret
0x0000000000114da4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114db8 ; xor eax, eax ; ret
0x0000000000114dd4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114de8 ; xor eax, eax ; ret
0x0000000000114e04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e18 ; xor eax, eax ; ret
0x0000000000114e34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114e48 ; xor eax, eax ; ret
0x0000000000114e94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ea8 ; xor eax, eax ; ret
0x0000000000114ec4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ed8 ; xor eax, eax ; ret
0x0000000000114ef4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f08 ; xor eax, eax ; ret
0x0000000000114f24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f38 ; xor eax, eax ; ret
0x0000000000114f54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f68 ; xor eax, eax ; ret
0x0000000000114f84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114f98 ; xor eax, eax ; ret
0x0000000000114fb4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114fc8 ; xor eax, eax ; ret
0x0000000000114fe4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x114ff8 ; xor eax, eax ; ret
0x0000000000115014 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x115028 ; xor eax, eax ; ret
0x0000000000115535 : sub eax, dword ptr [rax] ; test rax, rax ; je 0x115547 ; ret
0x000000000002e69f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004bc80 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000aadc1 : sub eax, dword ptr [rcx + r8*4] ; je 0xaada7 ; ret
0x00000000000aadc2 : sub eax, dword ptr [rcx + rax*4] ; je 0xaada6 ; ret
0x000000000019b995 : sub eax, dword ptr [rcx] ; add ah, ah ; ret 0xfffd
0x000000000007d0be : sub eax, dword ptr [rdi + 0x18] ; ret
0x00000000000774d5 : sub eax, dword ptr [rdi + 0x20] ; ret
0x00000000000773c5 : sub eax, dword ptr [rdi + 0x38] ; ret
0x00000000001194fc : sub eax, dword ptr [rdi + rcx - 0x42] ; ret 0x8d45
0x00000000000734f5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c6 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b6 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000aad7a : sub eax, dword ptr [rdx + rcx*4] ; je 0xaad66 ; ret
0x000000000019af85 : sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x000000000007c863 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000115aab : sub eax, dword ptr es:[rax] ; pop rbp ; ret
0x0000000000110bbc : sub eax, eax ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000014a60e : sub eax, eax ; ret
0x000000000007b6dd : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ad15b : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007c019 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000004a13d : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008b12c : sub eax, ecx ; ret
0x000000000008b8b9 : sub eax, edi ; ret
0x0000000000110b4f : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x000000000003a639 : sub eax, edx ; ret
0x0000000000034b8f : sub eax, edx ; shr eax, 0x1f ; ret
0x00000000000347bd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000172aa7 : sub eax, edx ; vzeroupper ; ret
0x000000000007b7fa : sub eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000078fb8 : sub eax, esp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000110bbb : sub eax, r8d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000018405e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000006df3b : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000182af5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f9b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000b9e1c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000194e6d : sub ebx, edi ; push qword ptr [rax + 0x2b] ; sti ; call qword ptr [rax]
0x0000000000035f94 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x0000000000049125 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a6601 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000aaf8c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000009eb06 : sub edi, dword ptr [rcx] ; ret 0x2774
0x0000000000194e71 : sub edi, ebx ; call qword ptr [rax]
0x00000000001955f9 : sub edi, esp ; call qword ptr [rax]
0x00000000001955d9 : sub edi, esp ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x000000000019567d : sub edi, esp ; jmp rax
0x000000000007c890 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007c885 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000013a183 : sub edx, dword ptr [rbp + 5] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000008eb64 : sub edx, eax ; jbe 0x8eba7 ; add rax, rdi ; ret
0x000000000008eb74 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008eb84 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008eb94 : sub edx, eax ; jbe 0x8eba9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000d30eb : sub edx, eax ; jmp 0xd3104
0x0000000000034eff : sub edx, eax ; mov eax, edx ; sar eax, 0x10 ; ret
0x000000000019f6c1 : sub edx, ebp ; jmp rax
0x0000000000034ebe : sub edx, ecx ; not eax ; and eax, edx ; ret
0x00000000001a7d19 : sub edx, edi ; jmp qword ptr [rdi]
0x000000000019b119 : sub edx, edi ; jmp rsp
0x00000000001882c9 : sub edx, esi ; call qword ptr [rdi]
0x0000000000188255 : sub edx, esi ; jmp qword ptr [rax]
0x0000000000074012 : sub edx, esi ; mov rdi, r15 ; call rax
0x0000000000078774 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000013759c : sub esi, -1 ; nop ; pop rbx ; ret
0x0000000000097382 : sub esi, 1 ; jne 0x97380 ; xor eax, eax ; pop rbx ; ret
0x000000000009742a : sub esi, 1 ; jne 0x97427 ; xor eax, eax ; ret
0x0000000000123bce : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000142bfa : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a5ed1 : sub esi, ebp ; jmp qword ptr [rdi]
0x00000000000fcdf4 : sub esi, ebx ; ret
0x00000000000f6e40 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c2ce : sub esp, -0x80 ; pop rbx ; ret
0x0000000000088e18 : sub esp, 0x80 ; call 0x115048
0x000000000012bef9 : sub esp, 8 ; call 0x1381f5
0x000000000009f480 : sub esp, 8 ; call 0x8b725
0x0000000000195575 : sub esp, edi ; call rax
0x00000000001955f5 : sub esp, edi ; push qword ptr [rax] ; sub edi, esp ; call qword ptr [rax]
0x0000000000195615 : sub esp, edi ; push rax ; sub bh, ah ; call rax
0x00000000000d30ea : sub r10, rax ; jmp 0xd3105
0x000000000010e70b : sub r14b, r8b ; add byte ptr [rax], ah ; jmp 0x10e6db
0x0000000000114aa3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114ab9 ; xor eax, eax ; ret
0x0000000000114ad3 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114ae9 ; xor eax, eax ; ret
0x0000000000114b03 : sub r8, qword ptr [rax] ; test eax, eax ; jne 0x114b19 ; xor eax, eax ; ret
0x000000000007c018 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x00000000001151c1 : sub r8d, dword ptr [r8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000114f53 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114f69 ; xor eax, eax ; ret
0x0000000000114f83 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114f99 ; xor eax, eax ; ret
0x0000000000114fb3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114fc9 ; xor eax, eax ; ret
0x0000000000114fe3 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x114ff9 ; xor eax, eax ; ret
0x0000000000115013 : sub r8d, dword ptr [r8] ; test eax, eax ; jne 0x115029 ; xor eax, eax ; ret
0x00000000001382d5 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000822d1 : sub rax, 0x39480108 ; ret
0x0000000000097519 : sub rax, 1 ; jne 0x97518 ; pop rbx ; pop rbp ; ret
0x00000000000aa4d3 : sub rax, 1 ; ret
0x0000000000114b33 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114b49 ; xor eax, eax ; ret
0x0000000000114b63 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114b79 ; xor eax, eax ; ret
0x0000000000114b93 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114ba9 ; xor eax, eax ; ret
0x0000000000114bc3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114bd9 ; xor eax, eax ; ret
0x0000000000114bf3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114c09 ; xor eax, eax ; ret
0x0000000000114c23 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114c39 ; xor eax, eax ; ret
0x0000000000114d43 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114d59 ; xor eax, eax ; ret
0x0000000000114d73 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114d89 ; xor eax, eax ; ret
0x0000000000114da3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114db9 ; xor eax, eax ; ret
0x0000000000114dd3 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114de9 ; xor eax, eax ; ret
0x0000000000114e03 : sub rax, qword ptr [r8] ; test eax, eax ; jne 0x114e19 ; xor eax, eax ; ret
0x0000000000114c53 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114c69 ; xor eax, eax ; ret
0x0000000000114c83 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114c99 ; xor eax, eax ; ret
0x0000000000114cb3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114cc9 ; xor eax, eax ; ret
0x0000000000114ce3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114cf9 ; xor eax, eax ; ret
0x0000000000114d13 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114d29 ; xor eax, eax ; ret
0x0000000000114e33 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114e49 ; xor eax, eax ; ret
0x0000000000114e93 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114ea9 ; xor eax, eax ; ret
0x0000000000114ec3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114ed9 ; xor eax, eax ; ret
0x0000000000114ef3 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114f09 ; xor eax, eax ; ret
0x0000000000114f23 : sub rax, qword ptr [rax] ; test eax, eax ; jne 0x114f39 ; xor eax, eax ; ret
0x000000000007d0bd : sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000774d4 : sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000773c4 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000734f4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x00000000000774c5 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x00000000000773b5 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000014a60d : sub rax, r8 ; ret
0x00000000000ad15a : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000008b8b8 : sub rax, rdi ; ret
0x000000000003a64d : sub rax, rdx ; ret
0x00000000000347bc : sub rax, rdx ; shr rax, 0x3f ; ret
0x0000000000172aa6 : sub rax, rdx ; vzeroupper ; ret
0x00000000000aaf8b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008eb63 : sub rdx, rax ; jbe 0x8eba8 ; add rax, rdi ; ret
0x0000000000074011 : sub rdx, rsi ; mov rdi, r15 ; call rax
0x0000000000078773 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000097381 : sub rsi, 1 ; jne 0x97381 ; xor eax, eax ; pop rbx ; ret
0x0000000000097429 : sub rsi, 1 ; jne 0x97428 ; xor eax, eax ; ret
0x00000000000f6e3f : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013c2cd : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000088e17 : sub rsp, 0x80 ; call 0x115049
0x000000000012bef8 : sub rsp, 8 ; call 0x1381f6
0x000000000012bef7 : sub rsp, 8 ; call 0x1381f7
0x000000000009f47f : sub rsp, 8 ; call 0x8b726
0x0000000000195674 : sub spl, dil ; call qword ptr [rax]
0x0000000000034890 : subps xmm0, xmm1 ; ret
0x000000000003488f : subsd xmm0, xmm1 ; ret
0x0000000000034c24 : subss xmm0, xmm1 ; ret
0x0000000000125131 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000fdae7 : syscall ; mov eax, edx ; ret
0x00000000000f68dd : syscall ; neg eax ; ret
0x0000000000115087 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000bc375 : syscall ; ret
0x000000000010739f : syscall ; test rax, rax ; jl 0x1073ee ; je 0x1073b2 ; ret
0x0000000000082f24 : sysenter
0x0000000000074153 : test ah, al ; add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x00000000000d7c4b : test ah, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000066502 : test ah, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007f414 : test ah, bh ; add al, 0 ; add dh, dh ; ret
0x000000000019a0a8 : test ah, bl ; idiv edi ; xchg eax, esp ; ret 1
0x000000000019a66c : test ah, ch ; add dword ptr [rax], eax ; and al, 0x69 ; clc ; call rsp
0x00000000000f1db6 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3101
0x0000000000138337 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001323d2 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000136b26 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cb70 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a91b8 : test al, 0x1f ; int1 ; call qword ptr [rsi]
0x000000000011b004 : test al, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000003cda : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d9b18 : test al, 0x48 ; add eax, edx ; jmp rax
0x00000000001a3db8 : test al, 0x4d ; in eax, dx ; call qword ptr [rax]
0x00000000001877dc : test al, 0x53 ; out dx, al ; jmp qword ptr [rax]
0x00000000001bbf38 : test al, 0x6f ; clc ; call qword ptr [rax]
0x00000000001a4568 : test al, 0x71 ; in eax, dx ; call qword ptr [rsi]
0x00000000001b1128 : test al, 0x7a ; cmc ; jmp qword ptr [rcx]
0x000000000009d398 : test al, 0x83 ; ret 0x4901
0x00000000001ac688 : test al, 0x87 ; call qword ptr [rsi]
0x00000000001ad768 : test al, 0x87 ; hlt ; call qword ptr [rsi]
0x000000000018c15c : test al, 0x89 ; cli ; inc dword ptr [rax - 0x76] ; cli ; call rax
0x00000000000d57ec : test al, 0x89 ; ret
0x00000000001a9a88 : test al, 0x95 ; int1 ; call qword ptr [rax]
0x00000000001bb068 : test al, 0x97 ; sti ; jmp qword ptr [rdx]
0x00000000001833b7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000001a7c28 : test al, 0xdd ; out dx, eax ; jmp qword ptr [rbx]
0x00000000000ccfe0 : test al, 0xe8 ; ret 0xf528
0x00000000000d56e8 : test al, 0xe8 ; ret 0xfd7a
0x0000000000023658 : test al, 0xe8 ; ret 0xffff
0x00000000001a1171 : test al, 0xec ; jmp qword ptr [rcx]
0x0000000000186961 : test al, 0xed ; call rsi
0x000000000018695d : test al, 0xed ; ljmp ptr [rax] ; test al, 0xed ; call rsi
0x0000000000105adb : test al, 0xf ; xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000ecf73 : test al, 0xf ; xchg eax, esp ; ret
0x00000000000ac549 : test al, 0xf0 ; jne 0xac5a8 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x00000000000ac548 : test al, 0xf0 ; jne 0xac5a9 ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000188cb9 : test al, 0xf3 ; jmp rdi
0x00000000001ae1b9 : test al, 0xf4 ; jmp qword ptr [rcx]
0x0000000000196189 : test al, 0xfc ; call rsi
0x0000000000196185 : test al, 0xfc ; inc dword ptr [rsi - 0x58] ; cld ; call rsi
0x0000000000195005 : test al, 0xfd ; call qword ptr [rsi]
0x0000000000195085 : test al, 0xfd ; jmp rax
0x00000000000f7646 : test al, 2 ; cmove eax, edx ; ret
0x000000000009eb82 : test al, al ; jne 0x9eb65 ; ret
0x000000000009ecc0 : test al, al ; jne 0x9eca6 ; xor eax, eax ; ret
0x000000000009f80a : test al, al ; jne 0x9f7f8 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000019a0fc : test al, bl ; add dword ptr [rax], eax ; mov ah, 0xe5 ; idiv edi ; pushfq ; ret
0x0000000000121575 : test al, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000008093f : test al, dl ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000000000195c39 : test bh, ah ; call qword ptr [rax + 0x20fffc83]
0x0000000000195e31 : test bh, ah ; call qword ptr [rax]
0x0000000000195cf5 : test bh, ah ; call rdx
0x0000000000195cf1 : test bh, ah ; inc dword ptr [rdx - 0x7c] ; cld ; call rdx
0x0000000000195c75 : test bh, ah ; jmp rsi
0x0000000000046074 : test bh, ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], cl ; ret 0xea75
0x000000000012e31a : test bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000019b758 : test bl, al ; cli ; jmp rsp
0x00000000000835d3 : test bl, dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000001a4c70 : test bpl, bpl ; call qword ptr [rdx]
0x000000000002def6 : test byte ptr [rax + 0x200], bh ; ret
0x0000000000125583 : test byte ptr [rax + 0x39000003], al ; ret
0x00000000000cdcda : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001322a5 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000003340d : test byte ptr [rax + 0x63], 0x34 ; mov bh, 0x48 ; add esi, edi ; jmp rsi
0x00000000000c525f : test byte ptr [rax + 0x63], 0x34 ; mov dl, 0x48 ; add edx, esi ; jmp rdx
0x0000000000135865 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b9e68 : test byte ptr [rax + 0x74db8500], cl ; or bh, byte ptr [rcx] ; ret
0x00000000000ffdf7 : test byte ptr [rax + rax + 0x58b0000], dl ; ret 0x2c73
0x0000000000068469 : test byte ptr [rax + rax - 0x7cb80000], ah ; ret
0x000000000012fb06 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret 0x850f
0x000000000019a4a0 : test byte ptr [rax + rdi*8], ah ; jmp rsp
0x00000000000f6aa3 : test byte ptr [rax - 0x73], 0x7c ; and al, 0xc ; call rax
0x0000000000102e61 : test byte ptr [rax - 0x75], 0x7d ; add byte ptr [rcx + 0xf], al ; lahf ; ret
0x00000000001035a4 : test byte ptr [rax - 0x77], 0xc3 ; call rax
0x0000000000047059 : test byte ptr [rax - 0x77], 0xd8 ; pop rbx ; ret
0x000000000012a4ce : test byte ptr [rax - 0x77], 0xdf ; mov qword ptr [rsp], rcx ; call r12
0x000000000013c079 : test byte ptr [rax - 0x77], 0xef ; call r12
0x000000000019aaf8 : test byte ptr [rax - 7], bl ; jmp rsp
0x00000000001ab105 : test byte ptr [rax], 0 ; cmp byte ptr [rdx + rsi*8], ah ; jmp qword ptr [rcx]
0x00000000001ab1c5 : test byte ptr [rax], 0 ; sub byte ptr [rdx], ch ; jmp qword ptr [rdi]
0x000000000013dfcb : test byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e3605 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001102ff : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf10
0x0000000000196e5d : test byte ptr [rax], al ; add ah, dh ; cmp edx, ebp ; jmp rsp
0x0000000000077eea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000001439aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rcx
0x0000000000170a9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000168c4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000a5d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000a6cfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x0000000000168c7a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000a6d1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a6d2a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000d720a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000168cba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000a6d6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007cb3a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000168c5a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000a6d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000007a61a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000020589 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000758ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006acca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007829a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009f17a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000007f52b : test byte ptr [rax], bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019b15c : test byte ptr [rax], bh ; add al, byte ptr [rax] ; in al, 0x2e ; cli ; jmp rsp
0x00000000000963dc : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001af37c : test byte ptr [rax], bh ; add dword ptr [rax], eax ; loopne 0x1af386 ; hlt ; jmp qword ptr [rcx]
0x0000000000097b29 : test byte ptr [rax], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000198284 : test byte ptr [rax], cl ; add dword ptr [rax], eax ; and al, 0xfb ; out dx, eax ; call rsp
0x00000000000963f4 : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001a587c : test byte ptr [rbp + 0x1800000], bl ; out dx, al ; call qword ptr [rsi]
0x0000000000113cf2 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x000000000006e536 : test byte ptr [rbp + 0x48000000], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000197478 : test byte ptr [rbp - 0x13], cl ; jmp rsp
0x00000000001975ec : test byte ptr [rbp - 0x6b0c0000], dh ; in eax, dx ; jmp rsp
0x00000000000b7c17 : test byte ptr [rbp - 0x73], 0x2c ; mov ah, 0xe9 ; ret
0x000000000007550e : test byte ptr [rbp - 0x77000000], dh ; ret 0xd089
0x000000000013e4b9 : test byte ptr [rbp - 0x7c000002], dh ; rol byte ptr [rcx], 0x39 ; ret
0x00000000000663b8 : test byte ptr [rbp - 0x7cfffffe], ah ; ret 0x3901
0x000000000007d776 : test byte ptr [rbp - 0xa000000], ch ; ret
0x000000000007e23f : test byte ptr [rbp - 0xa000000], dl ; ret
0x00000000001132ec : test byte ptr [rbx + 0x1c], 0x20 ; je 0x113358 ; xor eax, eax ; pop rbx ; ret
0x00000000000f3fa8 : test byte ptr [rbx + 1], dh ; add byte ptr [rax], al ; call 0x20280
0x00000000000f0c7c : test byte ptr [rbx - 0x76000004], ah ; ret 0xdb31
0x0000000000058397 : test byte ptr [rbx - 0x7c00001b], bh ; ret
0x0000000000084bde : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000842df : test byte ptr [rbx], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008676e : test byte ptr [rbx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000000975ab : test byte ptr [rcx + 0xf], 0x95 ; ret 0x8445
0x000000000011714f : test byte ptr [rcx + rax], bh ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000879cf : test byte ptr [rcx + rax], bh ; add byte ptr [rcx + rcx*4 - 0xa], cl ; call rax
0x00000000000378b2 : test byte ptr [rcx + rcx*4 - 0x11], 0x48 ; mov edx, ebp ; call r15
0x000000000003dad1 : test byte ptr [rcx + rcx*4 - 0x11], 0xf ; xchg eax, ebp ; ret 0x941
0x00000000000ba563 : test byte ptr [rcx + rcx*4 - 0x19], 0x4d ; mov ecx, edi ; call rbx
0x00000000000affb3 : test byte ptr [rcx - 0x48], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000050302 : test byte ptr [rcx - 0x77000000], dh ; ret 0xe283
0x00000000001027f2 : test byte ptr [rcx - 0x77], 0xd4 ; mov rbp, rax ; call rax
0x00000000000d9b62 : test byte ptr [rcx - 0x7cfffffb], bh ; ret 0x3902
0x00000000000c76ea : test byte ptr [rcx - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000084607 : test byte ptr [rcx - 0xa000000], dl ; ret
0x000000000019b400 : test byte ptr [rcx - 6], ah ; call rsp
0x0000000000144ff6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000022c7b : test byte ptr [rcx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122e00 : test byte ptr [rcx], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000d17d6 : test byte ptr [rdi + rdi*8 - 1], dh ; dec dword ptr [rax - 0x7d] ; ret
0x000000000005749b : test byte ptr [rdi - 0x7600000c], dh ; ret
0x000000000004764e : test byte ptr [rdi - 0x7b000000], bh ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0x854d
0x00000000001383cc : test byte ptr [rdi - 0x7d000000], al ; ret 0x3901
0x000000000009d9da : test byte ptr [rdi - 0x8fffff5], bh ; ret 0
0x000000000009d4ed : test byte ptr [rdi - 0x8fffff6], ch ; ret 0
0x0000000000121573 : test byte ptr [rdi], 0x84 ; mov byte ptr [rax], 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000000b6dfc : test byte ptr [rdi], 0x84 ; ret
0x0000000000102c6a : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000024ab3 : test byte ptr [rdi], 0x85 ; ret 3
0x00000000000ecf79 : test byte ptr [rdi], 0x95 ; ret 0x3145
0x000000000005feba : test byte ptr [rdi], 0x9f ; ret 0xd629
0x0000000000077412 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077422 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000a66a8 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000009601c : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000197f70 : test byte ptr [rdi], bl ; out dx, eax ; jmp rsp
0x0000000000096004 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000000ee1a1 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000000000026552 : test byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000000000002de84 : test byte ptr [rdx + 0x200], al ; ret
0x00000000001b057c : test byte ptr [rdx + 1], cl ; add byte ptr [rax], dl ; pop rbx ; cmc ; jmp qword ptr [rcx]
0x000000000019af9c : test byte ptr [rdx + rax], ch ; add byte ptr [rbx + rax], dh ; cli ; call rsp
0x000000000007d9be : test byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; mov rdx, rax ; jmp 0x7d9e7
0x00000000000c47d1 : test byte ptr [rdx - 0x16000016], bh ; ret 0xfff3
0x000000000019ae24 : test byte ptr [rdx], ah ; add al, byte ptr [rax] ; test cl, cl ; stc ; call rsp
0x00000000001abd7c : test byte ptr [rdx], al ; add dword ptr [rax], eax ; xor ch, ah ; call qword ptr [rsi]
0x00000000000662ca : test byte ptr [rdx], cl ; or al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001acd7c : test byte ptr [rdx], dl ; add dword ptr [rax], eax ; loopne 0x1acd62 ; jmp qword ptr [rcx]
0x000000000013418c : test byte ptr [rip + 0x48ffffff], dl ; mov edi, ebp ; call rax
0x0000000000110ba4 : test byte ptr [rip - 0x76ffffff], bl ; ret 0x8944
0x00000000000f0ece : test byte ptr [rip - 0x7a000001], ah ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000008b95d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000000809d6 : test byte ptr [rsi + rax - 0x9bf0000], cl ; ret 0xf01
0x00000000001992c8 : test byte ptr [rsi + rsi*8], dl ; call rsp
0x0000000000197cb0 : test byte ptr [rsi - 0x12], bl ; jmp rsp
0x0000000000195c5c : test byte ptr [rsi - 0x79790004], 0xfc ; call qword ptr [rsi]
0x000000000009d4f9 : test byte ptr [rsi - 0x8fffff6], cl ; ret 0
0x0000000000032e75 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008b79d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000343b5 : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000001af97c : test byte ptr [rsi], bh ; add dword ptr [rax], eax ; add byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x000000000002b95d : test byte ptr [rsi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000019ac8c : test byte ptr [rsi], dl ; add al, byte ptr [rax] ; xor al, 0x87 ; stc ; call rsp
0x00000000001224ee : test byte ptr [rsp + rax - 0x7cb80000], ch ; ret 0x4104
0x00000000000aabe2 : test ch, 0xf0 ; je 0xaabdb ; movzx eax, cl ; pop rbx ; ret
0x00000000000bd9ef : test ch, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a4c39 : test ch, ch ; call qword ptr [rdx]
0x000000000012e308 : test ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x0000000000111407 : test cl, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dc59a : test cl, cl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000012664b : test cl, cl ; jne 0x12659c ; ret
0x000000000009eb28 : test cl, cl ; jne 0x9eb1d ; ret
0x000000000009ec67 : test cl, cl ; jne 0x9ec5e ; xor eax, eax ; ret
0x00000000000aa15f : test cl, cl ; jne 0xaa154 ; ret
0x00000000000aa20f : test cl, cl ; jne 0xaa204 ; ret
0x00000000000aa4cf : test cl, cl ; jne 0xaa4c8 ; sub rax, 1 ; ret
0x000000000019ae28 : test cl, cl ; stc ; call rsp
0x00000000000aac0a : test dh, 0xf0 ; je 0xaabd9 ; movzx eax, dl ; pop rbx ; ret
0x00000000000aac0a : test dh, 0xf0 ; je 0xaabdb ; movzx eax, dl ; pop rbx ; ret
0x000000000012568c : test dh, bh ; add al, byte ptr [rax] ; add byte ptr [rcx], bh ; ret
0x000000000006f0c4 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000018870d : test dh, bl ; jmp qword ptr [rsi]
0x00000000000c18fd : test dh, ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009ed20 : test dh, dh ; jne 0x9ed17 ; mov qword ptr [rdx], rcx ; ret
0x0000000000023b85 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000195cf4 : test dil, spl ; call rdx
0x0000000000170924 : test dl, 0x40 ; jne 0x1708e9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000170952 : test dl, 4 ; jne 0x1708e9 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000bd86b : test dl, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x0000000000033bd2 : test dl, dl ; jne 0x33bb4 ; ret
0x000000000009eae4 : test dl, dl ; jne 0x9eadd ; ret
0x00000000000aa37f : test dl, dl ; jne 0xaa378 ; lea rax, qword ptr [rcx - 1] ; ret
0x00000000000d15ce : test dl, dl ; jne 0xd15b6 ; ret
0x000000000008f7f9 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x00000000000a69db : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000a7eeb : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a7deb : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000c00b0 : test dword ptr [rax + rax], ecx ; add rax, rdi ; jmp rax
0x000000000006960e : test dword ptr [rax - 0x16000005], edi ; ret 0xffff
0x000000000005c8d4 : test dword ptr [rax - 0x17000007], ebx ; ret 0xfc2f
0x000000000011c26f : test dword ptr [rax - 0x77], 0x1d8948de ; ret 0x2a
0x000000000005cd93 : test dword ptr [rax - 0x7a000007], edi ; ror byte ptr [rdi], 0x85 ; ret
0x000000000006f0c5 : test dword ptr [rax], 0x89480000 ; ret 0x8b48
0x0000000000197f6d : test dword ptr [rax], 0xef1f8400 ; jmp rsp
0x00000000001ab245 : test dword ptr [rax], 0xf22c3800 ; jmp rcx
0x00000000000d7769 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8341
0x0000000000085e53 : test dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000dd1d4 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add al, ch ; ret 0xf426
0x0000000000055b89 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000085547 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000006589a : test dword ptr [rax], esi ; adc dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000085546 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000947cf : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000009f08e : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000abb10 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000ac438 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, qword ptr [rdi - 0x10] ; ret
0x0000000000168b98 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000168b78 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x0000000000168a90 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000a7fe0 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x000000000016f2a7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f6f6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002b83 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000e45c4 : test dword ptr [rbx - 0xa000000], esi ; ret 0x7420
0x000000000009eff8 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000007e600 : test dword ptr [rbx], ebx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret
0x000000000003b4fb : test dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008eada : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000008f510 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x000000000016889a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x000000000016f27d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a65c2 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x000000000016f18d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016f09d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000abb57 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000001727d7 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000abb27 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x0000000000168c3a : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000037b7e : test dword ptr [rcx - 0x3f], 0x834904eb ; ret
0x000000000005d532 : test dword ptr [rcx - 0x7600000a], ecx ; ret
0x00000000000f2102 : test dword ptr [rcx], ecx ; add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000817f2 : test dword ptr [rcx], edi ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; ret 0x976
0x000000000008f6fa : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x00000000000a6727 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a6707 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000035f23 : test dword ptr [rdi + rcx*8], eax ; setne al ; movzx eax, al ; ret
0x00000000000945e5 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000036106 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x00000000000a68c1 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000a7cc9 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00000000001705f2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016efc2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010360d : test dword ptr [rdx], 0xf6310000 ; mov rdi, r14 ; call rbx
0x000000000003b9cb : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000168b57 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000ac4dd : test dword ptr [rsi + 0x48000000], edi ; lea eax, dword ptr [rdi - 0x10] ; ret
0x0000000000172162 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a66e5 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000a66c5 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000a65dd : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000000948ce : test dword ptr [rsi - 0xc000005], esp ; ret
0x00000000000d7753 : test dword ptr [rsi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x000000000016f4c8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x0000000000057fd1 : test dword ptr [rsp + rsi*8 - 1], edi ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfc78
0x00000000000cd3d3 : test eax, 0x39fffffe ; ret
0x0000000000117b77 : test eax, 0x48f88948 ; add esp, 8 ; ret
0x0000000000197475 : test eax, 0x4d840000 ; in eax, dx ; jmp rsp
0x00000000001a6405 : test eax, 0x4e780000 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a643d : test eax, 0x4f100000 ; out dx, al ; call qword ptr [rdx]
0x00000000001850a0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000158ff6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000034c58 : test eax, 0x7fffff ; je 0x34c51 ; ret
0x00000000000659cf : test eax, 0x83000000 ; ret 0x8308
0x00000000000608fc : test eax, 0x89000007 ; ret 0x348
0x000000000008958c : test eax, 0x89480033 ; add al, 0x24 ; call qword ptr [rdx]
0x000000000019613d : test eax, 0xa940fffc ; cld ; call rax
0x0000000000196339 : test eax, 0xa950fffc ; cld ; jmp rax
0x00000000001961f9 : test eax, 0xa982fffc ; cld ; call qword ptr [rdx]
0x0000000000194fcd : test eax, 0xaa4efffd ; std ; jmp rsi
0x000000000018a4b6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000001b6465 : test eax, 0xe1f80001 ; sti ; call rsi
0x0000000000105f8f : test eax, eax ; cmove eax, edx ; ret
0x000000000003a6f4 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x00000000001053dc : test eax, eax ; je 0x105480 ; call rax
0x0000000000105553 : test eax, eax ; je 0x105658 ; call rax
0x0000000000115538 : test eax, eax ; je 0x115544 ; ret
0x0000000000115830 : test eax, eax ; je 0x115864 ; call rax
0x000000000011765a : test eax, eax ; je 0x117670 ; add rsp, 8 ; ret
0x000000000011fa65 : test eax, eax ; je 0x11fa75 ; mov rdi, rbx ; call rax
0x000000000011fd5d : test eax, eax ; je 0x11fd6d ; mov rdi, rbx ; call rax
0x0000000000128300 : test eax, eax ; je 0x12830c ; ret
0x000000000012b001 : test eax, eax ; je 0x12afef ; xor eax, eax ; pop rbx ; ret
0x000000000012b841 : test eax, eax ; je 0x12b851 ; mov rdi, rsp ; call rax
0x000000000012b92c : test eax, eax ; je 0x12b93c ; mov rdi, rsp ; call rax
0x000000000012c1e2 : test eax, eax ; je 0x12c1f2 ; mov rdi, rbp ; call rax
0x000000000012c566 : test eax, eax ; je 0x12c574 ; ret
0x000000000012d273 : test eax, eax ; je 0x12d283 ; mov rdi, r14 ; call rax
0x000000000012d7f1 : test eax, eax ; je 0x12d806 ; xor eax, eax ; ret
0x0000000000132c08 : test eax, eax ; je 0x132c18 ; mov rdi, r12 ; call rax
0x0000000000132de9 : test eax, eax ; je 0x132dfb ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001340c3 : test eax, eax ; je 0x1340d3 ; mov rdi, r13 ; call rax
0x00000000001342b6 : test eax, eax ; je 0x1342c6 ; mov rdi, rbp ; call rax
0x00000000001344d6 : test eax, eax ; je 0x1344e6 ; mov rdi, rbp ; call rax
0x0000000000134fcd : test eax, eax ; je 0x134fdf ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000135679 : test eax, eax ; je 0x135689 ; mov rdi, r12 ; call rax
0x00000000001359ed : test eax, eax ; je 0x1359ff ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000138278 : test eax, eax ; je 0x13820a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001381fd : test eax, eax ; je 0x13820d ; pop rbx ; ret
0x00000000001386af : test eax, eax ; je 0x1386c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000138f69 : test eax, eax ; je 0x138f7b ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000139682 : test eax, eax ; je 0x139694 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000013dd36 : test eax, eax ; je 0x13dd46 ; xor eax, eax ; ret
0x0000000000145a03 : test eax, eax ; je 0x145a0f ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001469e8 : test eax, eax ; je 0x1469f4 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000173f3c : test eax, eax ; je 0x173f4b ; call rax
0x000000000002b023 : test eax, eax ; je 0x2b02d ; call rax
0x000000000002c379 : test eax, eax ; je 0x2c383 ; call rax
0x000000000007848d : test eax, eax ; je 0x7849d ; pop rbx ; ret
0x000000000007e072 : test eax, eax ; je 0x7e07c ; call rax
0x0000000000085569 : test eax, eax ; je 0x85573 ; call rax
0x000000000008b520 : test eax, eax ; je 0x8b538 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c758e : test eax, eax ; je 0xc75b0 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000cc39f : test eax, eax ; je 0xcc3a9 ; call rax
0x00000000000cc581 : test eax, eax ; je 0xcc58e ; call rax
0x00000000000fd39c : test eax, eax ; je 0xfd3a7 ; ret
0x00000000000ff211 : test eax, eax ; je 0xff220 ; mov qword ptr [rax], rdx ; ret
0x00000000001073a2 : test eax, eax ; jl 0x1073eb ; je 0x1073af ; ret
0x0000000000114a76 : test eax, eax ; jne 0x114a89 ; mov eax, 1 ; ret
0x0000000000114aa6 : test eax, eax ; jne 0x114ab6 ; xor eax, eax ; ret
0x0000000000114ad6 : test eax, eax ; jne 0x114ae6 ; xor eax, eax ; ret
0x0000000000114b06 : test eax, eax ; jne 0x114b16 ; xor eax, eax ; ret
0x0000000000114b36 : test eax, eax ; jne 0x114b46 ; xor eax, eax ; ret
0x0000000000114b66 : test eax, eax ; jne 0x114b76 ; xor eax, eax ; ret
0x0000000000114b96 : test eax, eax ; jne 0x114ba6 ; xor eax, eax ; ret
0x0000000000114bc6 : test eax, eax ; jne 0x114bd6 ; xor eax, eax ; ret
0x0000000000114bf6 : test eax, eax ; jne 0x114c06 ; xor eax, eax ; ret
0x0000000000114c26 : test eax, eax ; jne 0x114c36 ; xor eax, eax ; ret
0x0000000000114c56 : test eax, eax ; jne 0x114c66 ; xor eax, eax ; ret
0x0000000000114c86 : test eax, eax ; jne 0x114c96 ; xor eax, eax ; ret
0x0000000000114cb6 : test eax, eax ; jne 0x114cc6 ; xor eax, eax ; ret
0x0000000000114ce6 : test eax, eax ; jne 0x114cf6 ; xor eax, eax ; ret
0x0000000000114d16 : test eax, eax ; jne 0x114d26 ; xor eax, eax ; ret
0x0000000000114d46 : test eax, eax ; jne 0x114d56 ; xor eax, eax ; ret
0x0000000000114d76 : test eax, eax ; jne 0x114d86 ; xor eax, eax ; ret
0x0000000000114da6 : test eax, eax ; jne 0x114db6 ; xor eax, eax ; ret
0x0000000000114dd6 : test eax, eax ; jne 0x114de6 ; xor eax, eax ; ret
0x0000000000114e06 : test eax, eax ; jne 0x114e16 ; xor eax, eax ; ret
0x0000000000114e36 : test eax, eax ; jne 0x114e46 ; xor eax, eax ; ret
0x0000000000114e96 : test eax, eax ; jne 0x114ea6 ; xor eax, eax ; ret
0x0000000000114ec6 : test eax, eax ; jne 0x114ed6 ; xor eax, eax ; ret
0x0000000000114ef6 : test eax, eax ; jne 0x114f06 ; xor eax, eax ; ret
0x0000000000114f26 : test eax, eax ; jne 0x114f36 ; xor eax, eax ; ret
0x0000000000114f56 : test eax, eax ; jne 0x114f66 ; xor eax, eax ; ret
0x0000000000114f86 : test eax, eax ; jne 0x114f96 ; xor eax, eax ; ret
0x0000000000114fb6 : test eax, eax ; jne 0x114fc6 ; xor eax, eax ; ret
0x0000000000114fe6 : test eax, eax ; jne 0x114ff6 ; xor eax, eax ; ret
0x0000000000115016 : test eax, eax ; jne 0x115026 ; xor eax, eax ; ret
0x0000000000115060 : test eax, eax ; jne 0x11505b ; pop rdx ; pop r10 ; ret
0x0000000000115153 : test eax, eax ; jne 0x115165 ; ret
0x00000000001154f5 : test eax, eax ; jne 0x115499 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000012873a : test eax, eax ; jne 0x128744 ; ret
0x0000000000133006 : test eax, eax ; jne 0x133014 ; ret
0x0000000000138ee5 : test eax, eax ; jne 0x138ed5 ; pop rbx ; ret
0x0000000000139166 : test eax, eax ; jne 0x139174 ; ret
0x0000000000140e6a : test eax, eax ; jne 0x140e7f ; xor eax, eax ; pop rbx ; ret
0x0000000000144376 : test eax, eax ; jne 0x144386 ; xor eax, eax ; ret
0x00000000001443a6 : test eax, eax ; jne 0x1443b6 ; xor eax, eax ; ret
0x00000000001443d6 : test eax, eax ; jne 0x1443e6 ; xor eax, eax ; ret
0x0000000000144406 : test eax, eax ; jne 0x144416 ; xor eax, eax ; ret
0x0000000000144436 : test eax, eax ; jne 0x144446 ; xor eax, eax ; ret
0x0000000000144466 : test eax, eax ; jne 0x144476 ; xor eax, eax ; ret
0x0000000000174456 : test eax, eax ; jne 0x174465 ; ret
0x0000000000035306 : test eax, eax ; jne 0x35315 ; ret
0x000000000006acbf : test eax, eax ; jne 0x6acd8 ; mov rax, rbx ; pop rbx ; ret
0x000000000007c844 : test eax, eax ; jne 0x7c83d ; ret
0x000000000007d8d5 : test eax, eax ; jne 0x7d90a ; xor edi, edi ; call qword ptr [r15]
0x00000000000895cf : test eax, eax ; jne 0x895c5 ; ret
0x000000000008d80c : test eax, eax ; jne 0x8d7d6 ; add rsp, 8 ; ret
0x000000000008d82f : test eax, eax ; jne 0x8d848 ; add rsp, 8 ; ret
0x000000000008eb17 : test eax, eax ; jne 0x8eb77 ; xor rax, rax ; ret
0x000000000009f0c8 : test eax, eax ; jne 0x9f146 ; xor eax, eax ; ret
0x00000000000ac621 : test eax, eax ; jne 0xac5f5 ; ret
0x00000000000ac6da : test eax, eax ; jne 0xac6d6 ; xor eax, eax ; ret
0x00000000000fb69d : test eax, eax ; jne 0xfb648 ; mov edi, ebp ; call 0xf78b8
0x00000000000fe0bf : test eax, eax ; jne 0xfe097 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe280 : test eax, eax ; jne 0xfe257 ; xor eax, eax ; pop rbx ; ret
0x0000000000075adb : test eax, eax ; js 0x75aed ; ret
0x0000000000085816 : test eax, eax ; js 0x85825 ; ret
0x00000000000ac04d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xac021 ; ret
0x000000000012afb6 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000022d7a : test eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000e45b5 : test eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7408
0x00000000000835dd : test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000000000aebd5 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xaebef
0x00000000000b14f6 : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb150f
0x00000000000b3cad : test ebp, ebp ; mov r13, r15 ; setne dl ; jmp 0xb3ccf
0x000000000008ea40 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000084ab7 : test ebp, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000007815e : test ebx, ebx ; jne 0x78178 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac736 : test ebx, ebx ; jne 0xac718 ; mov rax, rdi ; ret
0x0000000000174534 : test ebx, ebx ; mov rdx, rbx ; jne 0x174531 ; pop rbx ; ret
0x0000000000170912 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000017091f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002b394 : test ecx, ecx ; je 0x2b39e ; call rcx
0x000000000006b458 : test ecx, ecx ; je 0x6b465 ; ret
0x00000000000ac60b : test ecx, ecx ; jne 0xac605 ; ret
0x00000000000ada89 : test ecx, ecx ; jne 0xada48 ; mov rax, rdx ; ret
0x00000000000aae13 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xaae0f ; ret
0x0000000000194f41 : test edi, ebx ; call qword ptr [rax + 0x10fffb86]
0x00000000000878a0 : test edi, edi ; je 0x878b9 ; mov eax, 0x16 ; ret
0x000000000011fd41 : test edi, edi ; jne 0x11fd35 ; pop rbx ; ret
0x000000000017423b : test edi, edi ; jne 0x17422f ; pop rbx ; ret
0x00000000001193f2 : test edi, edi ; js 0x119409 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000195ce9 : test edi, esp ; jmp qword ptr [rdx]
0x0000000000195c2d : test edi, esp ; jmp rax
0x000000000012de00 : test edx, edx ; je 0x12de10 ; mov rdi, rbp ; call rdx
0x0000000000173e24 : test edx, edx ; je 0x173e2e ; call rdx
0x000000000007781a : test edx, edx ; je 0x77831 ; mov eax, 0xffffffff ; ret
0x0000000000077b9a : test edx, edx ; je 0x77bb1 ; mov eax, 0xffffffff ; ret
0x000000000008b752 : test edx, edx ; je 0x8b760 ; bsf eax, edx ; ret
0x000000000008b752 : test edx, edx ; je 0x8b761 ; bsf eax, edx ; ret
0x000000000008b7fb : test edx, edx ; je 0x8b817 ; bsf rax, rdx ; ret
0x000000000008b7fb : test edx, edx ; je 0x8b818 ; bsf rax, rdx ; ret
0x000000000008b9ca : test edx, edx ; je 0x8b9f7 ; bsf rax, rdx ; ret
0x000000000008b9ca : test edx, edx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x00000000000cc4f0 : test edx, edx ; je 0xcc4fd ; call rdx
0x000000000011539d : test edx, edx ; jne 0x115399 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000013c440 : test edx, edx ; jne 0x13c459 ; mov eax, 1 ; ret
0x000000000013c480 : test edx, edx ; jne 0x13c499 ; mov eax, 1 ; ret
0x0000000000071bff : test edx, edx ; jne 0x71bf5 ; ret
0x000000000007a393 : test edx, edx ; jne 0x7a3a4 ; ret
0x000000000007af3f : test edx, edx ; jne 0x7af35 ; ret
0x0000000000089679 : test edx, edx ; jne 0x89675 ; ret
0x00000000000adaca : test edx, edx ; jne 0xadac5 ; ret
0x000000000002048e : test edx, edx ; jns 0x20382 ; jmp 0x20463
0x00000000000ac94f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xac94f ; ret
0x00000000000bb24f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xbb250 ; ret
0x000000000003626a : test edx, edx ; sete al ; ret
0x0000000000170905 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000086643 : test esi, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000001b1371 : test esi, ebp ; jmp rax
0x00000000001886dd : test esi, ebx ; jmp qword ptr [rax]
0x000000000008b8c1 : test esi, esi ; jne 0x8b8d0 ; xor rax, rax ; ret
0x0000000000096aee : test esi, esi ; jne 0x96b01 ; jmp 0x96abb
0x00000000001ab244 : test qword ptr [rax], -0xdd3c800 ; jmp rcx
0x0000000000036105 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000ac735 : test r11d, r11d ; jne 0xac719 ; mov rax, rdi ; ret
0x000000000009eb81 : test r8b, r8b ; jne 0x9eb66 ; ret
0x000000000009ecbf : test r8b, r8b ; jne 0x9eca7 ; xor eax, eax ; ret
0x0000000000145a02 : test r8d, r8d ; je 0x145a10 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001469e7 : test r8d, r8d ; je 0x1469f5 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000ac620 : test r8d, r8d ; jne 0xac5f6 ; ret
0x00000000000ada88 : test r9d, r9d ; jne 0xada49 ; mov rax, rdx ; ret
0x00000000001053db : test rax, rax ; je 0x105481 ; call rax
0x0000000000105552 : test rax, rax ; je 0x105659 ; call rax
0x0000000000115537 : test rax, rax ; je 0x115545 ; ret
0x000000000011582f : test rax, rax ; je 0x115865 ; call rax
0x0000000000117659 : test rax, rax ; je 0x117671 ; add rsp, 8 ; ret
0x000000000011fa64 : test rax, rax ; je 0x11fa76 ; mov rdi, rbx ; call rax
0x000000000011fd5c : test rax, rax ; je 0x11fd6e ; mov rdi, rbx ; call rax
0x000000000012b000 : test rax, rax ; je 0x12aff0 ; xor eax, eax ; pop rbx ; ret
0x000000000012b840 : test rax, rax ; je 0x12b852 ; mov rdi, rsp ; call rax
0x000000000012b92b : test rax, rax ; je 0x12b93d ; mov rdi, rsp ; call rax
0x000000000012c1e1 : test rax, rax ; je 0x12c1f3 ; mov rdi, rbp ; call rax
0x000000000012d272 : test rax, rax ; je 0x12d284 ; mov rdi, r14 ; call rax
0x0000000000132c07 : test rax, rax ; je 0x132c19 ; mov rdi, r12 ; call rax
0x0000000000132de8 : test rax, rax ; je 0x132dfc ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001340c2 : test rax, rax ; je 0x1340d4 ; mov rdi, r13 ; call rax
0x00000000001342b5 : test rax, rax ; je 0x1342c7 ; mov rdi, rbp ; call rax
0x00000000001344d5 : test rax, rax ; je 0x1344e7 ; mov rdi, rbp ; call rax
0x0000000000134fcc : test rax, rax ; je 0x134fe0 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000135678 : test rax, rax ; je 0x13568a ; mov rdi, r12 ; call rax
0x00000000001359ec : test rax, rax ; je 0x135a00 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x00000000001381fc : test rax, rax ; je 0x13820e ; pop rbx ; ret
0x0000000000138f68 : test rax, rax ; je 0x138f7c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000139681 : test rax, rax ; je 0x139695 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000173f3b : test rax, rax ; je 0x173f4c ; call rax
0x000000000002b022 : test rax, rax ; je 0x2b02e ; call rax
0x000000000002c378 : test rax, rax ; je 0x2c384 ; call rax
0x000000000007848c : test rax, rax ; je 0x7849e ; pop rbx ; ret
0x000000000007e071 : test rax, rax ; je 0x7e07d ; call rax
0x0000000000085568 : test rax, rax ; je 0x85574 ; call rax
0x000000000008b51f : test rax, rax ; je 0x8b539 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc39e : test rax, rax ; je 0xcc3aa ; call rax
0x00000000000cc580 : test rax, rax ; je 0xcc58f ; call rax
0x00000000000fd39b : test rax, rax ; je 0xfd3a8 ; ret
0x00000000000ff210 : test rax, rax ; je 0xff221 ; mov qword ptr [rax], rdx ; ret
0x00000000001073a1 : test rax, rax ; jl 0x1073ec ; je 0x1073b0 ; ret
0x0000000000138ee4 : test rax, rax ; jne 0x138ed6 ; pop rbx ; ret
0x000000000007c843 : test rax, rax ; jne 0x7c83e ; ret
0x000000000007d8d4 : test rax, rax ; jne 0x7d90b ; xor edi, edi ; call qword ptr [r15]
0x00000000000895ce : test rax, rax ; jne 0x895c6 ; ret
0x00000000000fe0be : test rax, rax ; jne 0xfe098 ; xor eax, eax ; pop rbx ; ret
0x00000000000fe27f : test rax, rax ; jne 0xfe258 ; xor eax, eax ; pop rbx ; ret
0x000000000007815d : test rbx, rbx ; jne 0x78179 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002b393 : test rcx, rcx ; je 0x2b39f ; call rcx
0x000000000011fd40 : test rdi, rdi ; jne 0x11fd36 ; pop rbx ; ret
0x000000000011fd3f : test rdi, rdi ; jne 0x11fd37 ; pop rbx ; ret
0x000000000017423a : test rdi, rdi ; jne 0x174230 ; pop rbx ; ret
0x000000000012ddff : test rdx, rdx ; je 0x12de11 ; mov rdi, rbp ; call rdx
0x0000000000173e23 : test rdx, rdx ; je 0x173e2f ; call rdx
0x000000000008b7fa : test rdx, rdx ; je 0x8b818 ; bsf rax, rdx ; ret
0x000000000008b7fa : test rdx, rdx ; je 0x8b819 ; bsf rax, rdx ; ret
0x000000000008b9c9 : test rdx, rdx ; je 0x8b9f8 ; bsf rax, rdx ; ret
0x000000000008b9c9 : test rdx, rdx ; je 0x8b9f9 ; bsf rax, rdx ; ret
0x00000000000cc4ef : test rdx, rdx ; je 0xcc4fe ; call rdx
0x0000000000071bfe : test rdx, rdx ; jne 0x71bf6 ; ret
0x000000000007a392 : test rdx, rdx ; jne 0x7a3a5 ; ret
0x000000000007af3e : test rdx, rdx ; jne 0x7af36 ; ret
0x0000000000089678 : test rdx, rdx ; jne 0x89676 ; ret
0x000000000008b8c0 : test rsi, rsi ; jne 0x8b8d1 ; xor rax, rax ; ret
0x0000000000096aed : test rsi, rsi ; jne 0x96b02 ; jmp 0x96abc
0x000000000009ed1f : test sil, sil ; jne 0x9ed18 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b82 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000079945 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000009fb7a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000014ddca : vmovdqu xmmword ptr [rax + 0x70], xmm12 ; ret
0x000000000014dd00 : vmovdqu xmmword ptr [rcx - 0x10], xmm12 ; ret
0x000000000014dac9 : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm7 ; ret
0x00000000000aa5d5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000014dc0f : vmovdqu xmmword ptr [rdx - 0x10], xmm12 ; mov rax, r8 ; ret
0x000000000014da33 : vmovdqu xmmword ptr [rdx - 0x10], xmm15 ; ret
0x000000000014da96 : vmovdqu xmmword ptr [rdx - 0x10], xmm7 ; ret
0x00000000000aa5d9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000009fb66 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000009fb4d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x00000000000aa5cb : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aa5cf : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x00000000000aa5e4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x00000000000aa5e8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x000000000009fe83 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000009fd1c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000009fb1e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x000000000009fae2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000009ffe5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x00000000000aa788 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x00000000000aa6eb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x00000000000aa58a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000014aa31 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000329d5 : vpsubsb xmm8, xmm15, xmmword ptr [rbp + rcx*4 + 5] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000991c4 : vpsubusw xmm8, xmm14, xmmword ptr [r13 - 0x77] ; ret 0x1374
0x0000000000172aa9 : vzeroupper ; ret
0x0000000000197265 : wait ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp ebp, ebx ; jmp rsp
0x00000000001adea1 : wait ; hlt ; jmp qword ptr [rcx]
0x000000000004d3d1 : wait ; imul esi, dword ptr [rdi], 0 ; call rax
0x000000000002cdd1 : wait ; jbe 0x2cde0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000101f81 : wait ; push rdx ; sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000f3451 : wait ; ret
0x000000000010a304 : wait ; sub eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007cc18 : wait ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a9d9d : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9e1f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9f21 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bd4 : xabort -0xd ; ret
0x0000000000002bd0 : xbegin 0xfffffffff8c6efd0 ; ret
0x0000000000195ce5 : xchg ah, bh ; call qword ptr [rdx + 0x22fffc85]
0x0000000000195c61 : xchg ah, bh ; call qword ptr [rsi]
0x0000000000195e21 : xchg ah, bh ; call rax
0x0000000000195e1d : xchg ah, bh ; inc dword ptr [rax - 0x7a] ; cld ; call rax
0x0000000000195da1 : xchg ah, bh ; jmp rsp
0x000000000014580f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000146033 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014797f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001453ff : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000146123 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145f43 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f0b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000198391 : xchg al, dh ; jmp rsp
0x000000000014571b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b92c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b14c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000014b53c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ad5c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d85d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000194f45 : xchg bl, bh ; call qword ptr [rax]
0x000000000014c361 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000014d561 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cc61 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014cf61 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c659 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014698b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x00000000001484df : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000147cbf : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000014518f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014749f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000001454cf : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000001464e3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000000d02dc : xchg byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000e80f7 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret
0x00000000001457eb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014aefb : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000be4d3 : xchg byte ptr [rax], dh ; add byte ptr [rax - 0x77], cl ; jmp 0xffffffffbece6e2d
0x00000000001458bb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147fff : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000145c73 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x00000000001477df : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000146fbf : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000014819f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000014566f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001466c3 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145e53 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000144e5f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x00000000001a71b1 : xchg byte ptr [rbx], al ; mov word ptr [rdx], es ; push rdx ; ret
0x000000000002ebba : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x00000000001468a3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000014525f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000014b3ec : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014ac0c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bd1c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014573f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001467b3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000144f2f : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000001472ff : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144fd1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001460f5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001461e5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000146005 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014532f : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000195774 : xchg byte ptr [rsi - 4], bl ; call qword ptr [rsi]
0x000000000014c906 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147435 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000148135 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014d806 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cf06 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014cc06 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000147c55 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014b2ed : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014c5fe : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014bc1d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014559f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000145d63 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x0000000000149c8f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000149aaf : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014a487 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001493a7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000014a2a7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000148475 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147775 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000147295 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000147f95 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000014b43d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000025b1 : xchg dh, ch ; ret 0x88ad
0x000000000014ac5d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000144ff5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000104b2a : xchg dl, bh ; dec dword ptr [rax + 0x39] ; ret
0x0000000000145f15 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145d35 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145e25 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000145c45 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000b9ba3 : xchg dword ptr [rax + 0x39], ecx ; ret 0x8946
0x00000000000d3fb4 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000002f50f : xchg dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x000000000002691b : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x8901
0x00000000000624e9 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x00000000000ac61f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005ef3b : xchg dword ptr [rbp - 0x7cfffff0], ebp ; ret 0x8308
0x000000000005744d : xchg dword ptr [rbx + rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000681a5 : xchg dword ptr [rbx - 0x76fffff6], ebp ; ret 0x348
0x000000000010d0c4 : xchg dword ptr [rbx], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000182d6c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000008638c : xchg dword ptr [rcx + rax - 0x7cb70000], ebx ; ret 0xe96e
0x00000000000f67c1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000608fb : xchg dword ptr [rcx - 0x76fffff9], ebp ; ret 0x348
0x00000000000659ce : xchg dword ptr [rcx - 0x7d000000], ebp ; ret 0x8308
0x0000000000067897 : xchg dword ptr [rdi - 0x77000000], edi ; ret 0x348
0x000000000011505e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x11505d ; pop rdx ; pop r10 ; ret
0x00000000000f25eb : xchg dword ptr [rdx - 0x76000002], ebp ; ret 0x8d48
0x0000000000060d6b : xchg dword ptr [rsi - 0x77000000], ebp ; ret 0x348
0x00000000000671db : xchg dword ptr [rsi - 0x7d000000], edx ; ret 0x8308
0x0000000000182f0b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000148fe8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000072a26 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000007638f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007e240 : xchg eax, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000074f12 : xchg eax, ebp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x00000000001add01 : xchg eax, ebp ; hlt ; jmp qword ptr [rcx]
0x00000000001a9a89 : xchg eax, ebp ; int1 ; call qword ptr [rax]
0x000000000007bf3e : xchg eax, ebp ; nop ; mov rax, -1 ; ret
0x000000000011ce22 : xchg eax, ebp ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000002e197 : xchg eax, ebp ; pop rbp ; cmp dword ptr [rax], eax ; mov qword ptr fs:[rdx], rax ; ret
0x00000000000020d3 : xchg eax, ebp ; ret
0x00000000000b3cb3 : xchg eax, ebp ; ret 0x11eb
0x00000000000b1e74 : xchg eax, ebp ; ret 0x2041
0x00000000000b05c5 : xchg eax, ebp ; ret 0x294c
0x0000000000127808 : xchg eax, ebp ; ret 0x2c3c
0x00000000000ff92b : xchg eax, ebp ; ret 0x2f3c
0x00000000000ecf7b : xchg eax, ebp ; ret 0x3145
0x00000000000bc04c : xchg eax, ebp ; ret 0x3840
0x000000000009eb65 : xchg eax, ebp ; ret 0x3941
0x000000000006d007 : xchg eax, ebp ; ret 0x5389
0x0000000000035de5 : xchg eax, ebp ; ret 0x5489
0x000000000012abc5 : xchg eax, ebp ; ret 0x8041
0x00000000000d9ae7 : xchg eax, ebp ; ret 0x8341
0x00000000000826b0 : xchg eax, ebp ; ret 0x8348
0x00000000000975ae : xchg eax, ebp ; ret 0x8445
0x00000000000e06ef : xchg eax, ebp ; ret 0x8488
0x0000000000047656 : xchg eax, ebp ; ret 0x854d
0x00000000000ba57e : xchg eax, ebp ; ret 0x8b4c
0x00000000000b14fc : xchg eax, ebp ; ret 0x8eb
0x000000000003dad6 : xchg eax, ebp ; ret 0x941
0x0000000000030b17 : xchg eax, ebp ; ret 0x953d
0x00000000000aebdb : xchg eax, ebp ; ret 0x9eb
0x00000000000ba731 : xchg eax, ebp ; ret 0xa8e9
0x0000000000098969 : xchg eax, ebp ; ret 0xb60f
0x00000000000ff984 : xchg eax, ebp ; ret 0xc084
0x0000000000047541 : xchg eax, ebp ; ret 0xc221
0x000000000003c3da : xchg eax, ebp ; ret 0xd348
0x0000000000036941 : xchg eax, ebp ; ret 0xd521
0x00000000000ba5dc : xchg eax, ebp ; ret 0xd721
0x0000000000045c3f : xchg eax, ebp ; ret 0xdaf7
0x00000000001247a5 : xchg eax, ebp ; ret 0xe083
0x00000000000ad2b1 : xchg eax, ebp ; ret 0xe883
0x00000000000bce0f : xchg eax, ebp ; ret 0xf748
0x000000000012782f : xchg eax, ebp ; ret 0xf980
0x00000000000ad59e : xchg eax, ebp ; ret 0xf983
0x0000000000127be0 : xchg eax, ebp ; ret 0xfb80
0x00000000000d9bbd : xchg eax, ebp ; ret 0xfb83
0x0000000000136e1d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x136e86 ; ret
0x00000000000ff7c4 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000ea9ac : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rdi], 0x47 ; ret 0x90c3
0x000000000006b34a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000ea98e : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000136d1d : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007305d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000061b8b : xchg eax, ebp ; sar bl, 0xff ; dec dword ptr [rax + 0x39] ; ret 0x940f
0x00000000001bb301 : xchg eax, ebp ; sti ; jmp qword ptr [rdx]
0x0000000000002b81 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000081f56 : xchg eax, ebx ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000007b702 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000081567 : xchg eax, ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000016e410 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003959 : xchg eax, ebx ; and cl, ah ; ret
0x0000000000188835 : xchg eax, ebx ; call rdx
0x00000000001adaa9 : xchg eax, ebx ; hlt ; jmp qword ptr [rcx]
0x00000000000a5bec : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001510b2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000009a6fa : xchg eax, ebx ; ret
0x00000000000b862e : xchg eax, ebx ; ret 0x14c
0x0000000000037380 : xchg eax, ebx ; ret 0x3948
0x0000000000037ecd : xchg eax, ebx ; ret 0x3949
0x0000000000074cef : xchg eax, ebx ; ret 0x840
0x00000000000383a1 : xchg eax, ebx ; ret 0x8548
0x0000000000072494 : xchg eax, ebx ; ret 0xd108
0x00000000001a7b39 : xchg eax, ebx ; sti ; call qword ptr [rax]
0x000000000006c41c : xchg eax, ebx ; xor eax, 0x48b4800 ; ret 0x8548
0x000000000012e26e : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000084608 : xchg eax, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001a4c6d : xchg eax, ecx ; add byte ptr [rax], al ; test bpl, bpl ; call qword ptr [rdx]
0x0000000000063e48 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x00000000000e1265 : xchg eax, ecx ; add rdx, rcx ; jmp rdx
0x00000000001a91e9 : xchg eax, ecx ; cld ; jmp qword ptr [rbx]
0x00000000001ad9d1 : xchg eax, ecx ; hlt ; jmp qword ptr [rcx]
0x00000000001ad9e9 : xchg eax, ecx ; hlt ; jmp qword ptr [rsi]
0x0000000000198e41 : xchg eax, ecx ; hlt ; jmp rsp
0x000000000008783b : xchg eax, ecx ; mov bl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0xc6eb
0x0000000000148581 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000065d5b : xchg eax, ecx ; mov rdi, r15 ; call 0x71fd6
0x00000000001981a9 : xchg eax, ecx ; out dx, eax ; jmp rsp
0x00000000000e20dc : xchg eax, ecx ; ret
0x0000000000127b83 : xchg eax, ecx ; ret 0x29
0x0000000000146caf : xchg eax, ecx ; sub eax, edx ; ret
0x00000000000809e1 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000000000024aad : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 3
0x00000000001a521d : xchg eax, edi ; add byte ptr [rax], al ; xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x00000000000f688c : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000139925 : xchg eax, edi ; jmp 0xffffffffc29d992c
0x00000000001154f8 : xchg eax, edi ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x0000000000112285 : xchg eax, edi ; ret
0x0000000000045f27 : xchg eax, edi ; ret 0x870f
0x00000000000d2add : xchg eax, edi ; ret 0xd008
0x00000000000cd89e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000001099c6 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000f8b09 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000d85c6 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x00000000001bb069 : xchg eax, edi ; sti ; jmp qword ptr [rdx]
0x00000000001833b8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000009563a : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000061ba1 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret 0x7504
0x00000000001a4d3d : xchg eax, edx ; add byte ptr [rax], al ; mov al, 2 ; std ; jmp rsp
0x000000000007daba : xchg eax, edx ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000006da0e : xchg eax, edx ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000184c7d : xchg eax, edx ; jae 0x184c5a ; push rsi ; pop rdx ; je 0x184c4f ; ret 0xacfc
0x0000000000195edc : xchg eax, edx ; jge 0x195ede ; call qword ptr [rdx]
0x0000000000195ee4 : xchg eax, edx ; jl 0x195ee6 ; call qword ptr [rdx]
0x0000000000195eec : xchg eax, edx ; jnp 0x195eee ; call qword ptr [rdx]
0x0000000000195efc : xchg eax, edx ; jns 0x195efe ; call qword ptr [rdx]
0x0000000000195ef4 : xchg eax, edx ; jp 0x195ef6 ; call qword ptr [rdx]
0x00000000001961e0 : xchg eax, edx ; lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rdx]
0x00000000000780ea : xchg eax, edx ; mov edx, eax ; jmp 0x78082
0x00000000001957fc : xchg eax, edx ; pop rbp ; cld ; jmp qword ptr [rdx]
0x0000000000195a0c : xchg eax, edx ; push rcx ; cld ; jmp qword ptr [rdx]
0x000000000003cfc4 : xchg eax, edx ; ret 0x8348
0x00000000000f8aee : xchg eax, edx ; ret 0x970f
0x000000000003d325 : xchg eax, edx ; ret 0xb60f
0x00000000000cd8a1 : xchg eax, edx ; ret 0xd029
0x00000000000d85c9 : xchg eax, edx ; ret 0xd138
0x000000000014a5fd : xchg eax, edx ; ret 0xf40
0x0000000000182d6f : xchg eax, edx ; ret 0xf869
0x0000000000145a07 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000195ce8 : xchg eax, edx ; test edi, esp ; jmp qword ptr [rdx]
0x000000000007e54c : xchg eax, esi ; add al, 0 ; add byte ptr [rcx - 0xa], al ; ret
0x000000000016e710 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000015a7f3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000019716d : xchg eax, esi ; add byte ptr [rax], al ; push rsp ; adc al, 0xeb ; call rsp
0x00000000000025ae : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000000abc96 : xchg eax, esi ; cmc ; add byte ptr [rax], al ; ret
0x000000000016e7cd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e72b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d7303 : xchg eax, esi ; pop rbx ; ret
0x0000000000033506 : xchg eax, esi ; ret
0x00000000000362cc : xchg eax, esi ; ret 0x394c
0x000000000008b374 : xchg eax, esi ; ret 0xc031
0x000000000018560c : xchg eax, esi ; ret 0xcd11
0x0000000000123bf7 : xchg eax, esi ; ret 0xfb83
0x000000000016e77c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000bea6d : xchg eax, esi ; sti ; dec dword ptr [rax + 0x39] ; ret
0x000000000019cc8c : xchg eax, esp ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; jno 0x19cc97 ; jmp qword ptr [rdi]
0x000000000019a3b0 : xchg eax, esp ; adc edi, eax ; call rsp
0x00000000000e0794 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x00000000001b0a8c : xchg eax, esp ; add qword ptr [r8], r8 ; shr byte ptr [rdi - 0xb], 1 ; jmp qword ptr [rcx]
0x00000000000e5c86 : xchg eax, esp ; and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000b525c : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e0792 : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x8f0f
0x0000000000071867 : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001989b8 : xchg eax, esp ; and dh, bl ; jmp rsp
0x0000000000196810 : xchg eax, esp ; and ecx, ebp ; call rsp
0x000000000018888d : xchg eax, esp ; call rdx
0x000000000019a8c4 : xchg eax, esp ; cmc ; add dword ptr [rax], eax ; and al, 0xdb ; clc ; call rsp
0x0000000000198a2c : xchg eax, esp ; cmp eax, 0x32a40001 ; jmp rsp
0x00000000001975f1 : xchg eax, esp ; in eax, dx ; jmp rsp
0x0000000000196b58 : xchg eax, esp ; loope 0x196b47 ; call rsp
0x0000000000197624 : xchg eax, esp ; mov bh, 0 ; add byte ptr [rsp + rbx*4 - 0x13], dl ; call rsp
0x00000000001a738c : xchg eax, esp ; mov eax, 0x1d00000 ; out dx, eax ; jmp rsi
0x00000000001981d9 : xchg eax, esp ; out dx, eax ; call rsp
0x00000000000d72d1 : xchg eax, esp ; pop rbx ; ret
0x0000000000198510 : xchg eax, esp ; pop rsp ; int1 ; call rsp
0x00000000001b0d8c : xchg eax, esp ; push rdx ; add dword ptr [rax], eax ; loopne 0x1b0e0c ; cmc ; jmp qword ptr [rcx]
0x000000000018581f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1857b0 ; ret 0x48f
0x000000000004727e : xchg eax, esp ; ret
0x00000000001a7d8c : xchg eax, esp ; ret 0
0x00000000000ed570 : xchg eax, esp ; ret 0x1589
0x00000000000b16b4 : xchg eax, esp ; ret 0x2041
0x00000000000b2d8d : xchg eax, esp ; ret 0x294c
0x00000000000e2d99 : xchg eax, esp ; ret 0x2fe9
0x00000000000bbcfd : xchg eax, esp ; ret 0x3840
0x000000000009ec1e : xchg eax, esp ; ret 0x3941
0x0000000000124d47 : xchg eax, esp ; ret 0x3945
0x00000000000e3f8f : xchg eax, esp ; ret 0x3ae9
0x0000000000136cd8 : xchg eax, esp ; ret 0x3d83
0x00000000000d8da3 : xchg eax, esp ; ret 0x4422
0x00000000000edc6b : xchg eax, esp ; ret 0x5408
0x00000000000bbdca : xchg eax, esp ; ret 0x5438
0x0000000000059903 : xchg eax, esp ; ret 0x7f3c
0x00000000000817de : xchg eax, esp ; ret 0x82e9
0x0000000000046da9 : xchg eax, esp ; ret 0x8341
0x0000000000026ec5 : xchg eax, esp ; ret 0x8348
0x000000000011180d : xchg eax, esp ; ret 0x840
0x00000000000977a7 : xchg eax, esp ; ret 0x8440
0x00000000000aa965 : xchg eax, esp ; ret 0x8444
0x00000000000973d6 : xchg eax, esp ; ret 0x8445
0x000000000011d71c : xchg eax, esp ; ret 0x8545
0x00000000000e207b : xchg eax, esp ; ret 0x854d
0x00000000000e0b8a : xchg eax, esp ; ret 0x8941
0x00000000000e2ac5 : xchg eax, esp ; ret 0x8949
0x0000000000020777 : xchg eax, esp ; ret 0x8d48
0x0000000000126d02 : xchg eax, esp ; ret 0x93c
0x000000000004c390 : xchg eax, esp ; ret 0x9522
0x00000000000e3f2b : xchg eax, esp ; ret 0x9848
0x000000000002f458 : xchg eax, esp ; ret 0xb60f
0x00000000000dbb41 : xchg eax, esp ; ret 0xc031
0x000000000011f9c5 : xchg eax, esp ; ret 0xc085
0x00000000000e4ecd : xchg eax, esp ; ret 0xc683
0x00000000000d9c2f : xchg eax, esp ; ret 0xd009
0x00000000000bbf62 : xchg eax, esp ; ret 0xd021
0x0000000000046dbe : xchg eax, esp ; ret 0xd084
0x00000000000fe9f3 : xchg eax, esp ; ret 0xd108
0x000000000002086c : xchg eax, esp ; ret 0xd284
0x000000000009ee1f : xchg eax, esp ; ret 0xd308
0x0000000000061a96 : xchg eax, esp ; ret 0xd309
0x00000000000e0b82 : xchg eax, esp ; ret 0xd609
0x000000000006ffbc : xchg eax, esp ; ret 0xdaf7
0x00000000000ec6cd : xchg eax, esp ; ret 0xf0e9
0x000000000008b3f8 : xchg eax, esp ; ret 0xf201
0x00000000000e3e9f : xchg eax, esp ; ret 0xf44
0x000000000011d902 : xchg eax, esp ; ret 0xf741
0x00000000000aed84 : xchg eax, esp ; ret 0xf883
0x00000000000d2acc : xchg eax, esp ; ret 0xf983
0x00000000000523bf : xchg eax, esp ; ret 0xfa80
0x00000000000aa8c7 : xchg eax, esp ; ret 0xfd83
0x00000000000aa8e8 : xchg eax, esp ; ret 0xfe83
0x000000000019a0ac : xchg eax, esp ; ret 1
0x00000000000acd6c : xchg eax, esp ; rol bl, 0x90 ; mov eax, 1 ; ret
0x00000000000954d0 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f891f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000000453b3 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000013c319 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000fea4a : xchg eax, esp ; sar dword ptr [rax], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000000fe9ee : xchg eax, esp ; sar dword ptr [rsp + rbx*2], 0xf ; xchg eax, esp ; ret 0xd108
0x00000000001bb3e9 : xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x000000000019af84 : xchg eax, esp ; sub eax, dword ptr [rdx] ; add byte ptr [rbx + rdi*8 - 7], al ; jmp rsp
0x0000000000113d8e : xchg eax, r8d ; mov eax, dword ptr [rbx + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000008767a : xchg ebp, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001b1409 : xchg ebp, esi ; jmp rax
0x00000000001bc179 : xchg ebx, edi ; call rcx
0x00000000001ac689 : xchg ebx, esi ; call qword ptr [rsi]
0x000000000019ac91 : xchg ecx, edi ; call rsp
0x0000000000101aec : xchg edi, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007f0c4 : xchg edi, esp ; add al, 0 ; add dh, dh ; ret
0x000000000010206c : xchg edi, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000105e91 : xchg edx, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xbc41
0x0000000000104a8b : xchg edx, edi ; dec dword ptr [rax + 0x39] ; ret
0x0000000000047d65 : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc083
0x0000000000195c19 : xchg esp, edi ; call qword ptr [rax]
0x0000000000195e15 : xchg esp, edi ; jmp qword ptr [rax]
0x0000000000195cd9 : xchg esp, edi ; jmp rdx
0x00000000000cdfef : xchg esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000189569 : xchg esp, esi ; call qword ptr [rax]
0x00000000001ad769 : xchg esp, esi ; call qword ptr [rsi]
0x0000000000074f11 : xchg rax, rbp ; add byte ptr [rcx - 0x7cb768f4], cl ; ret 0x4801
0x0000000000195e20 : xchg spl, dil ; call rax
0x00000000000befe5 : xlatb ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001a92dd : xlatb ; add byte ptr [rax], al ; jo 0x1a930c ; int1 ; jmp rcx
0x0000000000180219 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000150f79 : xlatb ; add r9, r11 ; jmp r9
0x00000000000368be : xlatb ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000368af : xlatb ; cmp byte ptr [rax], al ; ret
0x00000000000fcdf2 : xlatb ; ja 0xfce24 ; ret
0x00000000000ff2f5 : xlatb ; jge 0xff32d ; add byte ptr [rcx - 0x3a], al ; inc dword ptr [rax] ; ret
0x0000000000115169 : xlatb ; jmp rax
0x0000000000183de3 : xlatb ; jo 0x183e5f ; mov ebp, 0xfb67d10d ; ret
0x000000000004a772 : xlatb ; mov byte ptr [rsi], al ; jne 0x4a758 ; mov rax, rsi ; ret
0x0000000000123f36 : xlatb ; mov qword ptr [r9], rdi ; ret
0x0000000000089bf9 : xlatb ; ret
0x0000000000185286 : xlatb ; ret 0x4e27
0x0000000000003268 : xlatb ; ret 0x5a51
0x000000000008d5c7 : xlatb ; ret 0x94c
0x000000000008e93f : xlatb ; ret 0xc085
0x0000000000089bf0 : xlatb ; ret 0xc148
0x000000000009f22b : xlatb ; ret 0xf188
0x000000000008b774 : xlatb ; ret 0xf66
0x00000000000966d1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000009f0c6 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000a605e : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000001708c6 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000009f024 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000008b0c6 : xlatb ; sal bh, 1 ; ret 0x8000
0x000000000008af86 : xlatb ; sal bh, 1 ; ret 0xc000
0x000000000008ae46 : xlatb ; sal bh, 1 ; ret 0xe000
0x000000000008ad06 : xlatb ; sal bh, 1 ; ret 0xf000
0x000000000008abc6 : xlatb ; sal bh, 1 ; ret 0xf800
0x000000000008aa86 : xlatb ; sal bh, 1 ; ret 0xfc00
0x000000000008a946 : xlatb ; sal bh, 1 ; ret 0xfe00
0x000000000008a806 : xlatb ; sal bh, 1 ; ret 0xff00
0x000000000008a6c6 : xlatb ; sal bh, 1 ; ret 0xff80
0x000000000008a586 : xlatb ; sal bh, 1 ; ret 0xffc0
0x000000000008a446 : xlatb ; sal bh, 1 ; ret 0xffe0
0x000000000008a306 : xlatb ; sal bh, 1 ; ret 0xfff0
0x000000000008a1c6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x000000000008a086 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000089f46 : xlatb ; sal bh, 1 ; ret 0xfffe
0x00000000001708c2 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x000000000008d565 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008d576 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000195271 : xlatb ; sti ; push qword ptr [rax] ; fsincos ; call qword ptr [rax]
0x0000000000195291 : xlatb ; sti ; push rax ; fdivr st(3) ; call rax
0x0000000000035f68 : xlatb ; xor eax, eax ; ret
0x0000000000195534 : xor ah, 0xfb ; call rax
0x00000000000a5858 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000a57ee : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000025e0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2579 ; loop 0x25c4 ; ret 0x23cb
0x000000000013ccd1 : xor al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000d7b0 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000007cc19 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a37b0 : xor al, 0 ; add byte ptr [rax], al ; mov esp, 0xe00007c ; ret 0xffe7
0x000000000007cba6 : xor al, 0 ; add dword ptr [rip + 0x349bb5], 1 ; ret
0x000000000007ef50 : xor al, 0 ; jne 0x7ef68 ; jmp 0x7ef82
0x0000000000083b61 : xor al, 0 ; jne 0x83b78 ; jmp 0x83b92
0x000000000008194e : xor al, 0 ; mov qword ptr [rsp + 0x10], r8 ; xor edi, edi ; call qword ptr [rax]
0x0000000000081864 : xor al, 0 ; mov rdi, r14 ; call qword ptr [rax]
0x000000000007cb15 : xor al, 0 ; ret
0x0000000000081a89 : xor al, 0 ; xor edi, edi ; call qword ptr [rax]
0x0000000000182d6a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000019a468 : xor al, 0x21 ; clc ; jmp rsp
0x000000000019df2c : xor al, 0x24 ; add byte ptr [rax], al ; and byte ptr [rcx - 0x17], dh ; call qword ptr [rcx]
0x0000000000096aeb : xor al, 0x24 ; test rsi, rsi ; jne 0x96b04 ; jmp 0x96abe
0x00000000000de472 : xor al, 0x2b ; call 0x94478
0x000000000019f22c : xor al, 0x37 ; add byte ptr [rax], al ; rol cl, 0xe9 ; call qword ptr [rdx]
0x0000000000002051 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000009f14b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000019b2a0 : xor al, 0x53 ; cli ; call rsp
0x0000000000189e88 : xor al, 0x63 ; cmc ; inc dword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189da4 : xor al, 0x63 ; cmc ; jmp qword ptr [rbx]
0x0000000000189e78 : xor al, 0x63 ; cmc ; jmp rsi
0x0000000000189da0 : xor al, 0x63 ; cmc ; push qword ptr [rbx] ; cmc ; jmp qword ptr [rbx]
0x0000000000189e74 : xor al, 0x63 ; cmc ; push qword ptr [rbx] ; cmc ; jmp rsi
0x000000000019b968 : xor al, 0x77 ; std ; call rsp
0x00000000001a90a4 : xor al, 0x80 ; add byte ptr [rax], al ; clc ; sbb esi, ecx ; jmp qword ptr [rcx]
0x00000000000aac91 : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x00000000000e5952 : xor al, 0x83 ; ret 0x4401
0x000000000018870c : xor al, 0x84 ; jmp qword ptr [rsi]
0x000000000019ac90 : xor al, 0x87 ; stc ; call rsp
0x00000000000e8ff3 : xor al, 0x89 ; ret 0x4489
0x000000000003295d : xor al, 0x89 ; ret 0x5525
0x00000000000aac59 : xor al, 0x90 ; add rax, rsi ; jmp rax
0x00000000000c52d4 : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x00000000000c5262 : xor al, 0xb2 ; add rdx, rsi ; jmp rdx
0x00000000001b712c : xor al, 0xb6 ; add dword ptr [rax], eax ; xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000000d7645 : xor al, 0xb6 ; cmp r8d, esi ; jge 0xd7628 ; mov edx, eax ; jmp 0xd7631
0x000000000006ca9f : xor al, 0xb7 ; add rdi, rsi ; jmp rdi
0x0000000000033410 : xor al, 0xb7 ; add rsi, rdi ; jmp rsi
0x000000000019ad98 : xor al, 0xb7 ; stc ; call rsp
0x000000000019a094 : xor al, 0xc2 ; add dword ptr [rax], eax ; and al, 0xe3 ; idiv edi ; ret 1
0x0000000000188fec : xor al, 0xc4 ; jmp qword ptr [rcx]
0x00000000001a832c : xor al, 0xc8 ; add byte ptr [rax], al ; xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x0000000000183f4a : xor al, 0xd8 ; ret
0x00000000001a942c : xor al, 0xd9 ; add byte ptr [rax], al ; adc dword ptr [rdi], ebp ; int1 ; jmp qword ptr [rax]
0x000000000019a890 : xor al, 0xd9 ; clc ; call rsp
0x000000000019ba70 : xor al, 0xdf ; std ; call rsp
0x00000000000b44e4 : xor al, 0xe9 ; ret 6
0x00000000001a61f1 : xor al, 0xee ; jmp qword ptr [rcx]
0x00000000001aac2c : xor al, 0xf1 ; add byte ptr [rax], al ; rcl byte ptr [rdx + rsi*8], 1 ; call qword ptr [rdx]
0x00000000001ab42c : xor al, 0xf9 ; add byte ptr [rax], al ; nop ; call rbx
0x0000000000195bd1 : xor al, 0xfc ; call qword ptr [rax + 0x10fffc35]
0x000000000019562d : xor al, 0xfc ; call qword ptr [rax]
0x000000000019564d : xor al, 0xfc ; call rax
0x00000000001aef6d : xor al, 1 ; add byte ptr [rax - 0x14], al ; hlt ; jmp qword ptr [rcx]
0x00000000001aef85 : xor al, 1 ; add byte ptr [rax - 0x14], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001aef25 : xor al, 1 ; add byte ptr [rax - 0x15], cl ; hlt ; jmp rdx
0x00000000000abb28 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000001aef55 : xor al, 1 ; add byte ptr [rax], ch ; in al, dx ; hlt ; jmp qword ptr [rcx]
0x000000000004baaf : xor al, 2 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000080fdd : xor al, 2 ; add byte ptr [rax], al ; call 0x7d286
0x000000000019b0b5 : xor al, 2 ; add byte ptr [rdx], dl ; cli ; call rsp
0x000000000019afa0 : xor al, 3 ; cli ; call rsp
0x00000000001a5220 : xor al, al ; in eax, dx ; jmp qword ptr [rsi]
0x000000000010752b : xor al, al ; or eax, edi ; ret
0x00000000001aed05 : xor al, byte ptr [rcx] ; add al, cl ; out 0xf4, al ; jmp qword ptr [rbx]
0x00000000001aedb5 : xor al, byte ptr [rcx] ; add byte ptr [rax - 0x19], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001aed65 : xor al, byte ptr [rcx] ; add byte ptr [rax], ch ; out -0xc, eax ; jmp qword ptr [rcx]
0x00000000000be4d2 : xor al, byte ptr [rsi - 0x76b7ffd0] ; jmp 0xffffffffbece6e2e
0x0000000000112283 : xor al, ch ; xchg eax, edi ; ret
0x00000000000fb568 : xor ax, ax ; ret
0x0000000000195649 : xor bh, ah ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x00000000001ae9f0 : xor bh, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000195240 : xor bh, bl ; sti ; call qword ptr [rax]
0x0000000000195290 : xor bh, dl ; sti ; push rax ; fdivr st(3) ; call rax
0x0000000000111e6a : xor bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001aebb0 : xor bl, ah ; hlt ; call qword ptr [rsi]
0x000000000008eb9c : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000196400 : xor bl, byte ptr [rdi - 0x615d0004] ; cld ; call qword ptr [rdx]
0x0000000000128ec8 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000abc1c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008ea5d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000047bb7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x47c2d ; xor eax, eax ; ret
0x000000000012e882 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x0000000000110c41 : xor byte ptr [rax + 0x39], cl ; ret 0xe975
0x00000000000c45eb : xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000000f5cbf : xor byte ptr [rax + 0x63], cl ; ret 0xc283
0x0000000000089b01 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000009f126 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000001a3870 : xor byte ptr [rax - 0x13], al ; jmp rsi
0x000000000012b977 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d3c1 ; pop rbx ; ret
0x000000000012b93f : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d3f9 ; pop rbx ; ret
0x000000000012b880 : xor byte ptr [rax - 0x73], cl ; add eax, 0x29d4b8 ; pop rbx ; ret
0x00000000000a8737 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000047f48 : xor byte ptr [rax - 0x75], cl ; jbe 0x47fc4 ; xor eax, eax ; ret
0x00000000000be444 : xor byte ptr [rax - 0x75], cl ; je 0xbe475 ; cmp byte ptr [rcx + 1], cl ; ret
0x0000000000047bb8 : xor byte ptr [rax - 0x75], cl ; jg 0x47c2c ; xor eax, eax ; ret
0x0000000000047f47 : xor byte ptr [rax - 0x75], r9b ; jbe 0x47fc5 ; xor eax, eax ; ret
0x0000000000089a2f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000013c2aa : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000b05c0 : xor byte ptr [rax - 0x77], cl ; call 0x4ccd9add
0x00000000000b5a68 : xor byte ptr [rax - 0x77], cl ; call 0x4ccdef85
0x00000000000c8b09 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x00000000000ad55d : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000135b78 : xor byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x10] ; call rcx
0x0000000000076ba3 : xor byte ptr [rax - 0x77], cl ; push rbx ; sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000306c1 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000cfc56 : xor byte ptr [rax - 0x77], cl ; ret 0x8040
0x00000000000e0f7c : xor byte ptr [rax - 0x77], cl ; ret 0x8041
0x000000000012e883 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d71de : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000072b62 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000128ec9 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000332f5 : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001b0af0 : xor byte ptr [rax - 0xb], dh ; jmp qword ptr [rcx]
0x00000000000746ad : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000020b89 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000008d858 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x000000000002084e : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000039fca : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000035323 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000003a5f4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x000000000002f6d4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x00000000000aacb5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011582b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x115869 ; call rax
0x000000000004d399 : xor byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000000bd08a : xor byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb7e1 : xor byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001954b4 : xor byte ptr [rax], al ; cld ; inc dword ptr [rax] ; add bh, ah ; jmp rax
0x0000000000072aaa : xor byte ptr [rax], al ; je 0x72ab4 ; ret
0x00000000000beb61 : xor byte ptr [rax], al ; lea rcx, qword ptr [rax + r12] ; mov rdx, rax ; jmp 0xbeb78
0x0000000000143f0b : xor byte ptr [rax], ch ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000195570 : xor byte ptr [rax], ch ; cld ; push rax ; sub esp, edi ; call rax
0x0000000000194e68 : xor byte ptr [rax], ch ; sti ; call rax
0x00000000000a9fb7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000abc20 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000abc1f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000007bc60 : xor byte ptr [rbp + 0xd], 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000019bbe0 : xor byte ptr [rbp - 0x18], cl ; call qword ptr [rsi]
0x000000000017394b : xor byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000000000008557c : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001219fc : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001a52ff : xor byte ptr [rbx + 0xaea0206], al ; ret
0x00000000000e8fee : xor byte ptr [rbx + r9*4 + 0x46], r8b ; xor al, 0x89 ; ret 0x4489
0x00000000000e8fef : xor byte ptr [rbx + rcx*4 + 0x46], al ; xor al, 0x89 ; ret 0x4489
0x000000000008f75b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000007bfce : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x000000000012b84d : xor byte ptr [rbx - 0x3d], bl ; ret
0x00000000001b3bb0 : xor byte ptr [rbx - 0xa], cl ; call qword ptr [rax]
0x0000000000194de0 : xor byte ptr [rbx], al ; sti ; inc dword ptr [rax] ; add al, 0xfb ; call rax
0x00000000000abc1d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001955f8 : xor byte ptr [rbx], ch ; cld ; call qword ptr [rax]
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x0000000000194f84 : xor byte ptr [rcx - 0x5ddf0003], ah ; std ; call qword ptr [rax]
0x000000000003ce9e : xor byte ptr [rcx - 0x77], al ; ret 0x8d48
0x0000000000051377 : xor byte ptr [rcx - 0x7d], al ; std ; xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010f75f : xor byte ptr [rcx - 0x7d], cl ; ret 0x4801
0x00000000000e0fbe : xor byte ptr [rcx - 0x80], al ; stc ; adc dword ptr [rsi + rsi + 0x48], esi ; mov edx, eax ; jmp 0xe0f68
0x00000000000fc38c : xor byte ptr [rcx], 0xc0 ; ret
0x00000000000746ae : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000784b7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006dcb9 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000001aebc5 : xor byte ptr [rcx], al ; add byte ptr [rax], bh ; jrcxz 0x1aebc5 ; jmp qword ptr [rcx]
0x00000000001aebad : xor byte ptr [rcx], al ; add byte ptr [rax], dh ; jrcxz 0x1aebad ; call qword ptr [rsi]
0x00000000000668fa : xor byte ptr [rcx], dh ; imul cl ; ret
0x0000000000121a2b : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000010a69a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000017584c : xor byte ptr [rdi - 0x15], ah ; jmp rax
0x00000000001b7130 : xor byte ptr [rdi - 9], al ; jmp qword ptr [rcx]
0x00000000000840a8 : xor byte ptr [rdi], ah ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001af9b0 : xor byte ptr [rdi], bl ; cmc ; jmp qword ptr [rcx]
0x0000000000101b31 : xor byte ptr [rdi], cl ; lahf ; ret 0xe883
0x0000000000071cc0 : xor byte ptr [rdi], cl ; ret 0x4389
0x0000000000051342 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000fa39d : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8445
0x000000000008b3f6 : xor byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf201
0x0000000000095cfc : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000112385 : xor byte ptr [rdx + 5], bh ; call 0x2e628
0x00000000001a8330 : xor byte ptr [rdx - 0x10], cl ; call qword ptr [rsi]
0x00000000001a5c17 : xor byte ptr [rdx], al ; ret
0x00000000001a9cb7 : xor byte ptr [rdx], al ; ret 0xe0a
0x0000000000194e90 : xor byte ptr [rdx], bh ; sti ; call qword ptr [rax]
0x0000000000194e30 : xor byte ptr [rip + 0x1620fffb], dl ; sti ; call qword ptr [rax]
0x000000000019558c : xor byte ptr [rip + 0x2810fffc], 0xfc ; call rax
0x000000000016e4bf : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000008d52c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008ea5e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000000ac88 : xor byte ptr [rsi + 7], dh ; add byte ptr [rax], al ; ret
0x0000000000175834 : xor byte ptr [rsi - 0x15], ah ; inc dword ptr [rax + 0x67] ; jmp 0x175842
0x0000000000175848 : xor byte ptr [rsi - 0x15], ah ; push qword ptr [rax] ; jmp 0x175856
0x0000000000038fea : xor byte ptr [rsi - 0x73], cl ; cmp al, 0x33 ; call rax
0x00000000001b4060 : xor byte ptr [rsi - 0xa], dl ; call qword ptr [rcx]
0x00000000000f642c : xor byte ptr [rsi - 3], ch ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000019562c : xor byte ptr [rsp + rdi*8], 0xff ; adc byte ptr [rdi], ah ; cld ; call rax
0x000000000019549c : xor byte ptr [rsp + rdi*8], al ; jmp qword ptr [rax]
0x00000000001abd80 : xor ch, ah ; call qword ptr [rsi]
0x0000000000198011 : xor ch, bh ; call rsp
0x00000000000e56c0 : xor ch, byte ptr [rcx] ; ret
0x00000000000a9d48 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a9d5e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a9d80 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a9d9e : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a9dbe : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a9de4 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a9e00 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a9e20 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a9e40 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a9e66 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a9e88 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a9ea6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a9ec6 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a9ee2 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a9f02 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a9f22 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a9f42 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a9f68 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a9fb8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a9c8e : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a9cac : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a9ccc : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a9cee : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a9d0e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a9d2e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a9bc4 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a9bd6 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a9bec : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a9c04 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a9c1a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a9c2c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a9c4a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a9c56 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a9c6c : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a9bb0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000195274 : xor cl, bl ; sti ; call qword ptr [rax]
0x00000000000961eb : xor cl, byte ptr [rax + 0x39] ; ret
0x00000000000c45e6 : xor cl, byte ptr [rax - 0x75] ; jl 0xc4617 ; xor byte ptr [rax + 0x63], cl ; ret 0x894c
0x00000000001322ef : xor cl, byte ptr [rax - 0x77] ; jp 0x132301 ; ret
0x000000000013505f : xor cl, byte ptr [rax - 0x77] ; jp 0x135071 ; ret
0x0000000000135077 : xor cl, byte ptr [rax - 0x77] ; jp 0x135089 ; ret
0x00000000001358af : xor cl, byte ptr [rax - 0x77] ; jp 0x1358c1 ; ret
0x00000000001358c7 : xor cl, byte ptr [rax - 0x77] ; jp 0x1358d9 ; ret
0x00000000001358f7 : xor cl, byte ptr [rax - 0x77] ; jp 0x135909 ; ret
0x00000000000e770d : xor cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x0000000000130cfc : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000010de21 : xor cl, byte ptr [rdi] ; mov dh, 0x4f ; add dword ptr [rcx - 0x7d], ecx ; ret 0x8408
0x0000000000103732 : xor cl, byte ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000110a41 : xor cl, ch ; ret
0x00000000000a56d0 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a94c1 : xor cl, dh ; jmp qword ptr [rcx]
0x0000000000198a31 : xor dh, bl ; jmp rsp
0x0000000000128634 : xor dh, dh ; dec dword ptr [rax + 0x39] ; ret
0x000000000012f7c4 : xor dh, dh ; ret 0xc707
0x0000000000195648 : xor dil, spl ; inc dword ptr [rax + 0x34] ; cld ; call rax
0x00000000001af160 : xor dl, 0xf4 ; jmp qword ptr [rsi]
0x00000000001892e8 : xor dl, byte ptr [rax - 0xc] ; lcall ptr [rcx] ; push rbp ; hlt ; jmp qword ptr [rbx]
0x000000000002d8ff : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000872a5 : xor dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000000ac87b : xor dword ptr [rax + rax], ecx ; ret
0x0000000000052bcd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xf7e9
0x000000000009ed1e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000000d18be : xor dword ptr [rax - 0x7d], ecx ; ret
0x00000000000cac3b : xor dword ptr [rbx - 0x76b7ffd1], ebp ; ret 0x9ce9
0x000000000009cbe9 : xor dword ptr [rcx - 0x7d], ecx ; ret
0x000000000019b035 : xor dword ptr [rdx], eax ; add byte ptr [rcx + rbx - 6], ah ; jmp rsp
0x00000000001289b3 : xor dword ptr [rsi + 0x48640029], esi ; mov eax, dword ptr [rax] ; ret
0x0000000000103bd3 : xor dword ptr [rsi], eax ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000004e618 : xor eax, 0x1304 ; add rax, rsi ; jmp rax
0x00000000000450e0 : xor eax, 0x1cb ; call rax
0x00000000000fc193 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000019558d : xor eax, 0x2810fffc ; cld ; call rax
0x000000000006f21b : xor eax, 0x30 ; call rax
0x0000000000063b68 : xor eax, 0x360403 ; call rax
0x000000000005be5a : xor eax, 0x368111 ; call rax
0x000000000005b804 : xor eax, 0x368767 ; call rax
0x0000000000195b95 : xor eax, 0x3690fffc ; cld ; call qword ptr [rax]
0x000000000005004c : xor eax, 0x373f1f ; call rax
0x000000000004d3d0 : xor eax, 0x376b9b ; call rax
0x0000000000078181 : xor eax, 0x39480000 ; ret
0x00000000000419ca : xor eax, 0x40b9 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000006c41d : xor eax, 0x48b4800 ; ret 0x8548
0x0000000000102a6f : xor eax, 0x49fff1ce ; mov edi, dword ptr [rsi] ; call rbx
0x00000000001bc6d3 : xor eax, 0x78d0000 ; rol byte ptr [rcx], cl ; ret 0xa
0x0000000000002479 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x00000000000582e5 : xor eax, 0xf6ffffee ; ret 0xf10
0x000000000007c74b : xor eax, 0xffffe1e0 ; call rax
0x000000000007c2fb : xor eax, 0xffffe630 ; call rax
0x000000000007bf0b : xor eax, 0xffffea20 ; call rax
0x000000000007aeab : xor eax, 0xfffffa80 ; call rax
0x000000000007ac3b : xor eax, 0xfffffcf0 ; call rax
0x000000000006f514 : xor eax, 0xfffffd37 ; call rax
0x000000000002084b : xor eax, dword ptr [0x30] ; call rax
0x0000000000035320 : xor eax, dword ptr [0x30] ; jmp rax
0x000000000004d396 : xor eax, dword ptr [0x30] ; xor esi, esi ; call rax
0x0000000000088482 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x0000000000088708 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000885f1 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008e73c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000886a4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008d7da : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000084113 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008921d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008958d : xor eax, dword ptr [rax] ; mov qword ptr [rsp], rax ; call qword ptr [rdx]
0x0000000000085814 : xor eax, dword ptr [rax] ; test eax, eax ; js 0x85827 ; ret
0x00000000001aeebd : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x17], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001aee45 : xor eax, dword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x00000000000c78b0 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001337cc : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bf782 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001221d5 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011eaa8 : xor eax, eax ; add rsp, 0x28 ; ret
0x0000000000137095 : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000143dc8 : xor eax, eax ; add rsp, 0x38 ; ret
0x000000000014362f : xor eax, eax ; add rsp, 0x48 ; ret
0x000000000003a08c : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bb80e : xor eax, eax ; add rsp, 8 ; ret
0x000000000002df30 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x000000000013b451 : xor eax, eax ; call r8
0x0000000000075297 : xor eax, eax ; call rbx
0x000000000013b49b : xor eax, eax ; call rcx
0x000000000013c2b0 : xor eax, eax ; call rdx
0x000000000003a6c6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x3a6d8 ; pop rbx ; ret
0x00000000000d72cc : xor eax, eax ; cmp cl, byte ptr [rsi] ; je 0xd726d ; pop rbx ; ret
0x000000000010a69b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000d16a4 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000001024aa : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x1024c1 ; pop rbx ; ret
0x00000000000fcdee : xor eax, eax ; cmp rdi, rdx ; ja 0xfce28 ; ret
0x000000000013bd6c : xor eax, eax ; cmp rdx, rcx ; je 0x13bd88 ; ret
0x0000000000114a67 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000adfd2 : xor eax, eax ; jmp 0xaddb9
0x00000000000ae3e1 : xor eax, eax ; jmp 0xae219
0x000000000012e100 : xor eax, eax ; jmp rcx
0x0000000000115b35 : xor eax, eax ; leave ; ret
0x00000000001240f8 : xor eax, eax ; mov byte ptr [rsi + 3], r11b ; pop rbx ; ret
0x000000000012300d : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000fc320 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000003ac82 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000009ed48 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000115991 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000012a2da : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000013a748 : xor eax, eax ; mov rdi, rbp ; add rbx, r12 ; call r14
0x00000000000d5166 : xor eax, eax ; mov rdx, r8 ; jmp 0xd518b
0x0000000000132d87 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003b370 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x000000000006e7e9 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fb75 : xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000cd407 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000012bf22 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000012d70f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000022b4f : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bb568 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000003a26d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ac54 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000033ee6 : xor eax, eax ; pop rbx ; ret
0x0000000000123de6 : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000001fb7b : xor eax, eax ; ret
0x000000000009f80e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000077410 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000077420 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000aac08 : xor eax, eax ; test dh, 0xf0 ; je 0xaabdb ; movzx eax, dl ; pop rbx ; ret
0x0000000000036268 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000007a390 : xor eax, eax ; test rdx, rdx ; jne 0x7a3a7 ; ret
0x000000000003afbe : xor eax, ecx ; ret
0x000000000003a637 : xor eax, edx ; sub eax, edx ; ret
0x000000000003a64b : xor eax, edx ; sub rax, rdx ; ret
0x0000000000189f99 : xor ebp, 0xf581b0ff ; call rax
0x0000000000189f9d : xor ebp, 0xf58ed0ff ; jmp rsi
0x00000000000bcc23 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008851a : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000c849d : xor ecx, dword ptr [rax + 0x39] ; ret 0xdd72
0x0000000000025041 : xor ecx, dword ptr [rax - 0x77] ; ret
0x00000000000f3249 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000096ea5 : xor ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000008926c : xor ecx, dword ptr [rcx + rcx*4 + 0x4b] ; call rcx
0x000000000002c4b2 : xor ecx, eax ; ret 0x4809
0x0000000000029a73 : xor ecx, ecx ; call r15
0x0000000000034a70 : xor ecx, ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000ad074 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000129054 : xor edi, dword ptr [0x30] ; call rax
0x000000000007d8d9 : xor edi, edi ; call qword ptr [r15]
0x0000000000081955 : xor edi, edi ; call qword ptr [rax]
0x00000000000c7595 : xor edi, edi ; call rax
0x000000000007d8aa : xor edi, edi ; mov r13, rdx ; call qword ptr [r15]
0x0000000000195b91 : xor edi, esp ; call qword ptr [rax]
0x00000000001ad0f1 : xor edi, esp ; jmp qword ptr [rax]
0x0000000000039fc7 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000218e3 : xor edx, edx ; add eax, 2 ; push rax ; call rbx
0x00000000000bfe31 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x00000000000504c3 : xor edx, edx ; div ecx ; add eax, r8d ; ret
0x0000000000078189 : xor edx, edx ; div rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000781cc : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001178d9 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; ret
0x00000000000c84be : xor edx, edx ; jmp 0xc8488
0x00000000000ad076 : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000009eddd : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x000000000007ba09 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000007db6c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000008d7b3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000010c997 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x00000000000f6aa0 : xor edx, edx ; xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000001035a1 : xor edx, edx ; xor esi, esi ; mov rbx, rax ; call rax
0x00000000000e4fde : xor esi, esi ; call 0x8f246
0x000000000004d39d : xor esi, esi ; call rax
0x00000000000f6aa2 : xor esi, esi ; lea rdi, qword ptr [rsp + 0xc] ; call rax
0x00000000001027f1 : xor esi, esi ; mov r12d, edx ; mov rbp, rax ; call rax
0x00000000001035a3 : xor esi, esi ; mov rbx, rax ; call rax
0x00000000001035c8 : xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000001035ed : xor esi, esi ; mov rdi, r13 ; call rbx
0x0000000000103611 : xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000103631 : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000e8bde : xor esi, esi ; ret
0x0000000000065b89 : xor esp, esp ; jmp 0x63704
0x0000000000065b88 : xor r12d, r12d ; jmp 0x63705
0x0000000000198010 : xor r13b, dil ; call rsp
0x00000000001aee44 : xor r8, qword ptr [rcx] ; add byte ptr [rax - 0x18], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000075296 : xor r8d, r8d ; call rbx
0x0000000000110a40 : xor r9b, bpl ; ret
0x0000000000029a72 : xor r9d, r9d ; call r15
0x00000000000fc192 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000002084a : xor rax, qword ptr [0x30] ; call rax
0x000000000003531f : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000020849 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003531e : xor rax, qword ptr fs:[0x30] ; jmp rax
0x000000000008b8c5 : xor rax, rax ; ret
0x000000000003a64a : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000129053 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000129052 : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000039fc6 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000039fc5 : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 21179
